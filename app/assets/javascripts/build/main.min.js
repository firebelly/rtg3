Function.prototype.bind || (Function.prototype.bind = function(oThis) {
    if ("function" != typeof this) throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");
    var aArgs = Array.prototype.slice.call(arguments, 1), fToBind = this;
    return fNOP = function() {}, fBound = function() {
        return fToBind.apply(this instanceof fNOP && oThis ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));
    }, fNOP.prototype = this.prototype, fBound.prototype = new fNOP(), fBound;
}), function() {
    function EventEmitter() {}
    function indexOfListener(listeners, listener) {
        for (var i = listeners.length; i--; ) if (listeners[i].listener === listener) return i;
        return -1;
    }
    function alias(name) {
        return function() {
            return this[name].apply(this, arguments);
        };
    }
    var proto = EventEmitter.prototype, exports = this, originalGlobalValue = exports.EventEmitter;
    proto.getListeners = function(evt) {
        var response, key, events = this._getEvents();
        if ("object" == typeof evt) {
            response = {};
            for (key in events) events.hasOwnProperty(key) && evt.test(key) && (response[key] = events[key]);
        } else response = events[evt] || (events[evt] = []);
        return response;
    }, proto.flattenListeners = function(listeners) {
        var i, flatListeners = [];
        for (i = 0; i < listeners.length; i += 1) flatListeners.push(listeners[i].listener);
        return flatListeners;
    }, proto.getListenersAsObject = function(evt) {
        var response, listeners = this.getListeners(evt);
        return listeners instanceof Array && (response = {}, response[evt] = listeners), 
        response || listeners;
    }, proto.addListener = function(evt, listener) {
        var key, listeners = this.getListenersAsObject(evt), listenerIsWrapped = "object" == typeof listener;
        for (key in listeners) listeners.hasOwnProperty(key) && -1 === indexOfListener(listeners[key], listener) && listeners[key].push(listenerIsWrapped ? listener : {
            listener: listener,
            once: !1
        });
        return this;
    }, proto.on = alias("addListener"), proto.addOnceListener = function(evt, listener) {
        return this.addListener(evt, {
            listener: listener,
            once: !0
        });
    }, proto.once = alias("addOnceListener"), proto.defineEvent = function(evt) {
        return this.getListeners(evt), this;
    }, proto.defineEvents = function(evts) {
        for (var i = 0; i < evts.length; i += 1) this.defineEvent(evts[i]);
        return this;
    }, proto.removeListener = function(evt, listener) {
        var index, key, listeners = this.getListenersAsObject(evt);
        for (key in listeners) listeners.hasOwnProperty(key) && (index = indexOfListener(listeners[key], listener), 
        -1 !== index && listeners[key].splice(index, 1));
        return this;
    }, proto.off = alias("removeListener"), proto.addListeners = function(evt, listeners) {
        return this.manipulateListeners(!1, evt, listeners);
    }, proto.removeListeners = function(evt, listeners) {
        return this.manipulateListeners(!0, evt, listeners);
    }, proto.manipulateListeners = function(remove, evt, listeners) {
        var i, value, single = remove ? this.removeListener : this.addListener, multiple = remove ? this.removeListeners : this.addListeners;
        if ("object" != typeof evt || evt instanceof RegExp) for (i = listeners.length; i--; ) single.call(this, evt, listeners[i]); else for (i in evt) evt.hasOwnProperty(i) && (value = evt[i]) && ("function" == typeof value ? single.call(this, i, value) : multiple.call(this, i, value));
        return this;
    }, proto.removeEvent = function(evt) {
        var key, type = typeof evt, events = this._getEvents();
        if ("string" === type) delete events[evt]; else if ("object" === type) for (key in events) events.hasOwnProperty(key) && evt.test(key) && delete events[key]; else delete this._events;
        return this;
    }, proto.removeAllListeners = alias("removeEvent"), proto.emitEvent = function(evt, args) {
        var listener, i, key, response, listeners = this.getListenersAsObject(evt);
        for (key in listeners) if (listeners.hasOwnProperty(key)) for (i = listeners[key].length; i--; ) listener = listeners[key][i], 
        listener.once === !0 && this.removeListener(evt, listener.listener), response = listener.listener.apply(this, args || []), 
        response === this._getOnceReturnValue() && this.removeListener(evt, listener.listener);
        return this;
    }, proto.trigger = alias("emitEvent"), proto.emit = function(evt) {
        var args = Array.prototype.slice.call(arguments, 1);
        return this.emitEvent(evt, args);
    }, proto.setOnceReturnValue = function(value) {
        return this._onceReturnValue = value, this;
    }, proto._getOnceReturnValue = function() {
        return this.hasOwnProperty("_onceReturnValue") ? this._onceReturnValue : !0;
    }, proto._getEvents = function() {
        return this._events || (this._events = {});
    }, EventEmitter.noConflict = function() {
        return exports.EventEmitter = originalGlobalValue, EventEmitter;
    }, "function" == typeof define && define.amd ? define("eventEmitter/EventEmitter", [], function() {
        return EventEmitter;
    }) : "object" == typeof module && module.exports ? module.exports = EventEmitter : this.EventEmitter = EventEmitter;
}.call(this), function(window) {
    function getIEEvent(obj) {
        var event = window.event;
        return event.target = event.target || event.srcElement || obj, event;
    }
    var docElem = document.documentElement, bind = function() {};
    docElem.addEventListener ? bind = function(obj, type, fn) {
        obj.addEventListener(type, fn, !1);
    } : docElem.attachEvent && (bind = function(obj, type, fn) {
        obj[type + fn] = fn.handleEvent ? function() {
            var event = getIEEvent(obj);
            fn.handleEvent.call(fn, event);
        } : function() {
            var event = getIEEvent(obj);
            fn.call(obj, event);
        }, obj.attachEvent("on" + type, obj[type + fn]);
    });
    var unbind = function() {};
    docElem.removeEventListener ? unbind = function(obj, type, fn) {
        obj.removeEventListener(type, fn, !1);
    } : docElem.detachEvent && (unbind = function(obj, type, fn) {
        obj.detachEvent("on" + type, obj[type + fn]);
        try {
            delete obj[type + fn];
        } catch (err) {
            obj[type + fn] = void 0;
        }
    });
    var eventie = {
        bind: bind,
        unbind: unbind
    };
    "function" == typeof define && define.amd ? define("eventie/eventie", eventie) : window.eventie = eventie;
}(this), function(window, factory) {
    "function" == typeof define && define.amd ? define([ "eventEmitter/EventEmitter", "eventie/eventie" ], function(EventEmitter, eventie) {
        return factory(window, EventEmitter, eventie);
    }) : "object" == typeof exports ? module.exports = factory(window, require("wolfy87-eventemitter"), require("eventie")) : window.imagesLoaded = factory(window, window.EventEmitter, window.eventie);
}(window, function(window, EventEmitter, eventie) {
    function extend(a, b) {
        for (var prop in b) a[prop] = b[prop];
        return a;
    }
    function isArray(obj) {
        return "[object Array]" === objToString.call(obj);
    }
    function makeArray(obj) {
        var ary = [];
        if (isArray(obj)) ary = obj; else if ("number" == typeof obj.length) for (var i = 0, len = obj.length; len > i; i++) ary.push(obj[i]); else ary.push(obj);
        return ary;
    }
    function ImagesLoaded(elem, options, onAlways) {
        if (!(this instanceof ImagesLoaded)) return new ImagesLoaded(elem, options);
        "string" == typeof elem && (elem = document.querySelectorAll(elem)), this.elements = makeArray(elem), 
        this.options = extend({}, this.options), "function" == typeof options ? onAlways = options : extend(this.options, options), 
        onAlways && this.on("always", onAlways), this.getImages(), $ && (this.jqDeferred = new $.Deferred());
        var _this = this;
        setTimeout(function() {
            _this.check();
        });
    }
    function LoadingImage(img) {
        this.img = img;
    }
    function Resource(src) {
        this.src = src, cache[src] = this;
    }
    var $ = window.jQuery, console = window.console, hasConsole = "undefined" != typeof console, objToString = Object.prototype.toString;
    ImagesLoaded.prototype = new EventEmitter(), ImagesLoaded.prototype.options = {}, 
    ImagesLoaded.prototype.getImages = function() {
        this.images = [];
        for (var i = 0, len = this.elements.length; len > i; i++) {
            var elem = this.elements[i];
            "IMG" === elem.nodeName && this.addImage(elem);
            var nodeType = elem.nodeType;
            if (nodeType && (1 === nodeType || 9 === nodeType || 11 === nodeType)) for (var childElems = elem.querySelectorAll("img"), j = 0, jLen = childElems.length; jLen > j; j++) {
                var img = childElems[j];
                this.addImage(img);
            }
        }
    }, ImagesLoaded.prototype.addImage = function(img) {
        var loadingImage = new LoadingImage(img);
        this.images.push(loadingImage);
    }, ImagesLoaded.prototype.check = function() {
        function onConfirm(image, message) {
            return _this.options.debug && hasConsole && console.log("confirm", image, message), 
            _this.progress(image), checkedCount++, checkedCount === length && _this.complete(), 
            !0;
        }
        var _this = this, checkedCount = 0, length = this.images.length;
        if (this.hasAnyBroken = !1, !length) return void this.complete();
        for (var i = 0; length > i; i++) {
            var loadingImage = this.images[i];
            loadingImage.on("confirm", onConfirm), loadingImage.check();
        }
    }, ImagesLoaded.prototype.progress = function(image) {
        this.hasAnyBroken = this.hasAnyBroken || !image.isLoaded;
        var _this = this;
        setTimeout(function() {
            _this.emit("progress", _this, image), _this.jqDeferred && _this.jqDeferred.notify && _this.jqDeferred.notify(_this, image);
        });
    }, ImagesLoaded.prototype.complete = function() {
        var eventName = this.hasAnyBroken ? "fail" : "done";
        this.isComplete = !0;
        var _this = this;
        setTimeout(function() {
            if (_this.emit(eventName, _this), _this.emit("always", _this), _this.jqDeferred) {
                var jqMethod = _this.hasAnyBroken ? "reject" : "resolve";
                _this.jqDeferred[jqMethod](_this);
            }
        });
    }, $ && ($.fn.imagesLoaded = function(options, callback) {
        var instance = new ImagesLoaded(this, options, callback);
        return instance.jqDeferred.promise($(this));
    }), LoadingImage.prototype = new EventEmitter(), LoadingImage.prototype.check = function() {
        var resource = cache[this.img.src] || new Resource(this.img.src);
        if (resource.isConfirmed) return void this.confirm(resource.isLoaded, "cached was confirmed");
        if (this.img.complete && void 0 !== this.img.naturalWidth) return void this.confirm(0 !== this.img.naturalWidth, "naturalWidth");
        var _this = this;
        resource.on("confirm", function(resrc, message) {
            return _this.confirm(resrc.isLoaded, message), !0;
        }), resource.check();
    }, LoadingImage.prototype.confirm = function(isLoaded, message) {
        this.isLoaded = isLoaded, this.emit("confirm", this, message);
    };
    var cache = {};
    return Resource.prototype = new EventEmitter(), Resource.prototype.check = function() {
        if (!this.isChecked) {
            var proxyImage = new Image();
            eventie.bind(proxyImage, "load", this), eventie.bind(proxyImage, "error", this), 
            proxyImage.src = this.src, this.isChecked = !0;
        }
    }, Resource.prototype.handleEvent = function(event) {
        var method = "on" + event.type;
        this[method] && this[method](event);
    }, Resource.prototype.onload = function(event) {
        this.confirm(!0, "onload"), this.unbindProxyEvents(event);
    }, Resource.prototype.onerror = function(event) {
        this.confirm(!1, "onerror"), this.unbindProxyEvents(event);
    }, Resource.prototype.confirm = function(isLoaded, message) {
        this.isConfirmed = !0, this.isLoaded = isLoaded, this.emit("confirm", this, message);
    }, Resource.prototype.unbindProxyEvents = function(event) {
        eventie.unbind(event.target, "load", this), eventie.unbind(event.target, "error", this);
    }, ImagesLoaded;
}), jQuery.easing.jswing = jQuery.easing.swing, jQuery.extend(jQuery.easing, {
    def: "easeOutQuad",
    swing: function(x, t, b, c, d) {
        return jQuery.easing[jQuery.easing.def](x, t, b, c, d);
    },
    easeInQuad: function(x, t, b, c, d) {
        return c * (t /= d) * t + b;
    },
    easeOutQuad: function(x, t, b, c, d) {
        return -c * (t /= d) * (t - 2) + b;
    },
    easeInOutQuad: function(x, t, b, c, d) {
        return (t /= d / 2) < 1 ? c / 2 * t * t + b : -c / 2 * (--t * (t - 2) - 1) + b;
    },
    easeInCubic: function(x, t, b, c, d) {
        return c * (t /= d) * t * t + b;
    },
    easeOutCubic: function(x, t, b, c, d) {
        return c * ((t = t / d - 1) * t * t + 1) + b;
    },
    easeInOutCubic: function(x, t, b, c, d) {
        return (t /= d / 2) < 1 ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;
    },
    easeInQuart: function(x, t, b, c, d) {
        return c * (t /= d) * t * t * t + b;
    },
    easeOutQuart: function(x, t, b, c, d) {
        return -c * ((t = t / d - 1) * t * t * t - 1) + b;
    },
    easeInOutQuart: function(x, t, b, c, d) {
        return (t /= d / 2) < 1 ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b;
    },
    easeInQuint: function(x, t, b, c, d) {
        return c * (t /= d) * t * t * t * t + b;
    },
    easeOutQuint: function(x, t, b, c, d) {
        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;
    },
    easeInOutQuint: function(x, t, b, c, d) {
        return (t /= d / 2) < 1 ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b;
    },
    easeInSine: function(x, t, b, c, d) {
        return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;
    },
    easeOutSine: function(x, t, b, c, d) {
        return c * Math.sin(t / d * (Math.PI / 2)) + b;
    },
    easeInOutSine: function(x, t, b, c, d) {
        return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;
    },
    easeInExpo: function(x, t, b, c, d) {
        return 0 == t ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;
    },
    easeOutExpo: function(x, t, b, c, d) {
        return t == d ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;
    },
    easeInOutExpo: function(x, t, b, c, d) {
        return 0 == t ? b : t == d ? b + c : (t /= d / 2) < 1 ? c / 2 * Math.pow(2, 10 * (t - 1)) + b : c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;
    },
    easeInCirc: function(x, t, b, c, d) {
        return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;
    },
    easeOutCirc: function(x, t, b, c, d) {
        return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;
    },
    easeInOutCirc: function(x, t, b, c, d) {
        return (t /= d / 2) < 1 ? -c / 2 * (Math.sqrt(1 - t * t) - 1) + b : c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;
    },
    easeInElastic: function(x, t, b, c, d) {
        var s = 1.70158, p = 0, a = c;
        if (0 == t) return b;
        if (1 == (t /= d)) return b + c;
        if (p || (p = .3 * d), a < Math.abs(c)) {
            a = c;
            var s = p / 4;
        } else var s = p / (2 * Math.PI) * Math.asin(c / a);
        return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin(2 * (t * d - s) * Math.PI / p)) + b;
    },
    easeOutElastic: function(x, t, b, c, d) {
        var s = 1.70158, p = 0, a = c;
        if (0 == t) return b;
        if (1 == (t /= d)) return b + c;
        if (p || (p = .3 * d), a < Math.abs(c)) {
            a = c;
            var s = p / 4;
        } else var s = p / (2 * Math.PI) * Math.asin(c / a);
        return a * Math.pow(2, -10 * t) * Math.sin(2 * (t * d - s) * Math.PI / p) + c + b;
    },
    easeInOutElastic: function(x, t, b, c, d) {
        var s = 1.70158, p = 0, a = c;
        if (0 == t) return b;
        if (2 == (t /= d / 2)) return b + c;
        if (p || (p = .3 * d * 1.5), a < Math.abs(c)) {
            a = c;
            var s = p / 4;
        } else var s = p / (2 * Math.PI) * Math.asin(c / a);
        return 1 > t ? -.5 * a * Math.pow(2, 10 * (t -= 1)) * Math.sin(2 * (t * d - s) * Math.PI / p) + b : a * Math.pow(2, -10 * (t -= 1)) * Math.sin(2 * (t * d - s) * Math.PI / p) * .5 + c + b;
    },
    easeInBack: function(x, t, b, c, d, s) {
        return void 0 == s && (s = 1.70158), c * (t /= d) * t * ((s + 1) * t - s) + b;
    },
    easeOutBack: function(x, t, b, c, d, s) {
        return void 0 == s && (s = 1.70158), c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;
    },
    easeInOutBack: function(x, t, b, c, d, s) {
        return void 0 == s && (s = 1.70158), (t /= d / 2) < 1 ? c / 2 * t * t * (((s *= 1.525) + 1) * t - s) + b : c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;
    },
    easeInBounce: function(x, t, b, c, d) {
        return c - jQuery.easing.easeOutBounce(x, d - t, 0, c, d) + b;
    },
    easeOutBounce: function(x, t, b, c, d) {
        return (t /= d) < 1 / 2.75 ? 7.5625 * c * t * t + b : 2 / 2.75 > t ? c * (7.5625 * (t -= 1.5 / 2.75) * t + .75) + b : 2.5 / 2.75 > t ? c * (7.5625 * (t -= 2.25 / 2.75) * t + .9375) + b : c * (7.5625 * (t -= 2.625 / 2.75) * t + .984375) + b;
    },
    easeInOutBounce: function(x, t, b, c, d) {
        return d / 2 > t ? .5 * jQuery.easing.easeInBounce(x, 2 * t, 0, c, d) + b : .5 * jQuery.easing.easeOutBounce(x, 2 * t - d, 0, c, d) + .5 * c + b;
    }
}), function($) {
    $.flexslider = function(el, options) {
        var slider = $(el);
        slider.vars = $.extend({}, $.flexslider.defaults, options);
        var watchedEventClearTimer, namespace = slider.vars.namespace, msGesture = window.navigator && window.navigator.msPointerEnabled && window.MSGesture, touch = ("ontouchstart" in window || msGesture || window.DocumentTouch && document instanceof DocumentTouch) && slider.vars.touch, eventType = "click touchend MSPointerUp keyup", watchedEvent = "", vertical = "vertical" === slider.vars.direction, reverse = slider.vars.reverse, carousel = slider.vars.itemWidth > 0, fade = "fade" === slider.vars.animation, asNav = "" !== slider.vars.asNavFor, methods = {}, focused = !0;
        $.data(el, "flexslider", slider), methods = {
            init: function() {
                slider.animating = !1, slider.currentSlide = parseInt(slider.vars.startAt ? slider.vars.startAt : 0, 10), 
                isNaN(slider.currentSlide) && (slider.currentSlide = 0), slider.animatingTo = slider.currentSlide, 
                slider.atEnd = 0 === slider.currentSlide || slider.currentSlide === slider.last, 
                slider.containerSelector = slider.vars.selector.substr(0, slider.vars.selector.search(" ")), 
                slider.slides = $(slider.vars.selector, slider), slider.container = $(slider.containerSelector, slider), 
                slider.count = slider.slides.length, slider.syncExists = $(slider.vars.sync).length > 0, 
                "slide" === slider.vars.animation && (slider.vars.animation = "swing"), slider.prop = vertical ? "top" : "marginLeft", 
                slider.args = {}, slider.manualPause = !1, slider.stopped = !1, slider.started = !1, 
                slider.startTimeout = null, slider.transitions = !slider.vars.video && !fade && slider.vars.useCSS && function() {
                    var obj = document.createElement("div"), props = [ "perspectiveProperty", "WebkitPerspective", "MozPerspective", "OPerspective", "msPerspective" ];
                    for (var i in props) if (void 0 !== obj.style[props[i]]) return slider.pfx = props[i].replace("Perspective", "").toLowerCase(), 
                    slider.prop = "-" + slider.pfx + "-transform", !0;
                    return !1;
                }(), slider.ensureAnimationEnd = "", "" !== slider.vars.controlsContainer && (slider.controlsContainer = $(slider.vars.controlsContainer).length > 0 && $(slider.vars.controlsContainer)), 
                "" !== slider.vars.manualControls && (slider.manualControls = $(slider.vars.manualControls).length > 0 && $(slider.vars.manualControls)), 
                slider.vars.randomize && (slider.slides.sort(function() {
                    return Math.round(Math.random()) - .5;
                }), slider.container.empty().append(slider.slides)), slider.doMath(), slider.setup("init"), 
                slider.vars.controlNav && methods.controlNav.setup(), slider.vars.directionNav && methods.directionNav.setup(), 
                slider.vars.keyboard && (1 === $(slider.containerSelector).length || slider.vars.multipleKeyboard) && $(document).bind("keyup", function(event) {
                    var keycode = event.keyCode;
                    if (!slider.animating && (39 === keycode || 37 === keycode)) {
                        var target = 39 === keycode ? slider.getTarget("next") : 37 === keycode ? slider.getTarget("prev") : !1;
                        slider.flexAnimate(target, slider.vars.pauseOnAction);
                    }
                }), slider.vars.mousewheel && slider.bind("mousewheel", function(event, delta) {
                    event.preventDefault();
                    var target = slider.getTarget(0 > delta ? "next" : "prev");
                    slider.flexAnimate(target, slider.vars.pauseOnAction);
                }), slider.vars.pausePlay && methods.pausePlay.setup(), slider.vars.slideshow && slider.vars.pauseInvisible && methods.pauseInvisible.init(), 
                slider.vars.slideshow && (slider.vars.pauseOnHover && slider.hover(function() {
                    slider.manualPlay || slider.manualPause || slider.pause();
                }, function() {
                    slider.manualPause || slider.manualPlay || slider.stopped || slider.play();
                }), slider.vars.pauseInvisible && methods.pauseInvisible.isHidden() || (slider.vars.initDelay > 0 ? slider.startTimeout = setTimeout(slider.play, slider.vars.initDelay) : slider.play())), 
                asNav && methods.asNav.setup(), touch && slider.vars.touch && methods.touch(), (!fade || fade && slider.vars.smoothHeight) && $(window).bind("resize orientationchange focus", methods.resize), 
                slider.find("img").attr("draggable", "false"), setTimeout(function() {
                    slider.vars.start(slider);
                }, 200);
            },
            asNav: {
                setup: function() {
                    slider.asNav = !0, slider.animatingTo = Math.floor(slider.currentSlide / slider.move), 
                    slider.currentItem = slider.currentSlide, slider.slides.removeClass(namespace + "active-slide").eq(slider.currentItem).addClass(namespace + "active-slide"), 
                    msGesture ? (el._slider = slider, slider.slides.each(function() {
                        var that = this;
                        that._gesture = new MSGesture(), that._gesture.target = that, that.addEventListener("MSPointerDown", function(e) {
                            e.preventDefault(), e.currentTarget._gesture && e.currentTarget._gesture.addPointer(e.pointerId);
                        }, !1), that.addEventListener("MSGestureTap", function(e) {
                            e.preventDefault();
                            var $slide = $(this), target = $slide.index();
                            $(slider.vars.asNavFor).data("flexslider").animating || $slide.hasClass("active") || (slider.direction = slider.currentItem < target ? "next" : "prev", 
                            slider.flexAnimate(target, slider.vars.pauseOnAction, !1, !0, !0));
                        });
                    })) : slider.slides.on(eventType, function(e) {
                        e.preventDefault();
                        var $slide = $(this), target = $slide.index(), posFromLeft = $slide.offset().left - $(slider).scrollLeft();
                        0 >= posFromLeft && $slide.hasClass(namespace + "active-slide") ? slider.flexAnimate(slider.getTarget("prev"), !0) : $(slider.vars.asNavFor).data("flexslider").animating || $slide.hasClass(namespace + "active-slide") || (slider.direction = slider.currentItem < target ? "next" : "prev", 
                        slider.flexAnimate(target, slider.vars.pauseOnAction, !1, !0, !0));
                    });
                }
            },
            controlNav: {
                setup: function() {
                    slider.manualControls ? methods.controlNav.setupManual() : methods.controlNav.setupPaging();
                },
                setupPaging: function() {
                    var item, slide, type = "thumbnails" === slider.vars.controlNav ? "control-thumbs" : "control-paging", j = 1;
                    if (slider.controlNavScaffold = $('<ol class="' + namespace + "control-nav " + namespace + type + '"></ol>'), 
                    slider.pagingCount > 1) for (var i = 0; i < slider.pagingCount; i++) {
                        if (slide = slider.slides.eq(i), item = "thumbnails" === slider.vars.controlNav ? '<img src="' + slide.attr("data-thumb") + '"/>' : "<a>" + j + "</a>", 
                        "thumbnails" === slider.vars.controlNav && !0 === slider.vars.thumbCaptions) {
                            var captn = slide.attr("data-thumbcaption");
                            "" != captn && void 0 != captn && (item += '<span class="' + namespace + 'caption">' + captn + "</span>");
                        }
                        slider.controlNavScaffold.append("<li>" + item + "</li>"), j++;
                    }
                    slider.controlsContainer ? $(slider.controlsContainer).append(slider.controlNavScaffold) : slider.append(slider.controlNavScaffold), 
                    methods.controlNav.set(), methods.controlNav.active(), slider.controlNavScaffold.delegate("a, img", eventType, function(event) {
                        if (event.preventDefault(), "" === watchedEvent || watchedEvent === event.type) {
                            var $this = $(this), target = slider.controlNav.index($this);
                            $this.hasClass(namespace + "active") || (slider.direction = target > slider.currentSlide ? "next" : "prev", 
                            slider.flexAnimate(target, slider.vars.pauseOnAction));
                        }
                        "" === watchedEvent && (watchedEvent = event.type), methods.setToClearWatchedEvent();
                    });
                },
                setupManual: function() {
                    slider.controlNav = slider.manualControls, methods.controlNav.active(), slider.controlNav.bind(eventType, function(event) {
                        if (event.preventDefault(), "" === watchedEvent || watchedEvent === event.type) {
                            var $this = $(this), target = slider.controlNav.index($this);
                            $this.hasClass(namespace + "active") || (slider.direction = target > slider.currentSlide ? "next" : "prev", 
                            slider.flexAnimate(target, slider.vars.pauseOnAction));
                        }
                        "" === watchedEvent && (watchedEvent = event.type), methods.setToClearWatchedEvent();
                    });
                },
                set: function() {
                    var selector = "thumbnails" === slider.vars.controlNav ? "img" : "a";
                    slider.controlNav = $("." + namespace + "control-nav li " + selector, slider.controlsContainer ? slider.controlsContainer : slider);
                },
                active: function() {
                    slider.controlNav.removeClass(namespace + "active").eq(slider.animatingTo).addClass(namespace + "active");
                },
                update: function(action, pos) {
                    slider.pagingCount > 1 && "add" === action ? slider.controlNavScaffold.append($("<li><a>" + slider.count + "</a></li>")) : 1 === slider.pagingCount ? slider.controlNavScaffold.find("li").remove() : slider.controlNav.eq(pos).closest("li").remove(), 
                    methods.controlNav.set(), slider.pagingCount > 1 && slider.pagingCount !== slider.controlNav.length ? slider.update(pos, action) : methods.controlNav.active();
                }
            },
            directionNav: {
                setup: function() {
                    var directionNavScaffold = $('<ul class="' + namespace + 'direction-nav"><li><a class="' + namespace + 'prev" href="#">' + slider.vars.prevText + '</a></li><li><a class="' + namespace + 'next" href="#">' + slider.vars.nextText + "</a></li></ul>");
                    slider.controlsContainer ? ($(slider.controlsContainer).append(directionNavScaffold), 
                    slider.directionNav = $("." + namespace + "direction-nav li a", slider.controlsContainer)) : (slider.append(directionNavScaffold), 
                    slider.directionNav = $("." + namespace + "direction-nav li a", slider)), methods.directionNav.update(), 
                    slider.directionNav.bind(eventType, function(event) {
                        event.preventDefault();
                        var target;
                        ("" === watchedEvent || watchedEvent === event.type) && (target = slider.getTarget($(this).hasClass(namespace + "next") ? "next" : "prev"), 
                        slider.flexAnimate(target, slider.vars.pauseOnAction)), "" === watchedEvent && (watchedEvent = event.type), 
                        methods.setToClearWatchedEvent();
                    });
                },
                update: function() {
                    var disabledClass = namespace + "disabled";
                    1 === slider.pagingCount ? slider.directionNav.addClass(disabledClass).attr("tabindex", "-1") : slider.vars.animationLoop ? slider.directionNav.removeClass(disabledClass).removeAttr("tabindex") : 0 === slider.animatingTo ? slider.directionNav.removeClass(disabledClass).filter("." + namespace + "prev").addClass(disabledClass).attr("tabindex", "-1") : slider.animatingTo === slider.last ? slider.directionNav.removeClass(disabledClass).filter("." + namespace + "next").addClass(disabledClass).attr("tabindex", "-1") : slider.directionNav.removeClass(disabledClass).removeAttr("tabindex");
                }
            },
            pausePlay: {
                setup: function() {
                    var pausePlayScaffold = $('<div class="' + namespace + 'pauseplay"><a></a></div>');
                    slider.controlsContainer ? (slider.controlsContainer.append(pausePlayScaffold), 
                    slider.pausePlay = $("." + namespace + "pauseplay a", slider.controlsContainer)) : (slider.append(pausePlayScaffold), 
                    slider.pausePlay = $("." + namespace + "pauseplay a", slider)), methods.pausePlay.update(slider.vars.slideshow ? namespace + "pause" : namespace + "play"), 
                    slider.pausePlay.bind(eventType, function(event) {
                        event.preventDefault(), ("" === watchedEvent || watchedEvent === event.type) && ($(this).hasClass(namespace + "pause") ? (slider.manualPause = !0, 
                        slider.manualPlay = !1, slider.pause()) : (slider.manualPause = !1, slider.manualPlay = !0, 
                        slider.play())), "" === watchedEvent && (watchedEvent = event.type), methods.setToClearWatchedEvent();
                    });
                },
                update: function(state) {
                    "play" === state ? slider.pausePlay.removeClass(namespace + "pause").addClass(namespace + "play").html(slider.vars.playText) : slider.pausePlay.removeClass(namespace + "play").addClass(namespace + "pause").html(slider.vars.pauseText);
                }
            },
            touch: function() {
                function onTouchStart(e) {
                    slider.animating ? e.preventDefault() : (window.navigator.msPointerEnabled || 1 === e.touches.length) && (slider.pause(), 
                    cwidth = vertical ? slider.h : slider.w, startT = Number(new Date()), localX = e.touches[0].pageX, 
                    localY = e.touches[0].pageY, offset = carousel && reverse && slider.animatingTo === slider.last ? 0 : carousel && reverse ? slider.limit - (slider.itemW + slider.vars.itemMargin) * slider.move * slider.animatingTo : carousel && slider.currentSlide === slider.last ? slider.limit : carousel ? (slider.itemW + slider.vars.itemMargin) * slider.move * slider.currentSlide : reverse ? (slider.last - slider.currentSlide + slider.cloneOffset) * cwidth : (slider.currentSlide + slider.cloneOffset) * cwidth, 
                    startX = vertical ? localY : localX, startY = vertical ? localX : localY, el.addEventListener("touchmove", onTouchMove, !1), 
                    el.addEventListener("touchend", onTouchEnd, !1));
                }
                function onTouchMove(e) {
                    localX = e.touches[0].pageX, localY = e.touches[0].pageY, dx = vertical ? startX - localY : startX - localX, 
                    scrolling = vertical ? Math.abs(dx) < Math.abs(localX - startY) : Math.abs(dx) < Math.abs(localY - startY);
                    var fxms = 500;
                    (!scrolling || Number(new Date()) - startT > fxms) && (e.preventDefault(), !fade && slider.transitions && (slider.vars.animationLoop || (dx /= 0 === slider.currentSlide && 0 > dx || slider.currentSlide === slider.last && dx > 0 ? Math.abs(dx) / cwidth + 2 : 1), 
                    slider.setProps(offset + dx, "setTouch")));
                }
                function onTouchEnd() {
                    if (el.removeEventListener("touchmove", onTouchMove, !1), slider.animatingTo === slider.currentSlide && !scrolling && null !== dx) {
                        var updateDx = reverse ? -dx : dx, target = slider.getTarget(updateDx > 0 ? "next" : "prev");
                        slider.canAdvance(target) && (Number(new Date()) - startT < 550 && Math.abs(updateDx) > 50 || Math.abs(updateDx) > cwidth / 2) ? slider.flexAnimate(target, slider.vars.pauseOnAction) : fade || slider.flexAnimate(slider.currentSlide, slider.vars.pauseOnAction, !0);
                    }
                    el.removeEventListener("touchend", onTouchEnd, !1), startX = null, startY = null, 
                    dx = null, offset = null;
                }
                function onMSPointerDown(e) {
                    e.stopPropagation(), slider.animating ? e.preventDefault() : (slider.pause(), el._gesture.addPointer(e.pointerId), 
                    accDx = 0, cwidth = vertical ? slider.h : slider.w, startT = Number(new Date()), 
                    offset = carousel && reverse && slider.animatingTo === slider.last ? 0 : carousel && reverse ? slider.limit - (slider.itemW + slider.vars.itemMargin) * slider.move * slider.animatingTo : carousel && slider.currentSlide === slider.last ? slider.limit : carousel ? (slider.itemW + slider.vars.itemMargin) * slider.move * slider.currentSlide : reverse ? (slider.last - slider.currentSlide + slider.cloneOffset) * cwidth : (slider.currentSlide + slider.cloneOffset) * cwidth);
                }
                function onMSGestureChange(e) {
                    e.stopPropagation();
                    var slider = e.target._slider;
                    if (slider) {
                        var transX = -e.translationX, transY = -e.translationY;
                        return accDx += vertical ? transY : transX, dx = accDx, scrolling = vertical ? Math.abs(accDx) < Math.abs(-transX) : Math.abs(accDx) < Math.abs(-transY), 
                        e.detail === e.MSGESTURE_FLAG_INERTIA ? void setImmediate(function() {
                            el._gesture.stop();
                        }) : void ((!scrolling || Number(new Date()) - startT > 500) && (e.preventDefault(), 
                        !fade && slider.transitions && (slider.vars.animationLoop || (dx = accDx / (0 === slider.currentSlide && 0 > accDx || slider.currentSlide === slider.last && accDx > 0 ? Math.abs(accDx) / cwidth + 2 : 1)), 
                        slider.setProps(offset + dx, "setTouch"))));
                    }
                }
                function onMSGestureEnd(e) {
                    e.stopPropagation();
                    var slider = e.target._slider;
                    if (slider) {
                        if (slider.animatingTo === slider.currentSlide && !scrolling && null !== dx) {
                            var updateDx = reverse ? -dx : dx, target = slider.getTarget(updateDx > 0 ? "next" : "prev");
                            slider.canAdvance(target) && (Number(new Date()) - startT < 550 && Math.abs(updateDx) > 50 || Math.abs(updateDx) > cwidth / 2) ? slider.flexAnimate(target, slider.vars.pauseOnAction) : fade || slider.flexAnimate(slider.currentSlide, slider.vars.pauseOnAction, !0);
                        }
                        startX = null, startY = null, dx = null, offset = null, accDx = 0;
                    }
                }
                var startX, startY, offset, cwidth, dx, startT, scrolling = !1, localX = 0, localY = 0, accDx = 0;
                msGesture ? (el.style.msTouchAction = "none", el._gesture = new MSGesture(), el._gesture.target = el, 
                el.addEventListener("MSPointerDown", onMSPointerDown, !1), el._slider = slider, 
                el.addEventListener("MSGestureChange", onMSGestureChange, !1), el.addEventListener("MSGestureEnd", onMSGestureEnd, !1)) : el.addEventListener("touchstart", onTouchStart, !1);
            },
            resize: function() {
                !slider.animating && slider.is(":visible") && (carousel || slider.doMath(), fade ? methods.smoothHeight() : carousel ? (slider.slides.width(slider.computedW), 
                slider.update(slider.pagingCount), slider.setProps()) : vertical ? (slider.viewport.height(slider.h), 
                slider.setProps(slider.h, "setTotal")) : (slider.vars.smoothHeight && methods.smoothHeight(), 
                slider.newSlides.width(slider.computedW), slider.setProps(slider.computedW, "setTotal")));
            },
            smoothHeight: function(dur) {
                if (!vertical || fade) {
                    var $obj = fade ? slider : slider.viewport;
                    dur ? $obj.animate({
                        height: slider.slides.eq(slider.animatingTo).height()
                    }, dur) : $obj.height(slider.slides.eq(slider.animatingTo).height());
                }
            },
            sync: function(action) {
                var $obj = $(slider.vars.sync).data("flexslider"), target = slider.animatingTo;
                switch (action) {
                  case "animate":
                    $obj.flexAnimate(target, slider.vars.pauseOnAction, !1, !0);
                    break;

                  case "play":
                    $obj.playing || $obj.asNav || $obj.play();
                    break;

                  case "pause":
                    $obj.pause();
                }
            },
            uniqueID: function($clone) {
                return $clone.filter("[id]").add($clone.find("[id]")).each(function() {
                    var $this = $(this);
                    $this.attr("id", $this.attr("id") + "_clone");
                }), $clone;
            },
            pauseInvisible: {
                visProp: null,
                init: function() {
                    var prefixes = [ "webkit", "moz", "ms", "o" ];
                    if ("hidden" in document) return "hidden";
                    for (var i = 0; i < prefixes.length; i++) prefixes[i] + "Hidden" in document && (methods.pauseInvisible.visProp = prefixes[i] + "Hidden");
                    if (methods.pauseInvisible.visProp) {
                        var evtname = methods.pauseInvisible.visProp.replace(/[H|h]idden/, "") + "visibilitychange";
                        document.addEventListener(evtname, function() {
                            methods.pauseInvisible.isHidden() ? slider.startTimeout ? clearTimeout(slider.startTimeout) : slider.pause() : slider.started ? slider.play() : slider.vars.initDelay > 0 ? setTimeout(slider.play, slider.vars.initDelay) : slider.play();
                        });
                    }
                },
                isHidden: function() {
                    return document[methods.pauseInvisible.visProp] || !1;
                }
            },
            setToClearWatchedEvent: function() {
                clearTimeout(watchedEventClearTimer), watchedEventClearTimer = setTimeout(function() {
                    watchedEvent = "";
                }, 3e3);
            }
        }, slider.flexAnimate = function(target, pause, override, withSync, fromNav) {
            if (slider.vars.animationLoop || target === slider.currentSlide || (slider.direction = target > slider.currentSlide ? "next" : "prev"), 
            asNav && 1 === slider.pagingCount && (slider.direction = slider.currentItem < target ? "next" : "prev"), 
            !slider.animating && (slider.canAdvance(target, fromNav) || override) && slider.is(":visible")) {
                if (asNav && withSync) {
                    var master = $(slider.vars.asNavFor).data("flexslider");
                    if (slider.atEnd = 0 === target || target === slider.count - 1, master.flexAnimate(target, !0, !1, !0, fromNav), 
                    slider.direction = slider.currentItem < target ? "next" : "prev", master.direction = slider.direction, 
                    Math.ceil((target + 1) / slider.visible) - 1 === slider.currentSlide || 0 === target) return slider.currentItem = target, 
                    slider.slides.removeClass(namespace + "active-slide").eq(target).addClass(namespace + "active-slide"), 
                    !1;
                    slider.currentItem = target, slider.slides.removeClass(namespace + "active-slide").eq(target).addClass(namespace + "active-slide"), 
                    target = Math.floor(target / slider.visible);
                }
                if (slider.animating = !0, slider.animatingTo = target, pause && slider.pause(), 
                slider.vars.before(slider), slider.syncExists && !fromNav && methods.sync("animate"), 
                slider.vars.controlNav && methods.controlNav.active(), carousel || slider.slides.removeClass(namespace + "active-slide").eq(target).addClass(namespace + "active-slide"), 
                slider.atEnd = 0 === target || target === slider.last, slider.vars.directionNav && methods.directionNav.update(), 
                target === slider.last && (slider.vars.end(slider), slider.vars.animationLoop || slider.pause()), 
                fade) touch ? (slider.slides.eq(slider.currentSlide).css({
                    opacity: 0,
                    zIndex: 1
                }), slider.slides.eq(target).css({
                    opacity: 1,
                    zIndex: 2
                }), slider.wrapup(dimension)) : (slider.slides.eq(slider.currentSlide).css({
                    zIndex: 1
                }).animate({
                    opacity: 0
                }, slider.vars.animationSpeed, slider.vars.easing), slider.slides.eq(target).css({
                    zIndex: 2
                }).animate({
                    opacity: 1
                }, slider.vars.animationSpeed, slider.vars.easing, slider.wrapup)); else {
                    var margin, slideString, calcNext, dimension = vertical ? slider.slides.filter(":first").height() : slider.computedW;
                    carousel ? (margin = slider.vars.itemMargin, calcNext = (slider.itemW + margin) * slider.move * slider.animatingTo, 
                    slideString = calcNext > slider.limit && 1 !== slider.visible ? slider.limit : calcNext) : slideString = 0 === slider.currentSlide && target === slider.count - 1 && slider.vars.animationLoop && "next" !== slider.direction ? reverse ? (slider.count + slider.cloneOffset) * dimension : 0 : slider.currentSlide === slider.last && 0 === target && slider.vars.animationLoop && "prev" !== slider.direction ? reverse ? 0 : (slider.count + 1) * dimension : reverse ? (slider.count - 1 - target + slider.cloneOffset) * dimension : (target + slider.cloneOffset) * dimension, 
                    slider.setProps(slideString, "", slider.vars.animationSpeed), slider.transitions ? (slider.vars.animationLoop && slider.atEnd || (slider.animating = !1, 
                    slider.currentSlide = slider.animatingTo), slider.container.unbind("webkitTransitionEnd transitionend"), 
                    slider.container.bind("webkitTransitionEnd transitionend", function() {
                        clearTimeout(slider.ensureAnimationEnd), slider.wrapup(dimension);
                    }), clearTimeout(slider.ensureAnimationEnd), slider.ensureAnimationEnd = setTimeout(function() {
                        slider.wrapup(dimension);
                    }, slider.vars.animationSpeed + 100)) : slider.container.animate(slider.args, slider.vars.animationSpeed, slider.vars.easing, function() {
                        slider.wrapup(dimension);
                    });
                }
                slider.vars.smoothHeight && methods.smoothHeight(slider.vars.animationSpeed);
            }
        }, slider.wrapup = function(dimension) {
            fade || carousel || (0 === slider.currentSlide && slider.animatingTo === slider.last && slider.vars.animationLoop ? slider.setProps(dimension, "jumpEnd") : slider.currentSlide === slider.last && 0 === slider.animatingTo && slider.vars.animationLoop && slider.setProps(dimension, "jumpStart")), 
            slider.animating = !1, slider.currentSlide = slider.animatingTo, slider.vars.after(slider);
        }, slider.animateSlides = function() {
            !slider.animating && focused && slider.flexAnimate(slider.getTarget("next"));
        }, slider.pause = function() {
            clearInterval(slider.animatedSlides), slider.animatedSlides = null, slider.playing = !1, 
            slider.vars.pausePlay && methods.pausePlay.update("play"), slider.syncExists && methods.sync("pause");
        }, slider.play = function() {
            slider.playing && clearInterval(slider.animatedSlides), slider.animatedSlides = slider.animatedSlides || setInterval(slider.animateSlides, slider.vars.slideshowSpeed), 
            slider.started = slider.playing = !0, slider.vars.pausePlay && methods.pausePlay.update("pause"), 
            slider.syncExists && methods.sync("play");
        }, slider.stop = function() {
            slider.pause(), slider.stopped = !0;
        }, slider.canAdvance = function(target, fromNav) {
            var last = asNav ? slider.pagingCount - 1 : slider.last;
            return fromNav ? !0 : asNav && slider.currentItem === slider.count - 1 && 0 === target && "prev" === slider.direction ? !0 : asNav && 0 === slider.currentItem && target === slider.pagingCount - 1 && "next" !== slider.direction ? !1 : target !== slider.currentSlide || asNav ? slider.vars.animationLoop ? !0 : slider.atEnd && 0 === slider.currentSlide && target === last && "next" !== slider.direction ? !1 : slider.atEnd && slider.currentSlide === last && 0 === target && "next" === slider.direction ? !1 : !0 : !1;
        }, slider.getTarget = function(dir) {
            return slider.direction = dir, "next" === dir ? slider.currentSlide === slider.last ? 0 : slider.currentSlide + 1 : 0 === slider.currentSlide ? slider.last : slider.currentSlide - 1;
        }, slider.setProps = function(pos, special, dur) {
            var target = function() {
                var posCheck = pos ? pos : (slider.itemW + slider.vars.itemMargin) * slider.move * slider.animatingTo, posCalc = function() {
                    if (carousel) return "setTouch" === special ? pos : reverse && slider.animatingTo === slider.last ? 0 : reverse ? slider.limit - (slider.itemW + slider.vars.itemMargin) * slider.move * slider.animatingTo : slider.animatingTo === slider.last ? slider.limit : posCheck;
                    switch (special) {
                      case "setTotal":
                        return reverse ? (slider.count - 1 - slider.currentSlide + slider.cloneOffset) * pos : (slider.currentSlide + slider.cloneOffset) * pos;

                      case "setTouch":
                        return reverse ? pos : pos;

                      case "jumpEnd":
                        return reverse ? pos : slider.count * pos;

                      case "jumpStart":
                        return reverse ? slider.count * pos : pos;

                      default:
                        return pos;
                    }
                }();
                return -1 * posCalc + "px";
            }();
            slider.transitions && (target = vertical ? "translate3d(0," + target + ",0)" : "translate3d(" + target + ",0,0)", 
            dur = void 0 !== dur ? dur / 1e3 + "s" : "0s", slider.container.css("-" + slider.pfx + "-transition-duration", dur), 
            slider.container.css("transition-duration", dur)), slider.args[slider.prop] = target, 
            (slider.transitions || void 0 === dur) && slider.container.css(slider.args), slider.container.css("transform", target);
        }, slider.setup = function(type) {
            if (fade) slider.slides.css({
                width: "100%",
                "float": "left",
                marginRight: "-100%",
                position: "relative"
            }), "init" === type && (touch ? slider.slides.css({
                opacity: 0,
                display: "block",
                webkitTransition: "opacity " + slider.vars.animationSpeed / 1e3 + "s ease",
                zIndex: 1
            }).eq(slider.currentSlide).css({
                opacity: 1,
                zIndex: 2
            }) : 0 == slider.vars.fadeFirstSlide ? slider.slides.css({
                opacity: 0,
                display: "block",
                zIndex: 1
            }).eq(slider.currentSlide).css({
                zIndex: 2
            }).css({
                opacity: 1
            }) : slider.slides.css({
                opacity: 0,
                display: "block",
                zIndex: 1
            }).eq(slider.currentSlide).css({
                zIndex: 2
            }).animate({
                opacity: 1
            }, slider.vars.animationSpeed, slider.vars.easing)), slider.vars.smoothHeight && methods.smoothHeight(); else {
                var sliderOffset, arr;
                "init" === type && (slider.viewport = $('<div class="' + namespace + 'viewport"></div>').css({
                    overflow: "hidden",
                    position: "relative"
                }).appendTo(slider).append(slider.container), slider.cloneCount = 0, slider.cloneOffset = 0, 
                reverse && (arr = $.makeArray(slider.slides).reverse(), slider.slides = $(arr), 
                slider.container.empty().append(slider.slides))), slider.vars.animationLoop && !carousel && (slider.cloneCount = 2, 
                slider.cloneOffset = 1, "init" !== type && slider.container.find(".clone").remove(), 
                slider.container.append(methods.uniqueID(slider.slides.first().clone().addClass("clone")).attr("aria-hidden", "true")).prepend(methods.uniqueID(slider.slides.last().clone().addClass("clone")).attr("aria-hidden", "true"))), 
                slider.newSlides = $(slider.vars.selector, slider), sliderOffset = reverse ? slider.count - 1 - slider.currentSlide + slider.cloneOffset : slider.currentSlide + slider.cloneOffset, 
                vertical && !carousel ? (slider.container.height(200 * (slider.count + slider.cloneCount) + "%").css("position", "absolute").width("100%"), 
                setTimeout(function() {
                    slider.newSlides.css({
                        display: "block"
                    }), slider.doMath(), slider.viewport.height(slider.h), slider.setProps(sliderOffset * slider.h, "init");
                }, "init" === type ? 100 : 0)) : (slider.container.width(200 * (slider.count + slider.cloneCount) + "%"), 
                slider.setProps(sliderOffset * slider.computedW, "init"), setTimeout(function() {
                    slider.doMath(), slider.newSlides.css({
                        width: slider.computedW,
                        "float": "left",
                        display: "block"
                    }), slider.vars.smoothHeight && methods.smoothHeight();
                }, "init" === type ? 100 : 0));
            }
            carousel || slider.slides.removeClass(namespace + "active-slide").eq(slider.currentSlide).addClass(namespace + "active-slide"), 
            slider.vars.init(slider);
        }, slider.doMath = function() {
            var slide = slider.slides.first(), slideMargin = slider.vars.itemMargin, minItems = slider.vars.minItems, maxItems = slider.vars.maxItems;
            slider.w = void 0 === slider.viewport ? slider.width() : slider.viewport.width(), 
            slider.h = slide.height(), slider.boxPadding = slide.outerWidth() - slide.width(), 
            carousel ? (slider.itemT = slider.vars.itemWidth + slideMargin, slider.minW = minItems ? minItems * slider.itemT : slider.w, 
            slider.maxW = maxItems ? maxItems * slider.itemT - slideMargin : slider.w, slider.itemW = slider.minW > slider.w ? (slider.w - slideMargin * (minItems - 1)) / minItems : slider.maxW < slider.w ? (slider.w - slideMargin * (maxItems - 1)) / maxItems : slider.vars.itemWidth > slider.w ? slider.w : slider.vars.itemWidth, 
            slider.visible = Math.floor(slider.w / slider.itemW), slider.move = slider.vars.move > 0 && slider.vars.move < slider.visible ? slider.vars.move : slider.visible, 
            slider.pagingCount = Math.ceil((slider.count - slider.visible) / slider.move + 1), 
            slider.last = slider.pagingCount - 1, slider.limit = 1 === slider.pagingCount ? 0 : slider.vars.itemWidth > slider.w ? slider.itemW * (slider.count - 1) + slideMargin * (slider.count - 1) : (slider.itemW + slideMargin) * slider.count - slider.w - slideMargin) : (slider.itemW = slider.w, 
            slider.pagingCount = slider.count, slider.last = slider.count - 1), slider.computedW = slider.itemW - slider.boxPadding;
        }, slider.update = function(pos, action) {
            slider.doMath(), carousel || (pos < slider.currentSlide ? slider.currentSlide += 1 : pos <= slider.currentSlide && 0 !== pos && (slider.currentSlide -= 1), 
            slider.animatingTo = slider.currentSlide), slider.vars.controlNav && !slider.manualControls && ("add" === action && !carousel || slider.pagingCount > slider.controlNav.length ? methods.controlNav.update("add") : ("remove" === action && !carousel || slider.pagingCount < slider.controlNav.length) && (carousel && slider.currentSlide > slider.last && (slider.currentSlide -= 1, 
            slider.animatingTo -= 1), methods.controlNav.update("remove", slider.last))), slider.vars.directionNav && methods.directionNav.update();
        }, slider.addSlide = function(obj, pos) {
            var $obj = $(obj);
            slider.count += 1, slider.last = slider.count - 1, vertical && reverse ? void 0 !== pos ? slider.slides.eq(slider.count - pos).after($obj) : slider.container.prepend($obj) : void 0 !== pos ? slider.slides.eq(pos).before($obj) : slider.container.append($obj), 
            slider.update(pos, "add"), slider.slides = $(slider.vars.selector + ":not(.clone)", slider), 
            slider.setup(), slider.vars.added(slider);
        }, slider.removeSlide = function(obj) {
            var pos = isNaN(obj) ? slider.slides.index($(obj)) : obj;
            slider.count -= 1, slider.last = slider.count - 1, isNaN(obj) ? $(obj, slider.slides).remove() : vertical && reverse ? slider.slides.eq(slider.last).remove() : slider.slides.eq(obj).remove(), 
            slider.doMath(), slider.update(pos, "remove"), slider.slides = $(slider.vars.selector + ":not(.clone)", slider), 
            slider.setup(), slider.vars.removed(slider);
        }, methods.init();
    }, $(window).blur(function() {
        focused = !1;
    }).focus(function() {
        focused = !0;
    }), $.flexslider.defaults = {
        namespace: "flex-",
        selector: ".slides > li",
        animation: "fade",
        easing: "swing",
        direction: "horizontal",
        reverse: !1,
        animationLoop: !0,
        smoothHeight: !1,
        startAt: 0,
        slideshow: !0,
        slideshowSpeed: 7e3,
        animationSpeed: 600,
        initDelay: 0,
        randomize: !1,
        fadeFirstSlide: !0,
        thumbCaptions: !1,
        pauseOnAction: !0,
        pauseOnHover: !1,
        pauseInvisible: !0,
        useCSS: !0,
        touch: !0,
        video: !1,
        controlNav: !0,
        directionNav: !0,
        prevText: "Previous",
        nextText: "Next",
        keyboard: !0,
        multipleKeyboard: !1,
        mousewheel: !1,
        pausePlay: !1,
        pauseText: "Pause",
        playText: "Play",
        controlsContainer: "",
        manualControls: "",
        sync: "",
        asNavFor: "",
        itemWidth: 0,
        itemMargin: 0,
        minItems: 1,
        maxItems: 0,
        move: 0,
        allowOneSlide: !0,
        start: function() {},
        before: function() {},
        after: function() {},
        end: function() {},
        added: function() {},
        removed: function() {},
        init: function() {}
    }, $.fn.flexslider = function(options) {
        if (void 0 === options && (options = {}), "object" == typeof options) return this.each(function() {
            var $this = $(this), selector = options.selector ? options.selector : ".slides > li", $slides = $this.find(selector);
            1 === $slides.length && options.allowOneSlide === !0 || 0 === $slides.length ? ($slides.fadeIn(400), 
            options.start && options.start($this)) : void 0 === $this.data("flexslider") && new $.flexslider(this, options);
        });
        var $slider = $(this).data("flexslider");
        switch (options) {
          case "play":
            $slider.play();
            break;

          case "pause":
            $slider.pause();
            break;

          case "stop":
            $slider.stop();
            break;

          case "next":
            $slider.flexAnimate($slider.getTarget("next"), !0);
            break;

          case "prev":
          case "previous":
            $slider.flexAnimate($slider.getTarget("prev"), !0);
            break;

          default:
            "number" == typeof options && $slider.flexAnimate(options, !0);
        }
    };
}(jQuery), function($) {
    $.fn.numeric = function(config, callback) {
        "boolean" == typeof config && (config = {
            decimal: config,
            negative: !0,
            decimalPlaces: -1
        }), config = config || {}, "undefined" == typeof config.negative && (config.negative = !0);
        var decimal = config.decimal === !1 ? "" : config.decimal || ".", negative = config.negative === !0 ? !0 : !1, decimalPlaces = "undefined" == typeof config.decimalPlaces ? -1 : config.decimalPlaces;
        return callback = "function" == typeof callback ? callback : function() {}, this.data("numeric.decimal", decimal).data("numeric.negative", negative).data("numeric.callback", callback).data("numeric.decimalPlaces", decimalPlaces).keypress($.fn.numeric.keypress).keyup($.fn.numeric.keyup).blur($.fn.numeric.blur);
    }, $.fn.numeric.keypress = function(e) {
        var decimal = $.data(this, "numeric.decimal"), negative = $.data(this, "numeric.negative"), decimalPlaces = $.data(this, "numeric.decimalPlaces"), key = e.charCode ? e.charCode : e.keyCode ? e.keyCode : 0;
        if (13 == key && "input" == this.nodeName.toLowerCase()) return !0;
        if (13 == key) return !1;
        var allow = !1;
        if (e.ctrlKey && 97 == key || e.ctrlKey && 65 == key) return !0;
        if (e.ctrlKey && 120 == key || e.ctrlKey && 88 == key) return !0;
        if (e.ctrlKey && 99 == key || e.ctrlKey && 67 == key) return !0;
        if (e.ctrlKey && 122 == key || e.ctrlKey && 90 == key) return !0;
        if (e.ctrlKey && 118 == key || e.ctrlKey && 86 == key || e.shiftKey && 45 == key) return !0;
        if (48 > key || key > 57) {
            var value = $(this).val();
            if (0 !== $.inArray("-", value.split("")) && negative && 45 == key && (0 === value.length || 0 === parseInt($.fn.getSelectionStart(this), 10))) return !0;
            decimal && key == decimal.charCodeAt(0) && -1 != $.inArray(decimal, value.split("")) && (allow = !1), 
            8 != key && 9 != key && 13 != key && 35 != key && 36 != key && 37 != key && 39 != key && 46 != key ? allow = !1 : "undefined" != typeof e.charCode && (e.keyCode == e.which && 0 !== e.which ? (allow = !0, 
            46 == e.which && (allow = !1)) : 0 !== e.keyCode && 0 === e.charCode && 0 === e.which && (allow = !0)), 
            decimal && key == decimal.charCodeAt(0) && (allow = -1 == $.inArray(decimal, value.split("")) ? !0 : !1);
        } else if (allow = !0, decimal && decimalPlaces > 0) {
            var dot = $.inArray(decimal, $(this).val().split(""));
            dot >= 0 && $(this).val().length > dot + decimalPlaces && (allow = !1);
        }
        return allow;
    }, $.fn.numeric.keyup = function() {
        var val = $(this).val();
        if (val && val.length > 0) {
            var carat = $.fn.getSelectionStart(this), selectionEnd = $.fn.getSelectionEnd(this), decimal = $.data(this, "numeric.decimal"), negative = $.data(this, "numeric.negative"), decimalPlaces = $.data(this, "numeric.decimalPlaces");
            if ("" !== decimal && null !== decimal) {
                var dot = $.inArray(decimal, val.split(""));
                0 === dot && (this.value = "0" + val, carat++, selectionEnd++), 1 == dot && "-" == val.charAt(0) && (this.value = "-0" + val.substring(1), 
                carat++, selectionEnd++), val = this.value;
            }
            for (var validChars = [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, "-", decimal ], length = val.length, i = length - 1; i >= 0; i--) {
                var ch = val.charAt(i);
                0 !== i && "-" == ch ? val = val.substring(0, i) + val.substring(i + 1) : 0 !== i || negative || "-" != ch || (val = val.substring(1));
                for (var validChar = !1, j = 0; j < validChars.length; j++) if (ch == validChars[j]) {
                    validChar = !0;
                    break;
                }
                validChar && " " != ch || (val = val.substring(0, i) + val.substring(i + 1));
            }
            var firstDecimal = $.inArray(decimal, val.split(""));
            if (firstDecimal > 0) for (var k = length - 1; k > firstDecimal; k--) {
                var chch = val.charAt(k);
                chch == decimal && (val = val.substring(0, k) + val.substring(k + 1));
            }
            if (decimal && decimalPlaces > 0) {
                var dot = $.inArray(decimal, val.split(""));
                dot >= 0 && (val = val.substring(0, dot + decimalPlaces + 1), selectionEnd = Math.min(val.length, selectionEnd));
            }
            this.value = val, $.fn.setSelection(this, [ carat, selectionEnd ]);
        }
    }, $.fn.numeric.blur = function() {
        var decimal = $.data(this, "numeric.decimal"), callback = $.data(this, "numeric.callback"), negative = $.data(this, "numeric.negative"), val = this.value;
        if ("" !== val) {
            var re = new RegExp(negative ? "-?" : "^\\d+$|^\\d*" + decimal + "\\d+$");
            re.exec(val) || callback.apply(this);
        }
    }, $.fn.removeNumeric = function() {
        return this.data("numeric.decimal", null).data("numeric.negative", null).data("numeric.callback", null).data("numeric.decimalPlaces", null).unbind("keypress", $.fn.numeric.keypress).unbind("keyup", $.fn.numeric.keyup).unbind("blur", $.fn.numeric.blur);
    }, $.fn.getSelectionStart = function(o) {
        if ("number" === o.type) return void 0;
        if (o.createTextRange && document.selection) {
            var r = document.selection.createRange().duplicate();
            return r.moveEnd("character", o.value.length), "" == r.text ? o.value.length : Math.max(0, o.value.lastIndexOf(r.text));
        }
        try {
            return o.selectionStart;
        } catch (e) {
            return 0;
        }
    }, $.fn.getSelectionEnd = function(o) {
        if ("number" === o.type) return void 0;
        if (o.createTextRange && document.selection) {
            var r = document.selection.createRange().duplicate();
            return r.moveStart("character", -o.value.length), r.text.length;
        }
        return o.selectionEnd;
    }, $.fn.setSelection = function(o, p) {
        if ("number" == typeof p && (p = [ p, p ]), p && p.constructor == Array && 2 == p.length) if ("number" === o.type) o.focus(); else if (o.createTextRange) {
            var r = o.createTextRange();
            r.collapse(!0), r.moveStart("character", p[0]), r.moveEnd("character", p[1] - p[0]), 
            r.select();
        } else {
            o.focus();
            try {
                o.setSelectionRange && o.setSelectionRange(p[0], p[1]);
            } catch (e) {}
        }
    };
}(jQuery), "function" != typeof Object.create && (Object.create = function(obj) {
    function F() {}
    return F.prototype = obj, new F();
}), function($, window, document) {
    var Carousel = {
        init: function(options, el) {
            var base = this;
            base.$elem = $(el), base.options = $.extend({}, $.fn.owlCarousel.options, base.$elem.data(), options), 
            base.userOptions = options, base.loadContent();
        },
        loadContent: function() {
            function getData(data) {
                var i, content = "";
                if ("function" == typeof base.options.jsonSuccess) base.options.jsonSuccess.apply(this, [ data ]); else {
                    for (i in data.owl) data.owl.hasOwnProperty(i) && (content += data.owl[i].item);
                    base.$elem.html(content);
                }
                base.logIn();
            }
            var url, base = this;
            "function" == typeof base.options.beforeInit && base.options.beforeInit.apply(this, [ base.$elem ]), 
            "string" == typeof base.options.jsonPath ? (url = base.options.jsonPath, $.getJSON(url, getData)) : base.logIn();
        },
        logIn: function() {
            var base = this;
            base.$elem.data("owl-originalStyles", base.$elem.attr("style")), base.$elem.data("owl-originalClasses", base.$elem.attr("class")), 
            base.$elem.css({
                opacity: 0
            }), base.orignalItems = base.options.items, base.checkBrowser(), base.wrapperWidth = 0, 
            base.checkVisible = null, base.setVars();
        },
        setVars: function() {
            var base = this;
            return 0 === base.$elem.children().length ? !1 : (base.baseClass(), base.eventTypes(), 
            base.$userItems = base.$elem.children(), base.itemsAmount = base.$userItems.length, 
            base.wrapItems(), base.$owlItems = base.$elem.find(".owl-item"), base.$owlWrapper = base.$elem.find(".owl-wrapper"), 
            base.playDirection = "next", base.prevItem = 0, base.prevArr = [ 0 ], base.currentItem = 0, 
            base.customEvents(), void base.onStartup());
        },
        onStartup: function() {
            var base = this;
            base.updateItems(), base.calculateAll(), base.buildControls(), base.updateControls(), 
            base.response(), base.moveEvents(), base.stopOnHover(), base.owlStatus(), base.options.transitionStyle !== !1 && base.transitionTypes(base.options.transitionStyle), 
            base.options.autoPlay === !0 && (base.options.autoPlay = 5e3), base.play(), base.$elem.find(".owl-wrapper").css("display", "block"), 
            base.$elem.is(":visible") ? base.$elem.css("opacity", 1) : base.watchVisibility(), 
            base.onstartup = !1, base.eachMoveUpdate(), "function" == typeof base.options.afterInit && base.options.afterInit.apply(this, [ base.$elem ]);
        },
        eachMoveUpdate: function() {
            var base = this;
            base.options.lazyLoad === !0 && base.lazyLoad(), base.options.autoHeight === !0 && base.autoHeight(), 
            base.onVisibleItems(), "function" == typeof base.options.afterAction && base.options.afterAction.apply(this, [ base.$elem ]);
        },
        updateVars: function() {
            var base = this;
            "function" == typeof base.options.beforeUpdate && base.options.beforeUpdate.apply(this, [ base.$elem ]), 
            base.watchVisibility(), base.updateItems(), base.calculateAll(), base.updatePosition(), 
            base.updateControls(), base.eachMoveUpdate(), "function" == typeof base.options.afterUpdate && base.options.afterUpdate.apply(this, [ base.$elem ]);
        },
        reload: function() {
            var base = this;
            window.setTimeout(function() {
                base.updateVars();
            }, 0);
        },
        watchVisibility: function() {
            var base = this;
            return base.$elem.is(":visible") !== !1 ? !1 : (base.$elem.css({
                opacity: 0
            }), window.clearInterval(base.autoPlayInterval), window.clearInterval(base.checkVisible), 
            void (base.checkVisible = window.setInterval(function() {
                base.$elem.is(":visible") && (base.reload(), base.$elem.animate({
                    opacity: 1
                }, 200), window.clearInterval(base.checkVisible));
            }, 500)));
        },
        wrapItems: function() {
            var base = this;
            base.$userItems.wrapAll('<div class="owl-wrapper">').wrap('<div class="owl-item"></div>'), 
            base.$elem.find(".owl-wrapper").wrap('<div class="owl-wrapper-outer">'), base.wrapperOuter = base.$elem.find(".owl-wrapper-outer"), 
            base.$elem.css("display", "block");
        },
        baseClass: function() {
            var base = this, hasBaseClass = base.$elem.hasClass(base.options.baseClass), hasThemeClass = base.$elem.hasClass(base.options.theme);
            hasBaseClass || base.$elem.addClass(base.options.baseClass), hasThemeClass || base.$elem.addClass(base.options.theme);
        },
        updateItems: function() {
            var width, i, base = this;
            if (base.options.responsive === !1) return !1;
            if (base.options.singleItem === !0) return base.options.items = base.orignalItems = 1, 
            base.options.itemsCustom = !1, base.options.itemsDesktop = !1, base.options.itemsDesktopSmall = !1, 
            base.options.itemsTablet = !1, base.options.itemsTabletSmall = !1, base.options.itemsMobile = !1, 
            !1;
            if (width = $(base.options.responsiveBaseWidth).width(), width > (base.options.itemsDesktop[0] || base.orignalItems) && (base.options.items = base.orignalItems), 
            base.options.itemsCustom !== !1) for (base.options.itemsCustom.sort(function(a, b) {
                return a[0] - b[0];
            }), i = 0; i < base.options.itemsCustom.length; i += 1) base.options.itemsCustom[i][0] <= width && (base.options.items = base.options.itemsCustom[i][1]); else width <= base.options.itemsDesktop[0] && base.options.itemsDesktop !== !1 && (base.options.items = base.options.itemsDesktop[1]), 
            width <= base.options.itemsDesktopSmall[0] && base.options.itemsDesktopSmall !== !1 && (base.options.items = base.options.itemsDesktopSmall[1]), 
            width <= base.options.itemsTablet[0] && base.options.itemsTablet !== !1 && (base.options.items = base.options.itemsTablet[1]), 
            width <= base.options.itemsTabletSmall[0] && base.options.itemsTabletSmall !== !1 && (base.options.items = base.options.itemsTabletSmall[1]), 
            width <= base.options.itemsMobile[0] && base.options.itemsMobile !== !1 && (base.options.items = base.options.itemsMobile[1]);
            base.options.items > base.itemsAmount && base.options.itemsScaleUp === !0 && (base.options.items = base.itemsAmount);
        },
        response: function() {
            var smallDelay, lastWindowWidth, base = this;
            return base.options.responsive !== !0 ? !1 : (lastWindowWidth = $(window).width(), 
            base.resizer = function() {
                $(window).width() !== lastWindowWidth && (base.options.autoPlay !== !1 && window.clearInterval(base.autoPlayInterval), 
                window.clearTimeout(smallDelay), smallDelay = window.setTimeout(function() {
                    lastWindowWidth = $(window).width(), base.updateVars();
                }, base.options.responsiveRefreshRate));
            }, void $(window).resize(base.resizer));
        },
        updatePosition: function() {
            var base = this;
            base.jumpTo(base.currentItem), base.options.autoPlay !== !1 && base.checkAp();
        },
        appendItemsSizes: function() {
            var base = this, roundPages = 0, lastItem = base.itemsAmount - base.options.items;
            base.$owlItems.each(function(index) {
                var $this = $(this);
                $this.css({
                    width: base.itemWidth
                }).data("owl-item", Number(index)), (index % base.options.items === 0 || index === lastItem) && (index > lastItem || (roundPages += 1)), 
                $this.data("owl-roundPages", roundPages);
            });
        },
        appendWrapperSizes: function() {
            var base = this, width = base.$owlItems.length * base.itemWidth;
            base.$owlWrapper.css({
                width: 2 * width,
                left: 0
            }), base.appendItemsSizes();
        },
        calculateAll: function() {
            var base = this;
            base.calculateWidth(), base.appendWrapperSizes(), base.loops(), base.max();
        },
        calculateWidth: function() {
            var base = this;
            base.itemWidth = Math.round(base.$elem.width() / base.options.items);
        },
        max: function() {
            var base = this, maximum = -1 * (base.itemsAmount * base.itemWidth - base.options.items * base.itemWidth);
            return base.options.items > base.itemsAmount ? (base.maximumItem = 0, maximum = 0, 
            base.maximumPixels = 0) : (base.maximumItem = base.itemsAmount - base.options.items, 
            base.maximumPixels = maximum), maximum;
        },
        min: function() {
            return 0;
        },
        loops: function() {
            var i, item, roundPageNum, base = this, prev = 0, elWidth = 0;
            for (base.positionsInArray = [ 0 ], base.pagesInArray = [], i = 0; i < base.itemsAmount; i += 1) elWidth += base.itemWidth, 
            base.positionsInArray.push(-elWidth), base.options.scrollPerPage === !0 && (item = $(base.$owlItems[i]), 
            roundPageNum = item.data("owl-roundPages"), roundPageNum !== prev && (base.pagesInArray[prev] = base.positionsInArray[i], 
            prev = roundPageNum));
        },
        buildControls: function() {
            var base = this;
            (base.options.navigation === !0 || base.options.pagination === !0) && (base.owlControls = $('<div class="owl-controls"/>').toggleClass("clickable", !base.browser.isTouch).appendTo(base.$elem)), 
            base.options.pagination === !0 && base.buildPagination(), base.options.navigation === !0 && base.buildButtons();
        },
        buildButtons: function() {
            var base = this, buttonsWrapper = $('<div class="owl-buttons"/>');
            base.owlControls.append(buttonsWrapper), base.buttonPrev = $("<div/>", {
                "class": "owl-prev",
                html: base.options.navigationText[0] || ""
            }), base.buttonNext = $("<div/>", {
                "class": "owl-next",
                html: base.options.navigationText[1] || ""
            }), buttonsWrapper.append(base.buttonPrev).append(base.buttonNext), buttonsWrapper.on("touchstart.owlControls mousedown.owlControls", 'div[class^="owl"]', function(event) {
                event.preventDefault();
            }), buttonsWrapper.on("touchend.owlControls mouseup.owlControls", 'div[class^="owl"]', function(event) {
                event.preventDefault(), $(this).hasClass("owl-next") ? base.next() : base.prev();
            });
        },
        buildPagination: function() {
            var base = this;
            base.paginationWrapper = $('<div class="owl-pagination"/>'), base.owlControls.append(base.paginationWrapper), 
            base.paginationWrapper.on("touchend.owlControls mouseup.owlControls", ".owl-page", function(event) {
                event.preventDefault(), Number($(this).data("owl-page")) !== base.currentItem && base.goTo(Number($(this).data("owl-page")), !0);
            });
        },
        updatePagination: function() {
            var counter, lastPage, lastItem, i, paginationButton, paginationButtonInner, base = this;
            if (base.options.pagination === !1) return !1;
            for (base.paginationWrapper.html(""), counter = 0, lastPage = base.itemsAmount - base.itemsAmount % base.options.items, 
            i = 0; i < base.itemsAmount; i += 1) i % base.options.items === 0 && (counter += 1, 
            lastPage === i && (lastItem = base.itemsAmount - base.options.items), paginationButton = $("<div/>", {
                "class": "owl-page"
            }), paginationButtonInner = $("<span></span>", {
                text: base.options.paginationNumbers === !0 ? counter : "",
                "class": base.options.paginationNumbers === !0 ? "owl-numbers" : ""
            }), paginationButton.append(paginationButtonInner), paginationButton.data("owl-page", lastPage === i ? lastItem : i), 
            paginationButton.data("owl-roundPages", counter), base.paginationWrapper.append(paginationButton));
            base.checkPagination();
        },
        checkPagination: function() {
            var base = this;
            return base.options.pagination === !1 ? !1 : void base.paginationWrapper.find(".owl-page").each(function() {
                $(this).data("owl-roundPages") === $(base.$owlItems[base.currentItem]).data("owl-roundPages") && (base.paginationWrapper.find(".owl-page").removeClass("active"), 
                $(this).addClass("active"));
            });
        },
        checkNavigation: function() {
            var base = this;
            return base.options.navigation === !1 ? !1 : void (base.options.rewindNav === !1 && (0 === base.currentItem && 0 === base.maximumItem ? (base.buttonPrev.addClass("disabled"), 
            base.buttonNext.addClass("disabled")) : 0 === base.currentItem && 0 !== base.maximumItem ? (base.buttonPrev.addClass("disabled"), 
            base.buttonNext.removeClass("disabled")) : base.currentItem === base.maximumItem ? (base.buttonPrev.removeClass("disabled"), 
            base.buttonNext.addClass("disabled")) : 0 !== base.currentItem && base.currentItem !== base.maximumItem && (base.buttonPrev.removeClass("disabled"), 
            base.buttonNext.removeClass("disabled"))));
        },
        updateControls: function() {
            var base = this;
            base.updatePagination(), base.checkNavigation(), base.owlControls && (base.options.items >= base.itemsAmount ? base.owlControls.hide() : base.owlControls.show());
        },
        destroyControls: function() {
            var base = this;
            base.owlControls && base.owlControls.remove();
        },
        next: function(speed) {
            var base = this;
            if (base.isTransition) return !1;
            if (base.currentItem += base.options.scrollPerPage === !0 ? base.options.items : 1, 
            base.currentItem > base.maximumItem + (base.options.scrollPerPage === !0 ? base.options.items - 1 : 0)) {
                if (base.options.rewindNav !== !0) return base.currentItem = base.maximumItem, !1;
                base.currentItem = 0, speed = "rewind";
            }
            base.goTo(base.currentItem, speed);
        },
        prev: function(speed) {
            var base = this;
            if (base.isTransition) return !1;
            if (base.options.scrollPerPage === !0 && base.currentItem > 0 && base.currentItem < base.options.items ? base.currentItem = 0 : base.currentItem -= base.options.scrollPerPage === !0 ? base.options.items : 1, 
            base.currentItem < 0) {
                if (base.options.rewindNav !== !0) return base.currentItem = 0, !1;
                base.currentItem = base.maximumItem, speed = "rewind";
            }
            base.goTo(base.currentItem, speed);
        },
        goTo: function(position, speed, drag) {
            var goToPixel, base = this;
            return base.isTransition ? !1 : ("function" == typeof base.options.beforeMove && base.options.beforeMove.apply(this, [ base.$elem ]), 
            position >= base.maximumItem ? position = base.maximumItem : 0 >= position && (position = 0), 
            base.currentItem = base.owl.currentItem = position, base.options.transitionStyle !== !1 && "drag" !== drag && 1 === base.options.items && base.browser.support3d === !0 ? (base.swapSpeed(0), 
            base.browser.support3d === !0 ? base.transition3d(base.positionsInArray[position]) : base.css2slide(base.positionsInArray[position], 1), 
            base.afterGo(), base.singleItemTransition(), !1) : (goToPixel = base.positionsInArray[position], 
            base.browser.support3d === !0 ? (base.isCss3Finish = !1, speed === !0 ? (base.swapSpeed("paginationSpeed"), 
            window.setTimeout(function() {
                base.isCss3Finish = !0;
            }, base.options.paginationSpeed)) : "rewind" === speed ? (base.swapSpeed(base.options.rewindSpeed), 
            window.setTimeout(function() {
                base.isCss3Finish = !0;
            }, base.options.rewindSpeed)) : (base.swapSpeed("slideSpeed"), window.setTimeout(function() {
                base.isCss3Finish = !0;
            }, base.options.slideSpeed)), base.transition3d(goToPixel)) : speed === !0 ? base.css2slide(goToPixel, base.options.paginationSpeed) : "rewind" === speed ? base.css2slide(goToPixel, base.options.rewindSpeed) : base.css2slide(goToPixel, base.options.slideSpeed), 
            void base.afterGo()));
        },
        jumpTo: function(position) {
            var base = this;
            "function" == typeof base.options.beforeMove && base.options.beforeMove.apply(this, [ base.$elem ]), 
            position >= base.maximumItem || -1 === position ? position = base.maximumItem : 0 >= position && (position = 0), 
            base.swapSpeed(0), base.browser.support3d === !0 ? base.transition3d(base.positionsInArray[position]) : base.css2slide(base.positionsInArray[position], 1), 
            base.currentItem = base.owl.currentItem = position, base.afterGo();
        },
        afterGo: function() {
            var base = this;
            base.prevArr.push(base.currentItem), base.prevItem = base.owl.prevItem = base.prevArr[base.prevArr.length - 2], 
            base.prevArr.shift(0), base.prevItem !== base.currentItem && (base.checkPagination(), 
            base.checkNavigation(), base.eachMoveUpdate(), base.options.autoPlay !== !1 && base.checkAp()), 
            "function" == typeof base.options.afterMove && base.prevItem !== base.currentItem && base.options.afterMove.apply(this, [ base.$elem ]);
        },
        stop: function() {
            var base = this;
            base.apStatus = "stop", window.clearInterval(base.autoPlayInterval);
        },
        checkAp: function() {
            var base = this;
            "stop" !== base.apStatus && base.play();
        },
        play: function() {
            var base = this;
            return base.apStatus = "play", base.options.autoPlay === !1 ? !1 : (window.clearInterval(base.autoPlayInterval), 
            void (base.autoPlayInterval = window.setInterval(function() {
                base.next(!0);
            }, base.options.autoPlay)));
        },
        swapSpeed: function(action) {
            var base = this;
            "slideSpeed" === action ? base.$owlWrapper.css(base.addCssSpeed(base.options.slideSpeed)) : "paginationSpeed" === action ? base.$owlWrapper.css(base.addCssSpeed(base.options.paginationSpeed)) : "string" != typeof action && base.$owlWrapper.css(base.addCssSpeed(action));
        },
        addCssSpeed: function(speed) {
            return {
                "-webkit-transition": "all " + speed + "ms ease",
                "-moz-transition": "all " + speed + "ms ease",
                "-o-transition": "all " + speed + "ms ease",
                transition: "all " + speed + "ms ease"
            };
        },
        removeTransition: function() {
            return {
                "-webkit-transition": "",
                "-moz-transition": "",
                "-o-transition": "",
                transition: ""
            };
        },
        doTranslate: function(pixels) {
            return {
                "-webkit-transform": "translate3d(" + pixels + "px, 0px, 0px)",
                "-moz-transform": "translate3d(" + pixels + "px, 0px, 0px)",
                "-o-transform": "translate3d(" + pixels + "px, 0px, 0px)",
                "-ms-transform": "translate3d(" + pixels + "px, 0px, 0px)",
                transform: "translate3d(" + pixels + "px, 0px,0px)"
            };
        },
        transition3d: function(value) {
            var base = this;
            base.$owlWrapper.css(base.doTranslate(value));
        },
        css2move: function(value) {
            var base = this;
            base.$owlWrapper.css({
                left: value
            });
        },
        css2slide: function(value, speed) {
            var base = this;
            base.isCssFinish = !1, base.$owlWrapper.stop(!0, !0).animate({
                left: value
            }, {
                duration: speed || base.options.slideSpeed,
                complete: function() {
                    base.isCssFinish = !0;
                }
            });
        },
        checkBrowser: function() {
            var regex, asSupport, support3d, isTouch, base = this, translate3D = "translate3d(0px, 0px, 0px)", tempElem = document.createElement("div");
            tempElem.style.cssText = "  -moz-transform:" + translate3D + "; -ms-transform:" + translate3D + "; -o-transform:" + translate3D + "; -webkit-transform:" + translate3D + "; transform:" + translate3D, 
            regex = /translate3d\(0px, 0px, 0px\)/g, asSupport = tempElem.style.cssText.match(regex), 
            support3d = null !== asSupport && 1 === asSupport.length, isTouch = "ontouchstart" in window || window.navigator.msMaxTouchPoints, 
            base.browser = {
                support3d: support3d,
                isTouch: isTouch
            };
        },
        moveEvents: function() {
            var base = this;
            (base.options.mouseDrag !== !1 || base.options.touchDrag !== !1) && (base.gestures(), 
            base.disabledEvents());
        },
        eventTypes: function() {
            var base = this, types = [ "s", "e", "x" ];
            base.ev_types = {}, base.options.mouseDrag === !0 && base.options.touchDrag === !0 ? types = [ "touchstart.owl mousedown.owl", "touchmove.owl mousemove.owl", "touchend.owl touchcancel.owl mouseup.owl" ] : base.options.mouseDrag === !1 && base.options.touchDrag === !0 ? types = [ "touchstart.owl", "touchmove.owl", "touchend.owl touchcancel.owl" ] : base.options.mouseDrag === !0 && base.options.touchDrag === !1 && (types = [ "mousedown.owl", "mousemove.owl", "mouseup.owl" ]), 
            base.ev_types.start = types[0], base.ev_types.move = types[1], base.ev_types.end = types[2];
        },
        disabledEvents: function() {
            var base = this;
            base.$elem.on("dragstart.owl", function(event) {
                event.preventDefault();
            }), base.$elem.on("mousedown.disableTextSelect", function(e) {
                return $(e.target).is("input, textarea, select, option");
            });
        },
        gestures: function() {
            function getTouches(event) {
                if (void 0 !== event.touches) return {
                    x: event.touches[0].pageX,
                    y: event.touches[0].pageY
                };
                if (void 0 === event.touches) {
                    if (void 0 !== event.pageX) return {
                        x: event.pageX,
                        y: event.pageY
                    };
                    if (void 0 === event.pageX) return {
                        x: event.clientX,
                        y: event.clientY
                    };
                }
            }
            function swapEvents(type) {
                "on" === type ? ($(document).on(base.ev_types.move, dragMove), $(document).on(base.ev_types.end, dragEnd)) : "off" === type && ($(document).off(base.ev_types.move), 
                $(document).off(base.ev_types.end));
            }
            function dragStart(event) {
                var position, ev = event.originalEvent || event || window.event;
                if (3 === ev.which) return !1;
                if (!(base.itemsAmount <= base.options.items)) {
                    if (base.isCssFinish === !1 && !base.options.dragBeforeAnimFinish) return !1;
                    if (base.isCss3Finish === !1 && !base.options.dragBeforeAnimFinish) return !1;
                    base.options.autoPlay !== !1 && window.clearInterval(base.autoPlayInterval), base.browser.isTouch === !0 || base.$owlWrapper.hasClass("grabbing") || base.$owlWrapper.addClass("grabbing"), 
                    base.newPosX = 0, base.newRelativeX = 0, $(this).css(base.removeTransition()), position = $(this).position(), 
                    locals.relativePos = position.left, locals.offsetX = getTouches(ev).x - position.left, 
                    locals.offsetY = getTouches(ev).y - position.top, swapEvents("on"), locals.sliding = !1, 
                    locals.targetElement = ev.target || ev.srcElement;
                }
            }
            function dragMove(event) {
                var minSwipe, maxSwipe, ev = event.originalEvent || event || window.event;
                base.newPosX = getTouches(ev).x - locals.offsetX, base.newPosY = getTouches(ev).y - locals.offsetY, 
                base.newRelativeX = base.newPosX - locals.relativePos, "function" == typeof base.options.startDragging && locals.dragging !== !0 && 0 !== base.newRelativeX && (locals.dragging = !0, 
                base.options.startDragging.apply(base, [ base.$elem ])), (base.newRelativeX > 8 || base.newRelativeX < -8) && base.browser.isTouch === !0 && (void 0 !== ev.preventDefault ? ev.preventDefault() : ev.returnValue = !1, 
                locals.sliding = !0), (base.newPosY > 10 || base.newPosY < -10) && locals.sliding === !1 && $(document).off("touchmove.owl"), 
                minSwipe = function() {
                    return base.newRelativeX / 5;
                }, maxSwipe = function() {
                    return base.maximumPixels + base.newRelativeX / 5;
                }, base.newPosX = Math.max(Math.min(base.newPosX, minSwipe()), maxSwipe()), base.browser.support3d === !0 ? base.transition3d(base.newPosX) : base.css2move(base.newPosX);
            }
            function dragEnd(event) {
                var newPosition, handlers, owlStopEvent, ev = event.originalEvent || event || window.event;
                ev.target = ev.target || ev.srcElement, locals.dragging = !1, base.browser.isTouch !== !0 && base.$owlWrapper.removeClass("grabbing"), 
                base.dragDirection = base.owl.dragDirection = base.newRelativeX < 0 ? "left" : "right", 
                0 !== base.newRelativeX && (newPosition = base.getNewPosition(), base.goTo(newPosition, !1, "drag"), 
                locals.targetElement === ev.target && base.browser.isTouch !== !0 && ($(ev.target).on("click.disable", function(ev) {
                    ev.stopImmediatePropagation(), ev.stopPropagation(), ev.preventDefault(), $(ev.target).off("click.disable");
                }), handlers = $._data(ev.target, "events").click, owlStopEvent = handlers.pop(), 
                handlers.splice(0, 0, owlStopEvent))), swapEvents("off");
            }
            var base = this, locals = {
                offsetX: 0,
                offsetY: 0,
                baseElWidth: 0,
                relativePos: 0,
                position: null,
                minSwipe: null,
                maxSwipe: null,
                sliding: null,
                dargging: null,
                targetElement: null
            };
            base.isCssFinish = !0, base.$elem.on(base.ev_types.start, ".owl-wrapper", dragStart);
        },
        getNewPosition: function() {
            var base = this, newPosition = base.closestItem();
            return newPosition > base.maximumItem ? (base.currentItem = base.maximumItem, newPosition = base.maximumItem) : base.newPosX >= 0 && (newPosition = 0, 
            base.currentItem = 0), newPosition;
        },
        closestItem: function() {
            var base = this, array = base.options.scrollPerPage === !0 ? base.pagesInArray : base.positionsInArray, goal = base.newPosX, closest = null;
            return $.each(array, function(i, v) {
                goal - base.itemWidth / 20 > array[i + 1] && goal - base.itemWidth / 20 < v && "left" === base.moveDirection() ? (closest = v, 
                base.currentItem = base.options.scrollPerPage === !0 ? $.inArray(closest, base.positionsInArray) : i) : goal + base.itemWidth / 20 < v && goal + base.itemWidth / 20 > (array[i + 1] || array[i] - base.itemWidth) && "right" === base.moveDirection() && (base.options.scrollPerPage === !0 ? (closest = array[i + 1] || array[array.length - 1], 
                base.currentItem = $.inArray(closest, base.positionsInArray)) : (closest = array[i + 1], 
                base.currentItem = i + 1));
            }), base.currentItem;
        },
        moveDirection: function() {
            var direction, base = this;
            return base.newRelativeX < 0 ? (direction = "right", base.playDirection = "next") : (direction = "left", 
            base.playDirection = "prev"), direction;
        },
        customEvents: function() {
            var base = this;
            base.$elem.on("owl.next", function() {
                base.next();
            }), base.$elem.on("owl.prev", function() {
                base.prev();
            }), base.$elem.on("owl.play", function(event, speed) {
                base.options.autoPlay = speed, base.play(), base.hoverStatus = "play";
            }), base.$elem.on("owl.stop", function() {
                base.stop(), base.hoverStatus = "stop";
            }), base.$elem.on("owl.goTo", function(event, item) {
                base.goTo(item);
            }), base.$elem.on("owl.jumpTo", function(event, item) {
                base.jumpTo(item);
            });
        },
        stopOnHover: function() {
            var base = this;
            base.options.stopOnHover === !0 && base.browser.isTouch !== !0 && base.options.autoPlay !== !1 && (base.$elem.on("mouseover", function() {
                base.stop();
            }), base.$elem.on("mouseout", function() {
                "stop" !== base.hoverStatus && base.play();
            }));
        },
        lazyLoad: function() {
            var i, $item, itemNumber, $lazyImg, follow, base = this;
            if (base.options.lazyLoad === !1) return !1;
            for (i = 0; i < base.itemsAmount; i += 1) $item = $(base.$owlItems[i]), "loaded" !== $item.data("owl-loaded") && (itemNumber = $item.data("owl-item"), 
            $lazyImg = $item.find(".lazyOwl"), "string" == typeof $lazyImg.data("src") ? (void 0 === $item.data("owl-loaded") && ($lazyImg.hide(), 
            $item.addClass("loading").data("owl-loaded", "checked")), follow = base.options.lazyFollow === !0 ? itemNumber >= base.currentItem : !0, 
            follow && itemNumber < base.currentItem + base.options.items && $lazyImg.length && base.lazyPreload($item, $lazyImg)) : $item.data("owl-loaded", "loaded"));
        },
        lazyPreload: function($item, $lazyImg) {
            function showImage() {
                $item.data("owl-loaded", "loaded").removeClass("loading"), $lazyImg.removeAttr("data-src"), 
                "fade" === base.options.lazyEffect ? $lazyImg.fadeIn(400) : $lazyImg.show(), "function" == typeof base.options.afterLazyLoad && base.options.afterLazyLoad.apply(this, [ base.$elem ]);
            }
            function checkLazyImage() {
                iterations += 1, base.completeImg($lazyImg.get(0)) || isBackgroundImg === !0 ? showImage() : 100 >= iterations ? window.setTimeout(checkLazyImage, 100) : showImage();
            }
            var isBackgroundImg, base = this, iterations = 0;
            "DIV" === $lazyImg.prop("tagName") ? ($lazyImg.css("background-image", "url(" + $lazyImg.data("src") + ")"), 
            isBackgroundImg = !0) : $lazyImg[0].src = $lazyImg.data("src"), checkLazyImage();
        },
        autoHeight: function() {
            function addHeight() {
                var $currentItem = $(base.$owlItems[base.currentItem]).height();
                base.wrapperOuter.css("height", $currentItem + "px"), base.wrapperOuter.hasClass("autoHeight") || window.setTimeout(function() {
                    base.wrapperOuter.addClass("autoHeight");
                }, 0);
            }
            function checkImage() {
                iterations += 1, base.completeImg($currentimg.get(0)) ? addHeight() : 100 >= iterations ? window.setTimeout(checkImage, 100) : base.wrapperOuter.css("height", "");
            }
            var iterations, base = this, $currentimg = $(base.$owlItems[base.currentItem]).find("img");
            void 0 !== $currentimg.get(0) ? (iterations = 0, checkImage()) : addHeight();
        },
        completeImg: function(img) {
            var naturalWidthType;
            return img.complete ? (naturalWidthType = typeof img.naturalWidth, "undefined" !== naturalWidthType && 0 === img.naturalWidth ? !1 : !0) : !1;
        },
        onVisibleItems: function() {
            var i, base = this;
            for (base.options.addClassActive === !0 && base.$owlItems.removeClass("active"), 
            base.visibleItems = [], i = base.currentItem; i < base.currentItem + base.options.items; i += 1) base.visibleItems.push(i), 
            base.options.addClassActive === !0 && $(base.$owlItems[i]).addClass("active");
            base.owl.visibleItems = base.visibleItems;
        },
        transitionTypes: function(className) {
            var base = this;
            base.outClass = "owl-" + className + "-out", base.inClass = "owl-" + className + "-in";
        },
        singleItemTransition: function() {
            function transStyles(prevPos) {
                return {
                    position: "relative",
                    left: prevPos + "px"
                };
            }
            var base = this, outClass = base.outClass, inClass = base.inClass, $currentItem = base.$owlItems.eq(base.currentItem), $prevItem = base.$owlItems.eq(base.prevItem), prevPos = Math.abs(base.positionsInArray[base.currentItem]) + base.positionsInArray[base.prevItem], origin = Math.abs(base.positionsInArray[base.currentItem]) + base.itemWidth / 2, animEnd = "webkitAnimationEnd oAnimationEnd MSAnimationEnd animationend";
            base.isTransition = !0, base.$owlWrapper.addClass("owl-origin").css({
                "-webkit-transform-origin": origin + "px",
                "-moz-perspective-origin": origin + "px",
                "perspective-origin": origin + "px"
            }), $prevItem.css(transStyles(prevPos, 10)).addClass(outClass).on(animEnd, function() {
                base.endPrev = !0, $prevItem.off(animEnd), base.clearTransStyle($prevItem, outClass);
            }), $currentItem.addClass(inClass).on(animEnd, function() {
                base.endCurrent = !0, $currentItem.off(animEnd), base.clearTransStyle($currentItem, inClass);
            });
        },
        clearTransStyle: function(item, classToRemove) {
            var base = this;
            item.css({
                position: "",
                left: ""
            }).removeClass(classToRemove), base.endPrev && base.endCurrent && (base.$owlWrapper.removeClass("owl-origin"), 
            base.endPrev = !1, base.endCurrent = !1, base.isTransition = !1);
        },
        owlStatus: function() {
            var base = this;
            base.owl = {
                userOptions: base.userOptions,
                baseElement: base.$elem,
                userItems: base.$userItems,
                owlItems: base.$owlItems,
                currentItem: base.currentItem,
                prevItem: base.prevItem,
                visibleItems: base.visibleItems,
                isTouch: base.browser.isTouch,
                browser: base.browser,
                dragDirection: base.dragDirection
            };
        },
        clearEvents: function() {
            var base = this;
            base.$elem.off(".owl owl mousedown.disableTextSelect"), $(document).off(".owl owl"), 
            $(window).off("resize", base.resizer);
        },
        unWrap: function() {
            var base = this;
            0 !== base.$elem.children().length && (base.$owlWrapper.unwrap(), base.$userItems.unwrap().unwrap(), 
            base.owlControls && base.owlControls.remove()), base.clearEvents(), base.$elem.attr("style", base.$elem.data("owl-originalStyles") || "").attr("class", base.$elem.data("owl-originalClasses"));
        },
        destroy: function() {
            var base = this;
            base.stop(), window.clearInterval(base.checkVisible), base.unWrap(), base.$elem.removeData();
        },
        reinit: function(newOptions) {
            var base = this, options = $.extend({}, base.userOptions, newOptions);
            base.unWrap(), base.init(options, base.$elem);
        },
        addItem: function(htmlString, targetPosition) {
            var position, base = this;
            return htmlString ? 0 === base.$elem.children().length ? (base.$elem.append(htmlString), 
            base.setVars(), !1) : (base.unWrap(), position = void 0 === targetPosition || -1 === targetPosition ? -1 : targetPosition, 
            position >= base.$userItems.length || -1 === position ? base.$userItems.eq(-1).after(htmlString) : base.$userItems.eq(position).before(htmlString), 
            void base.setVars()) : !1;
        },
        removeItem: function(targetPosition) {
            var position, base = this;
            return 0 === base.$elem.children().length ? !1 : (position = void 0 === targetPosition || -1 === targetPosition ? -1 : targetPosition, 
            base.unWrap(), base.$userItems.eq(position).remove(), void base.setVars());
        }
    };
    $.fn.owlCarousel = function(options) {
        return this.each(function() {
            if ($(this).data("owl-init") === !0) return !1;
            $(this).data("owl-init", !0);
            var carousel = Object.create(Carousel);
            carousel.init(options, this), $.data(this, "owlCarousel", carousel);
        });
    }, $.fn.owlCarousel.options = {
        items: 5,
        itemsCustom: !1,
        itemsDesktop: [ 1199, 4 ],
        itemsDesktopSmall: [ 979, 3 ],
        itemsTablet: [ 768, 2 ],
        itemsTabletSmall: !1,
        itemsMobile: [ 479, 1 ],
        singleItem: !1,
        itemsScaleUp: !1,
        slideSpeed: 200,
        paginationSpeed: 800,
        rewindSpeed: 1e3,
        autoPlay: !1,
        stopOnHover: !1,
        navigation: !1,
        navigationText: [ "prev", "next" ],
        rewindNav: !0,
        scrollPerPage: !1,
        pagination: !0,
        paginationNumbers: !1,
        responsive: !0,
        responsiveRefreshRate: 200,
        responsiveBaseWidth: window,
        baseClass: "owl-carousel",
        theme: "owl-theme",
        lazyLoad: !1,
        lazyFollow: !0,
        lazyEffect: "fade",
        autoHeight: !1,
        jsonPath: !1,
        jsonSuccess: !1,
        dragBeforeAnimFinish: !0,
        mouseDrag: !0,
        touchDrag: !0,
        addClassActive: !1,
        transitionStyle: !1,
        beforeUpdate: !1,
        afterUpdate: !1,
        beforeInit: !1,
        afterInit: !1,
        beforeMove: !1,
        afterMove: !1,
        afterAction: !1,
        startDragging: !1,
        afterLazyLoad: !1
    };
}(jQuery, window, document), function(factory) {
    "use strict";
    "function" == typeof define && define.amd ? define([ "jquery" ], factory) : "undefined" != typeof exports ? module.exports = factory(require("jquery")) : factory(jQuery);
}(function($) {
    "use strict";
    var Slick = window.Slick || {};
    Slick = function() {
        function Slick(element, settings) {
            var responsiveSettings, breakpoint, _ = this;
            if (_.defaults = {
                accessibility: !0,
                adaptiveHeight: !1,
                appendArrows: $(element),
                appendDots: $(element),
                arrows: !0,
                asNavFor: null,
                prevArrow: '<button type="button" data-role="none" class="slick-prev">Previous</button>',
                nextArrow: '<button type="button" data-role="none" class="slick-next">Next</button>',
                autoplay: !1,
                autoplaySpeed: 3e3,
                centerMode: !1,
                centerPadding: "50px",
                cssEase: "ease",
                customPaging: function(slider, i) {
                    return '<button type="button" data-role="none">' + (i + 1) + "</button>";
                },
                dots: !1,
                dotsClass: "slick-dots",
                draggable: !0,
                easing: "linear",
                fade: !1,
                focusOnSelect: !1,
                infinite: !0,
                initialSlide: 0,
                lazyLoad: "ondemand",
                onBeforeChange: null,
                onAfterChange: null,
                onInit: null,
                onReInit: null,
                pauseOnHover: !0,
                pauseOnDotsHover: !1,
                responsive: null,
                rtl: !1,
                slide: "div",
                slidesToShow: 1,
                slidesToScroll: 1,
                speed: 300,
                swipe: !0,
                swipeToSlide: !1,
                touchMove: !0,
                touchThreshold: 5,
                useCSS: !0,
                variableWidth: !1,
                vertical: !1,
                waitForAnimate: !0
            }, _.initials = {
                animating: !1,
                dragging: !1,
                autoPlayTimer: null,
                currentDirection: 0,
                currentLeft: null,
                currentSlide: 0,
                direction: 1,
                $dots: null,
                listWidth: null,
                listHeight: null,
                loadIndex: 0,
                $nextArrow: null,
                $prevArrow: null,
                slideCount: null,
                slideWidth: null,
                $slideTrack: null,
                $slides: null,
                sliding: !1,
                slideOffset: 0,
                swipeLeft: null,
                $list: null,
                touchObject: {},
                transformsEnabled: !1
            }, $.extend(_, _.initials), _.activeBreakpoint = null, _.animType = null, _.animProp = null, 
            _.breakpoints = [], _.breakpointSettings = [], _.cssTransitions = !1, _.paused = !1, 
            _.positionProp = null, _.shouldClick = !0, _.$slider = $(element), _.$slidesCache = null, 
            _.transformType = null, _.transitionType = null, _.windowWidth = 0, _.windowTimer = null, 
            _.options = $.extend({}, _.defaults, settings), _.currentSlide = _.options.initialSlide, 
            _.originalSettings = _.options, responsiveSettings = _.options.responsive || null, 
            responsiveSettings && responsiveSettings.length > -1) {
                for (breakpoint in responsiveSettings) responsiveSettings.hasOwnProperty(breakpoint) && (_.breakpoints.push(responsiveSettings[breakpoint].breakpoint), 
                _.breakpointSettings[responsiveSettings[breakpoint].breakpoint] = responsiveSettings[breakpoint].settings);
                _.breakpoints.sort(function(a, b) {
                    return b - a;
                });
            }
            _.autoPlay = $.proxy(_.autoPlay, _), _.autoPlayClear = $.proxy(_.autoPlayClear, _), 
            _.changeSlide = $.proxy(_.changeSlide, _), _.selectHandler = $.proxy(_.selectHandler, _), 
            _.setPosition = $.proxy(_.setPosition, _), _.swipeHandler = $.proxy(_.swipeHandler, _), 
            _.dragHandler = $.proxy(_.dragHandler, _), _.keyHandler = $.proxy(_.keyHandler, _), 
            _.autoPlayIterator = $.proxy(_.autoPlayIterator, _), _.instanceUid = instanceUid++, 
            _.htmlExpr = /^(?:\s*(<[\w\W]+>)[^>]*)$/, _.init();
        }
        var instanceUid = 0;
        return Slick;
    }(), Slick.prototype.addSlide = function(markup, index, addBefore) {
        var _ = this;
        if ("boolean" == typeof index) addBefore = index, index = null; else if (0 > index || index >= _.slideCount) return !1;
        _.unload(), "number" == typeof index ? 0 === index && 0 === _.$slides.length ? $(markup).appendTo(_.$slideTrack) : addBefore ? $(markup).insertBefore(_.$slides.eq(index)) : $(markup).insertAfter(_.$slides.eq(index)) : addBefore === !0 ? $(markup).prependTo(_.$slideTrack) : $(markup).appendTo(_.$slideTrack), 
        _.$slides = _.$slideTrack.children(this.options.slide), _.$slideTrack.children(this.options.slide).detach(), 
        _.$slideTrack.append(_.$slides), _.$slides.each(function(index, element) {
            $(element).attr("index", index);
        }), _.$slidesCache = _.$slides, _.reinit();
    }, Slick.prototype.animateSlide = function(targetLeft, callback) {
        var animProps = {}, _ = this;
        if (1 === _.options.slidesToShow && _.options.adaptiveHeight === !0 && _.options.vertical === !1) {
            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(!0);
            _.$list.animate({
                height: targetHeight
            }, _.options.speed);
        }
        _.options.rtl === !0 && _.options.vertical === !1 && (targetLeft = -targetLeft), 
        _.transformsEnabled === !1 ? _.options.vertical === !1 ? _.$slideTrack.animate({
            left: targetLeft
        }, _.options.speed, _.options.easing, callback) : _.$slideTrack.animate({
            top: targetLeft
        }, _.options.speed, _.options.easing, callback) : _.cssTransitions === !1 ? $({
            animStart: _.currentLeft
        }).animate({
            animStart: targetLeft
        }, {
            duration: _.options.speed,
            easing: _.options.easing,
            step: function(now) {
                _.options.vertical === !1 ? (animProps[_.animType] = "translate(" + now + "px, 0px)", 
                _.$slideTrack.css(animProps)) : (animProps[_.animType] = "translate(0px," + now + "px)", 
                _.$slideTrack.css(animProps));
            },
            complete: function() {
                callback && callback.call();
            }
        }) : (_.applyTransition(), animProps[_.animType] = _.options.vertical === !1 ? "translate3d(" + targetLeft + "px, 0px, 0px)" : "translate3d(0px," + targetLeft + "px, 0px)", 
        _.$slideTrack.css(animProps), callback && setTimeout(function() {
            _.disableTransition(), callback.call();
        }, _.options.speed));
    }, Slick.prototype.asNavFor = function(index) {
        var _ = this, asNavFor = null != _.options.asNavFor ? $(_.options.asNavFor).getSlick() : null;
        null != asNavFor && asNavFor.slideHandler(index, !0);
    }, Slick.prototype.applyTransition = function(slide) {
        var _ = this, transition = {};
        transition[_.transitionType] = _.options.fade === !1 ? _.transformType + " " + _.options.speed + "ms " + _.options.cssEase : "opacity " + _.options.speed + "ms " + _.options.cssEase, 
        _.options.fade === !1 ? _.$slideTrack.css(transition) : _.$slides.eq(slide).css(transition);
    }, Slick.prototype.autoPlay = function() {
        var _ = this;
        _.autoPlayTimer && clearInterval(_.autoPlayTimer), _.slideCount > _.options.slidesToShow && _.paused !== !0 && (_.autoPlayTimer = setInterval(_.autoPlayIterator, _.options.autoplaySpeed));
    }, Slick.prototype.autoPlayClear = function() {
        var _ = this;
        _.autoPlayTimer && clearInterval(_.autoPlayTimer);
    }, Slick.prototype.autoPlayIterator = function() {
        var _ = this;
        _.options.infinite === !1 ? 1 === _.direction ? (_.currentSlide + 1 === _.slideCount - 1 && (_.direction = 0), 
        _.slideHandler(_.currentSlide + _.options.slidesToScroll)) : (_.currentSlide - 1 === 0 && (_.direction = 1), 
        _.slideHandler(_.currentSlide - _.options.slidesToScroll)) : _.slideHandler(_.currentSlide + _.options.slidesToScroll);
    }, Slick.prototype.buildArrows = function() {
        var _ = this;
        _.options.arrows === !0 && _.slideCount > _.options.slidesToShow && (_.$prevArrow = $(_.options.prevArrow), 
        _.$nextArrow = $(_.options.nextArrow), _.htmlExpr.test(_.options.prevArrow) && _.$prevArrow.appendTo(_.options.appendArrows), 
        _.htmlExpr.test(_.options.nextArrow) && _.$nextArrow.appendTo(_.options.appendArrows), 
        _.options.infinite !== !0 && _.$prevArrow.addClass("slick-disabled"));
    }, Slick.prototype.buildDots = function() {
        var i, dotString, _ = this;
        if (_.options.dots === !0 && _.slideCount > _.options.slidesToShow) {
            for (dotString = '<ul class="' + _.options.dotsClass + '">', i = 0; i <= _.getDotCount(); i += 1) dotString += "<li>" + _.options.customPaging.call(this, _, i) + "</li>";
            dotString += "</ul>", _.$dots = $(dotString).appendTo(_.options.appendDots), _.$dots.find("li").first().addClass("slick-active");
        }
    }, Slick.prototype.buildOut = function() {
        var _ = this;
        _.$slides = _.$slider.children(_.options.slide + ":not(.slick-cloned)").addClass("slick-slide"), 
        _.slideCount = _.$slides.length, _.$slides.each(function(index, element) {
            $(element).attr("index", index);
        }), _.$slidesCache = _.$slides, _.$slider.addClass("slick-slider"), _.$slideTrack = 0 === _.slideCount ? $('<div class="slick-track"/>').appendTo(_.$slider) : _.$slides.wrapAll('<div class="slick-track"/>').parent(), 
        _.$list = _.$slideTrack.wrap('<div class="slick-list"/>').parent(), _.$slideTrack.css("opacity", 0), 
        _.options.centerMode === !0 && (_.options.slidesToScroll = 1, _.options.slidesToShow = 3), 
        $("img[data-lazy]", _.$slider).not("[src]").addClass("slick-loading"), _.setupInfinite(), 
        _.buildArrows(), _.buildDots(), _.updateDots(), _.options.accessibility === !0 && _.$list.prop("tabIndex", 0), 
        _.setSlideClasses("number" == typeof this.currentSlide ? this.currentSlide : 0), 
        _.options.draggable === !0 && _.$list.addClass("draggable");
    }, Slick.prototype.checkResponsive = function() {
        var breakpoint, targetBreakpoint, _ = this;
        if (_.originalSettings.responsive && _.originalSettings.responsive.length > -1 && null !== _.originalSettings.responsive) {
            targetBreakpoint = null;
            for (breakpoint in _.breakpoints) _.breakpoints.hasOwnProperty(breakpoint) && $(window).width() < _.breakpoints[breakpoint] && (targetBreakpoint = _.breakpoints[breakpoint]);
            null !== targetBreakpoint ? null !== _.activeBreakpoint ? targetBreakpoint !== _.activeBreakpoint && (_.activeBreakpoint = targetBreakpoint, 
            _.options = $.extend({}, _.originalSettings, _.breakpointSettings[targetBreakpoint]), 
            _.refresh()) : (_.activeBreakpoint = targetBreakpoint, _.options = $.extend({}, _.originalSettings, _.breakpointSettings[targetBreakpoint]), 
            _.refresh()) : null !== _.activeBreakpoint && (_.activeBreakpoint = null, _.options = _.originalSettings, 
            _.refresh());
        }
    }, Slick.prototype.changeSlide = function(event) {
        var indexOffset, slideOffset, unevenOffset, _ = this, $target = $(event.target);
        switch ($target.is("a") && event.preventDefault(), unevenOffset = _.slideCount % _.options.slidesToScroll !== 0, 
        indexOffset = unevenOffset ? 0 : (_.slideCount - _.currentSlide) % _.options.slidesToScroll, 
        event.data.message) {
          case "previous":
            slideOffset = 0 === indexOffset ? _.options.slidesToScroll : _.options.slidesToShow - indexOffset, 
            _.slideCount > _.options.slidesToShow && _.slideHandler(_.currentSlide - slideOffset);
            break;

          case "next":
            slideOffset = 0 === indexOffset ? _.options.slidesToScroll : indexOffset, _.slideCount > _.options.slidesToShow && _.slideHandler(_.currentSlide + slideOffset);
            break;

          case "index":
            var index = 0 === event.data.index ? 0 : event.data.index || $(event.target).parent().index() * _.options.slidesToScroll;
            _.slideHandler(index);

          default:
            return !1;
        }
    }, Slick.prototype.clickHandler = function(event) {
        var _ = this;
        _.shouldClick === !1 && (event.stopImmediatePropagation(), event.stopPropagation(), 
        event.preventDefault());
    }, Slick.prototype.destroy = function() {
        var _ = this;
        _.autoPlayClear(), _.touchObject = {}, $(".slick-cloned", _.$slider).remove(), _.$dots && _.$dots.remove(), 
        _.$prevArrow && "object" != typeof _.options.prevArrow && _.$prevArrow.remove(), 
        _.$nextArrow && "object" != typeof _.options.nextArrow && _.$nextArrow.remove(), 
        _.$slides.parent().hasClass("slick-track") && _.$slides.unwrap().unwrap(), _.$slides.removeClass("slick-slide slick-active slick-center slick-visible").removeAttr("index").css({
            position: "",
            left: "",
            top: "",
            zIndex: "",
            opacity: "",
            width: ""
        }), _.$slider.removeClass("slick-slider"), _.$slider.removeClass("slick-initialized"), 
        _.$list.off(".slick"), $(window).off(".slick-" + _.instanceUid), $(document).off(".slick-" + _.instanceUid);
    }, Slick.prototype.disableTransition = function(slide) {
        var _ = this, transition = {};
        transition[_.transitionType] = "", _.options.fade === !1 ? _.$slideTrack.css(transition) : _.$slides.eq(slide).css(transition);
    }, Slick.prototype.fadeSlide = function(oldSlide, slideIndex, callback) {
        var _ = this;
        _.cssTransitions === !1 ? (_.$slides.eq(slideIndex).css({
            zIndex: 1e3
        }), _.$slides.eq(slideIndex).animate({
            opacity: 1
        }, _.options.speed, _.options.easing, callback), _.$slides.eq(oldSlide).animate({
            opacity: 0
        }, _.options.speed, _.options.easing)) : (_.applyTransition(slideIndex), _.applyTransition(oldSlide), 
        _.$slides.eq(slideIndex).css({
            opacity: 1,
            zIndex: 1e3
        }), _.$slides.eq(oldSlide).css({
            opacity: 0
        }), callback && setTimeout(function() {
            _.disableTransition(slideIndex), _.disableTransition(oldSlide), callback.call();
        }, _.options.speed));
    }, Slick.prototype.filterSlides = function(filter) {
        var _ = this;
        null !== filter && (_.unload(), _.$slideTrack.children(this.options.slide).detach(), 
        _.$slidesCache.filter(filter).appendTo(_.$slideTrack), _.reinit());
    }, Slick.prototype.getCurrent = function() {
        var _ = this;
        return _.currentSlide;
    }, Slick.prototype.getDotCount = function() {
        var _ = this;
        return Math.ceil(_.slideCount / _.options.slidesToScroll) - 1;
    }, Slick.prototype.getLeft = function(slideIndex) {
        var targetLeft, verticalHeight, targetSlide, _ = this, verticalOffset = 0;
        return _.slideOffset = 0, verticalHeight = _.$slides.first().outerHeight(), _.options.infinite === !0 ? (_.slideCount > _.options.slidesToShow && (_.slideOffset = _.slideWidth * _.options.slidesToShow * -1, 
        verticalOffset = verticalHeight * _.options.slidesToShow * -1), _.slideCount % _.options.slidesToScroll !== 0 && slideIndex + _.options.slidesToScroll > _.slideCount && _.slideCount > _.options.slidesToShow && (_.slideOffset = _.slideCount % _.options.slidesToShow * _.slideWidth * -1, 
        verticalOffset = _.slideCount % _.options.slidesToShow * verticalHeight * -1)) : slideIndex + _.options.slidesToShow > _.slideCount && (_.slideOffset = (slideIndex + _.options.slidesToShow - _.slideCount) * _.slideWidth, 
        verticalOffset = (slideIndex + _.options.slidesToShow - _.slideCount) * verticalHeight), 
        _.slideCount <= _.options.slidesToShow && (_.slideOffset = 0, verticalOffset = 0), 
        _.options.centerMode === !0 && _.options.infinite === !0 ? _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2) - _.slideWidth : _.options.centerMode === !0 && (_.slideOffset = 0, 
        _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2)), targetLeft = _.options.vertical === !1 ? slideIndex * _.slideWidth * -1 + _.slideOffset : slideIndex * verticalHeight * -1 + verticalOffset, 
        _.options.variableWidth === !0 && (targetSlide = _.$slideTrack.children(".slick-slide").eq(_.slideCount <= _.options.slidesToShow || _.options.infinite === !1 ? slideIndex : slideIndex + _.options.slidesToShow), 
        targetLeft = targetSlide[0] ? -1 * targetSlide[0].offsetLeft : 0, _.options.centerMode === !0 && (targetSlide = _.$slideTrack.children(".slick-slide").eq(_.options.infinite === !1 ? slideIndex : slideIndex + _.options.slidesToShow + 1), 
        targetLeft = targetSlide[0] ? -1 * targetSlide[0].offsetLeft : 0, targetLeft += (_.$list.width() - targetSlide.outerWidth()) / 2)), 
        targetLeft;
    }, Slick.prototype.getSlideCount = function() {
        var slidesTraversed, _ = this;
        if (_.options.swipeToSlide === !0) {
            var swipedSlide = null;
            return _.$slideTrack.find(".slick-slide").each(function(index, slide) {
                return slide.offsetLeft + $(slide).outerWidth() / 2 > -1 * _.swipeLeft ? (swipedSlide = slide, 
                !1) : void 0;
            }), slidesTraversed = Math.abs($(swipedSlide).attr("index") - _.currentSlide);
        }
        return _.options.slidesToScroll;
    }, Slick.prototype.init = function() {
        var _ = this;
        $(_.$slider).hasClass("slick-initialized") || ($(_.$slider).addClass("slick-initialized"), 
        _.buildOut(), _.setProps(), _.startLoad(), _.loadSlider(), _.initializeEvents(), 
        _.checkResponsive()), null !== _.options.onInit && _.options.onInit.call(this, _);
    }, Slick.prototype.initArrowEvents = function() {
        var _ = this;
        _.options.arrows === !0 && _.slideCount > _.options.slidesToShow && (_.$prevArrow.on("click.slick", {
            message: "previous"
        }, _.changeSlide), _.$nextArrow.on("click.slick", {
            message: "next"
        }, _.changeSlide));
    }, Slick.prototype.initDotEvents = function() {
        var _ = this;
        _.options.dots === !0 && _.slideCount > _.options.slidesToShow && $("li", _.$dots).on("click.slick", {
            message: "index"
        }, _.changeSlide), _.options.dots === !0 && _.options.pauseOnDotsHover === !0 && _.options.autoplay === !0 && $("li", _.$dots).on("mouseenter.slick", function() {
            _.paused = !0, _.autoPlayClear();
        }).on("mouseleave.slick", function() {
            _.paused = !1, _.autoPlay();
        });
    }, Slick.prototype.initializeEvents = function() {
        var _ = this;
        _.initArrowEvents(), _.initDotEvents(), _.$list.on("touchstart.slick mousedown.slick", {
            action: "start"
        }, _.swipeHandler), _.$list.on("touchmove.slick mousemove.slick", {
            action: "move"
        }, _.swipeHandler), _.$list.on("touchend.slick mouseup.slick", {
            action: "end"
        }, _.swipeHandler), _.$list.on("touchcancel.slick mouseleave.slick", {
            action: "end"
        }, _.swipeHandler), _.$list.on("click.slick", _.clickHandler.bind(this)), _.options.pauseOnHover === !0 && _.options.autoplay === !0 && (_.$list.on("mouseenter.slick", function() {
            _.paused = !0, _.autoPlayClear();
        }), _.$list.on("mouseleave.slick", function() {
            _.paused = !1, _.autoPlay();
        })), _.options.accessibility === !0 && _.$list.on("keydown.slick", _.keyHandler), 
        _.options.focusOnSelect === !0 && $(_.options.slide, _.$slideTrack).on("click.slick", _.selectHandler), 
        $(window).on("orientationchange.slick.slick-" + _.instanceUid, function() {
            _.checkResponsive(), _.setPosition();
        }), $(window).on("resize.slick.slick-" + _.instanceUid, function() {
            $(window).width() !== _.windowWidth && (clearTimeout(_.windowDelay), _.windowDelay = window.setTimeout(function() {
                _.windowWidth = $(window).width(), _.checkResponsive(), _.setPosition();
            }, 50));
        }), $("*[draggable!=true]", _.$slideTrack).on("dragstart", function(e) {
            e.preventDefault();
        }), $(window).on("load.slick.slick-" + _.instanceUid, _.setPosition), $(document).on("ready.slick.slick-" + _.instanceUid, _.setPosition);
    }, Slick.prototype.initUI = function() {
        var _ = this;
        _.options.arrows === !0 && _.slideCount > _.options.slidesToShow && (_.$prevArrow.show(), 
        _.$nextArrow.show()), _.options.dots === !0 && _.slideCount > _.options.slidesToShow && _.$dots.show(), 
        _.options.autoplay === !0 && _.autoPlay();
    }, Slick.prototype.keyHandler = function(event) {
        var _ = this;
        37 === event.keyCode ? _.changeSlide({
            data: {
                message: "previous"
            }
        }) : 39 === event.keyCode && _.changeSlide({
            data: {
                message: "next"
            }
        });
    }, Slick.prototype.lazyLoad = function() {
        function loadImages(imagesScope) {
            $("img[data-lazy]", imagesScope).each(function() {
                var image = $(this), imageSource = $(this).attr("data-lazy");
                image.load(function() {
                    image.animate({
                        opacity: 1
                    }, 200);
                }).css({
                    opacity: 0
                }).attr("src", imageSource).removeAttr("data-lazy").removeClass("slick-loading");
            });
        }
        var loadRange, cloneRange, rangeStart, rangeEnd, _ = this;
        _.options.centerMode === !0 ? _.options.infinite === !0 ? (rangeStart = _.currentSlide + (_.options.slidesToShow / 2 + 1), 
        rangeEnd = rangeStart + _.options.slidesToShow + 2) : (rangeStart = Math.max(0, _.currentSlide - (_.options.slidesToShow / 2 + 1)), 
        rangeEnd = 2 + (_.options.slidesToShow / 2 + 1) + _.currentSlide) : (rangeStart = _.options.infinite ? _.options.slidesToShow + _.currentSlide : _.currentSlide, 
        rangeEnd = rangeStart + _.options.slidesToShow, _.options.fade === !0 && (rangeStart > 0 && rangeStart--, 
        rangeEnd <= _.slideCount && rangeEnd++)), loadRange = _.$slider.find(".slick-slide").slice(rangeStart, rangeEnd), 
        loadImages(loadRange), _.slideCount <= _.options.slidesToShow ? (cloneRange = _.$slider.find(".slick-slide"), 
        loadImages(cloneRange)) : _.currentSlide >= _.slideCount - _.options.slidesToShow ? (cloneRange = _.$slider.find(".slick-cloned").slice(0, _.options.slidesToShow), 
        loadImages(cloneRange)) : 0 === _.currentSlide && (cloneRange = _.$slider.find(".slick-cloned").slice(-1 * _.options.slidesToShow), 
        loadImages(cloneRange));
    }, Slick.prototype.loadSlider = function() {
        var _ = this;
        _.setPosition(), _.$slideTrack.css({
            opacity: 1
        }), _.$slider.removeClass("slick-loading"), _.initUI(), "progressive" === _.options.lazyLoad && _.progressiveLazyLoad();
    }, Slick.prototype.postSlide = function(index) {
        var _ = this;
        null !== _.options.onAfterChange && _.options.onAfterChange.call(this, _, index), 
        _.animating = !1, _.setPosition(), _.swipeLeft = null, _.options.autoplay === !0 && _.paused === !1 && _.autoPlay();
    }, Slick.prototype.progressiveLazyLoad = function() {
        var imgCount, targetImage, _ = this;
        imgCount = $("img[data-lazy]").length, imgCount > 0 && (targetImage = $("img[data-lazy]", _.$slider).first(), 
        targetImage.attr("src", targetImage.attr("data-lazy")).removeClass("slick-loading").load(function() {
            targetImage.removeAttr("data-lazy"), _.progressiveLazyLoad();
        }).error(function() {
            targetImage.removeAttr("data-lazy"), _.progressiveLazyLoad();
        }));
    }, Slick.prototype.refresh = function() {
        var _ = this, currentSlide = _.currentSlide;
        _.destroy(), $.extend(_, _.initials), _.currentSlide = currentSlide, _.init();
    }, Slick.prototype.reinit = function() {
        var _ = this;
        _.$slides = _.$slideTrack.children(_.options.slide).addClass("slick-slide"), _.slideCount = _.$slides.length, 
        _.currentSlide >= _.slideCount && 0 !== _.currentSlide && (_.currentSlide = _.currentSlide - _.options.slidesToScroll), 
        _.slideCount <= _.options.slidesToShow && (_.currentSlide = 0), _.setProps(), _.setupInfinite(), 
        _.buildArrows(), _.updateArrows(), _.initArrowEvents(), _.buildDots(), _.updateDots(), 
        _.initDotEvents(), _.options.focusOnSelect === !0 && $(_.options.slide, _.$slideTrack).on("click.slick", _.selectHandler), 
        _.setSlideClasses(0), _.setPosition(), null !== _.options.onReInit && _.options.onReInit.call(this, _);
    }, Slick.prototype.removeSlide = function(index, removeBefore) {
        var _ = this;
        return "boolean" == typeof index ? (removeBefore = index, index = removeBefore === !0 ? 0 : _.slideCount - 1) : index = removeBefore === !0 ? --index : index, 
        _.slideCount < 1 || 0 > index || index > _.slideCount - 1 ? !1 : (_.unload(), _.$slideTrack.children(this.options.slide).eq(index).remove(), 
        _.$slides = _.$slideTrack.children(this.options.slide), _.$slideTrack.children(this.options.slide).detach(), 
        _.$slideTrack.append(_.$slides), _.$slidesCache = _.$slides, void _.reinit());
    }, Slick.prototype.setCSS = function(position) {
        var x, y, _ = this, positionProps = {};
        _.options.rtl === !0 && (position = -position), x = "left" == _.positionProp ? position + "px" : "0px", 
        y = "top" == _.positionProp ? position + "px" : "0px", positionProps[_.positionProp] = position, 
        _.transformsEnabled === !1 ? _.$slideTrack.css(positionProps) : (positionProps = {}, 
        _.cssTransitions === !1 ? (positionProps[_.animType] = "translate(" + x + ", " + y + ")", 
        _.$slideTrack.css(positionProps)) : (positionProps[_.animType] = "translate3d(" + x + ", " + y + ", 0px)", 
        _.$slideTrack.css(positionProps)));
    }, Slick.prototype.setDimensions = function() {
        var _ = this;
        if (_.options.vertical === !1 ? _.options.centerMode === !0 && _.$list.css({
            padding: "0px " + _.options.centerPadding
        }) : (_.$list.height(_.$slides.first().outerHeight(!0) * _.options.slidesToShow), 
        _.options.centerMode === !0 && _.$list.css({
            padding: _.options.centerPadding + " 0px"
        })), _.listWidth = _.$list.width(), _.listHeight = _.$list.height(), _.options.vertical === !1 && _.options.variableWidth === !1) _.slideWidth = Math.ceil(_.listWidth / _.options.slidesToShow), 
        _.$slideTrack.width(Math.ceil(_.slideWidth * _.$slideTrack.children(".slick-slide").length)); else if (_.options.variableWidth === !0) {
            var trackWidth = 0;
            _.slideWidth = Math.ceil(_.listWidth / _.options.slidesToShow), _.$slideTrack.children(".slick-slide").each(function() {
                trackWidth += Math.ceil($(this).outerWidth(!0));
            }), _.$slideTrack.width(Math.ceil(trackWidth) + 1);
        } else _.slideWidth = Math.ceil(_.listWidth), _.$slideTrack.height(Math.ceil(_.$slides.first().outerHeight(!0) * _.$slideTrack.children(".slick-slide").length));
        var offset = _.$slides.first().outerWidth(!0) - _.$slides.first().width();
        _.options.variableWidth === !1 && _.$slideTrack.children(".slick-slide").width(_.slideWidth - offset);
    }, Slick.prototype.setFade = function() {
        var targetLeft, _ = this;
        _.$slides.each(function(index, element) {
            targetLeft = _.slideWidth * index * -1, $(element).css(_.options.rtl === !0 ? {
                position: "relative",
                right: targetLeft,
                top: 0,
                zIndex: 800,
                opacity: 0
            } : {
                position: "relative",
                left: targetLeft,
                top: 0,
                zIndex: 800,
                opacity: 0
            });
        }), _.$slides.eq(_.currentSlide).css({
            zIndex: 900,
            opacity: 1
        });
    }, Slick.prototype.setHeight = function() {
        var _ = this;
        if (1 === _.options.slidesToShow && _.options.adaptiveHeight === !0 && _.options.vertical === !1) {
            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(!0);
            _.$list.css("height", targetHeight);
        }
    }, Slick.prototype.setPosition = function() {
        var _ = this;
        _.setDimensions(), _.setHeight(), _.options.fade === !1 ? _.setCSS(_.getLeft(_.currentSlide)) : _.setFade();
    }, Slick.prototype.setProps = function() {
        var _ = this, bodyStyle = document.body.style;
        _.positionProp = _.options.vertical === !0 ? "top" : "left", "top" === _.positionProp ? _.$slider.addClass("slick-vertical") : _.$slider.removeClass("slick-vertical"), 
        (void 0 !== bodyStyle.WebkitTransition || void 0 !== bodyStyle.MozTransition || void 0 !== bodyStyle.msTransition) && _.options.useCSS === !0 && (_.cssTransitions = !0), 
        void 0 !== bodyStyle.OTransform && (_.animType = "OTransform", _.transformType = "-o-transform", 
        _.transitionType = "OTransition", void 0 === bodyStyle.perspectiveProperty && void 0 === bodyStyle.webkitPerspective && (_.animType = !1)), 
        void 0 !== bodyStyle.MozTransform && (_.animType = "MozTransform", _.transformType = "-moz-transform", 
        _.transitionType = "MozTransition", void 0 === bodyStyle.perspectiveProperty && void 0 === bodyStyle.MozPerspective && (_.animType = !1)), 
        void 0 !== bodyStyle.webkitTransform && (_.animType = "webkitTransform", _.transformType = "-webkit-transform", 
        _.transitionType = "webkitTransition", void 0 === bodyStyle.perspectiveProperty && void 0 === bodyStyle.webkitPerspective && (_.animType = !1)), 
        void 0 !== bodyStyle.msTransform && (_.animType = "msTransform", _.transformType = "-ms-transform", 
        _.transitionType = "msTransition", void 0 === bodyStyle.msTransform && (_.animType = !1)), 
        void 0 !== bodyStyle.transform && _.animType !== !1 && (_.animType = "transform", 
        _.transformType = "transform", _.transitionType = "transition"), _.transformsEnabled = null !== _.animType && _.animType !== !1;
    }, Slick.prototype.setSlideClasses = function(index) {
        var centerOffset, allSlides, indexOffset, remainder, _ = this;
        _.$slider.find(".slick-slide").removeClass("slick-active").removeClass("slick-center"), 
        allSlides = _.$slider.find(".slick-slide"), _.options.centerMode === !0 ? (centerOffset = Math.floor(_.options.slidesToShow / 2), 
        _.options.infinite === !0 && (index >= centerOffset && index <= _.slideCount - 1 - centerOffset ? _.$slides.slice(index - centerOffset, index + centerOffset + 1).addClass("slick-active") : (indexOffset = _.options.slidesToShow + index, 
        allSlides.slice(indexOffset - centerOffset + 1, indexOffset + centerOffset + 2).addClass("slick-active")), 
        0 === index ? allSlides.eq(allSlides.length - 1 - _.options.slidesToShow).addClass("slick-center") : index === _.slideCount - 1 && allSlides.eq(_.options.slidesToShow).addClass("slick-center")), 
        _.$slides.eq(index).addClass("slick-center")) : index >= 0 && index <= _.slideCount - _.options.slidesToShow ? _.$slides.slice(index, index + _.options.slidesToShow).addClass("slick-active") : allSlides.length <= _.options.slidesToShow ? allSlides.addClass("slick-active") : (remainder = _.slideCount % _.options.slidesToShow, 
        indexOffset = _.options.infinite === !0 ? _.options.slidesToShow + index : index, 
        _.options.slidesToShow == _.options.slidesToScroll && _.slideCount - index < _.options.slidesToShow ? allSlides.slice(indexOffset - (_.options.slidesToShow - remainder), indexOffset + remainder).addClass("slick-active") : allSlides.slice(indexOffset, indexOffset + _.options.slidesToShow).addClass("slick-active")), 
        "ondemand" === _.options.lazyLoad && _.lazyLoad();
    }, Slick.prototype.setupInfinite = function() {
        var i, slideIndex, infiniteCount, _ = this;
        if (_.options.fade === !0 && (_.options.centerMode = !1), _.options.infinite === !0 && _.options.fade === !1 && (slideIndex = null, 
        _.slideCount > _.options.slidesToShow)) {
            for (infiniteCount = _.options.centerMode === !0 ? _.options.slidesToShow + 1 : _.options.slidesToShow, 
            i = _.slideCount; i > _.slideCount - infiniteCount; i -= 1) slideIndex = i - 1, 
            $(_.$slides[slideIndex]).clone(!0).attr("id", "").attr("index", slideIndex - _.slideCount).prependTo(_.$slideTrack).addClass("slick-cloned");
            for (i = 0; infiniteCount > i; i += 1) slideIndex = i, $(_.$slides[slideIndex]).clone(!0).attr("id", "").attr("index", slideIndex + _.slideCount).appendTo(_.$slideTrack).addClass("slick-cloned");
            _.$slideTrack.find(".slick-cloned").find("[id]").each(function() {
                $(this).attr("id", "");
            });
        }
    }, Slick.prototype.selectHandler = function(event) {
        var _ = this, index = parseInt($(event.target).parents(".slick-slide").attr("index"));
        return index || (index = 0), _.slideCount <= _.options.slidesToShow ? (_.$slider.find(".slick-slide").removeClass("slick-active"), 
        _.$slides.eq(index).addClass("slick-active"), _.options.centerMode === !0 && (_.$slider.find(".slick-slide").removeClass("slick-center"), 
        _.$slides.eq(index).addClass("slick-center")), void _.asNavFor(index)) : void _.slideHandler(index);
    }, Slick.prototype.slideHandler = function(index, sync) {
        var targetSlide, animSlide, oldSlide, slideLeft, unevenOffset, targetLeft = null, _ = this;
        return sync = sync || !1, _.animating === !0 && _.options.waitForAnimate === !0 || _.options.fade === !0 && _.currentSlide === index || _.slideCount <= _.options.slidesToShow ? void 0 : (sync === !1 && _.asNavFor(index), 
        targetSlide = index, targetLeft = _.getLeft(targetSlide), slideLeft = _.getLeft(_.currentSlide), 
        unevenOffset = 1 === _.options.slidesToScroll ? 0 : _.options.slidesToShow - Math.round(_.slideCount / _.options.slidesToScroll), 
        _.currentLeft = null === _.swipeLeft ? slideLeft : _.swipeLeft, _.options.infinite === !1 && _.options.centerMode === !1 && (0 > index || index > _.slideCount - _.options.slidesToShow + unevenOffset) ? void (_.options.fade === !1 && (targetSlide = _.currentSlide, 
        _.animateSlide(slideLeft, function() {
            _.postSlide(targetSlide);
        }))) : _.options.infinite === !1 && _.options.centerMode === !0 && (0 > index || index > _.slideCount - _.options.slidesToScroll) ? void (_.options.fade === !1 && (targetSlide = _.currentSlide, 
        _.animateSlide(slideLeft, function() {
            _.postSlide(targetSlide);
        }))) : (_.options.autoplay === !0 && clearInterval(_.autoPlayTimer), animSlide = 0 > targetSlide ? _.slideCount % _.options.slidesToScroll !== 0 ? _.slideCount - _.slideCount % _.options.slidesToScroll : _.slideCount + targetSlide : targetSlide >= _.slideCount ? _.slideCount % _.options.slidesToScroll !== 0 ? 0 : targetSlide - _.slideCount : targetSlide, 
        _.animating = !0, null !== _.options.onBeforeChange && index !== _.currentSlide && _.options.onBeforeChange.call(this, _, _.currentSlide, animSlide), 
        oldSlide = _.currentSlide, _.currentSlide = animSlide, _.setSlideClasses(_.currentSlide), 
        _.updateDots(), _.updateArrows(), _.options.fade === !0 ? void _.fadeSlide(oldSlide, animSlide, function() {
            _.postSlide(animSlide);
        }) : void _.animateSlide(targetLeft, function() {
            _.postSlide(animSlide);
        })));
    }, Slick.prototype.startLoad = function() {
        var _ = this;
        _.options.arrows === !0 && _.slideCount > _.options.slidesToShow && (_.$prevArrow.hide(), 
        _.$nextArrow.hide()), _.options.dots === !0 && _.slideCount > _.options.slidesToShow && _.$dots.hide(), 
        _.$slider.addClass("slick-loading");
    }, Slick.prototype.swipeDirection = function() {
        var xDist, yDist, r, swipeAngle, _ = this;
        return xDist = _.touchObject.startX - _.touchObject.curX, yDist = _.touchObject.startY - _.touchObject.curY, 
        r = Math.atan2(yDist, xDist), swipeAngle = Math.round(180 * r / Math.PI), 0 > swipeAngle && (swipeAngle = 360 - Math.abs(swipeAngle)), 
        45 >= swipeAngle && swipeAngle >= 0 ? "left" : 360 >= swipeAngle && swipeAngle >= 315 ? "left" : swipeAngle >= 135 && 225 >= swipeAngle ? "right" : "vertical";
    }, Slick.prototype.swipeEnd = function() {
        var _ = this;
        if (_.dragging = !1, _.shouldClick = _.touchObject.swipeLength > 10 ? !1 : !0, void 0 === _.touchObject.curX) return !1;
        if (_.touchObject.swipeLength >= _.touchObject.minSwipe) switch (_.swipeDirection()) {
          case "left":
            _.slideHandler(_.currentSlide + _.getSlideCount()), _.currentDirection = 0, _.touchObject = {};
            break;

          case "right":
            _.slideHandler(_.currentSlide - _.getSlideCount()), _.currentDirection = 1, _.touchObject = {};
        } else _.touchObject.startX !== _.touchObject.curX && (_.slideHandler(_.currentSlide), 
        _.touchObject = {});
    }, Slick.prototype.swipeHandler = function(event) {
        var _ = this;
        if (!(_.options.swipe === !1 || "ontouchend" in document && _.options.swipe === !1 || _.options.draggable === !1 && -1 !== event.type.indexOf("mouse"))) switch (_.touchObject.fingerCount = event.originalEvent && void 0 !== event.originalEvent.touches ? event.originalEvent.touches.length : 1, 
        _.touchObject.minSwipe = _.listWidth / _.options.touchThreshold, event.data.action) {
          case "start":
            _.swipeStart(event);
            break;

          case "move":
            _.swipeMove(event);
            break;

          case "end":
            _.swipeEnd(event);
        }
    }, Slick.prototype.swipeMove = function(event) {
        var curLeft, swipeDirection, positionOffset, touches, _ = this;
        return touches = void 0 !== event.originalEvent ? event.originalEvent.touches : null, 
        !_.dragging || touches && 1 !== touches.length ? !1 : (curLeft = _.getLeft(_.currentSlide), 
        _.touchObject.curX = void 0 !== touches ? touches[0].pageX : event.clientX, _.touchObject.curY = void 0 !== touches ? touches[0].pageY : event.clientY, 
        _.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(_.touchObject.curX - _.touchObject.startX, 2))), 
        swipeDirection = _.swipeDirection(), "vertical" !== swipeDirection ? (void 0 !== event.originalEvent && _.touchObject.swipeLength > 4 && event.preventDefault(), 
        positionOffset = _.touchObject.curX > _.touchObject.startX ? 1 : -1, _.swipeLeft = _.options.vertical === !1 ? curLeft + _.touchObject.swipeLength * positionOffset : curLeft + _.touchObject.swipeLength * (_.$list.height() / _.listWidth) * positionOffset, 
        _.options.fade === !0 || _.options.touchMove === !1 ? !1 : _.animating === !0 ? (_.swipeLeft = null, 
        !1) : void _.setCSS(_.swipeLeft)) : void 0);
    }, Slick.prototype.swipeStart = function(event) {
        var touches, _ = this;
        return 1 !== _.touchObject.fingerCount || _.slideCount <= _.options.slidesToShow ? (_.touchObject = {}, 
        !1) : (void 0 !== event.originalEvent && void 0 !== event.originalEvent.touches && (touches = event.originalEvent.touches[0]), 
        _.touchObject.startX = _.touchObject.curX = void 0 !== touches ? touches.pageX : event.clientX, 
        _.touchObject.startY = _.touchObject.curY = void 0 !== touches ? touches.pageY : event.clientY, 
        void (_.dragging = !0));
    }, Slick.prototype.unfilterSlides = function() {
        var _ = this;
        null !== _.$slidesCache && (_.unload(), _.$slideTrack.children(this.options.slide).detach(), 
        _.$slidesCache.appendTo(_.$slideTrack), _.reinit());
    }, Slick.prototype.unload = function() {
        var _ = this;
        $(".slick-cloned", _.$slider).remove(), _.$dots && _.$dots.remove(), _.$prevArrow && "object" != typeof _.options.prevArrow && _.$prevArrow.remove(), 
        _.$nextArrow && "object" != typeof _.options.nextArrow && _.$nextArrow.remove(), 
        _.$slides.removeClass("slick-slide slick-active slick-visible").css("width", "");
    }, Slick.prototype.updateArrows = function() {
        var centerOffset, _ = this;
        centerOffset = Math.floor(_.options.slidesToShow / 2), _.options.arrows === !0 && _.options.infinite !== !0 && _.slideCount > _.options.slidesToShow && (_.$prevArrow.removeClass("slick-disabled"), 
        _.$nextArrow.removeClass("slick-disabled"), 0 === _.currentSlide ? (_.$prevArrow.addClass("slick-disabled"), 
        _.$nextArrow.removeClass("slick-disabled")) : _.currentSlide >= _.slideCount - _.options.slidesToShow && _.options.centerMode === !1 ? (_.$nextArrow.addClass("slick-disabled"), 
        _.$prevArrow.removeClass("slick-disabled")) : _.currentSlide > _.slideCount - _.options.slidesToShow + centerOffset && _.options.centerMode === !0 && (_.$nextArrow.addClass("slick-disabled"), 
        _.$prevArrow.removeClass("slick-disabled")));
    }, Slick.prototype.updateDots = function() {
        var _ = this;
        null !== _.$dots && (_.$dots.find("li").removeClass("slick-active"), _.$dots.find("li").eq(Math.floor(_.currentSlide / _.options.slidesToScroll)).addClass("slick-active"));
    }, $.fn.slick = function(options) {
        var _ = this;
        return _.each(function(index, element) {
            element.slick = new Slick(element, options);
        });
    }, $.fn.slickAdd = function(slide, slideIndex, addBefore) {
        var _ = this;
        return _.each(function(index, element) {
            element.slick.addSlide(slide, slideIndex, addBefore);
        });
    }, $.fn.slickCurrentSlide = function() {
        var _ = this;
        return _.get(0).slick.getCurrent();
    }, $.fn.slickFilter = function(filter) {
        var _ = this;
        return _.each(function(index, element) {
            element.slick.filterSlides(filter);
        });
    }, $.fn.slickGoTo = function(slide) {
        var _ = this;
        return _.each(function(index, element) {
            element.slick.changeSlide({
                data: {
                    message: "index",
                    index: parseInt(slide)
                }
            });
        });
    }, $.fn.slickNext = function() {
        var _ = this;
        return _.each(function(index, element) {
            element.slick.changeSlide({
                data: {
                    message: "next"
                }
            });
        });
    }, $.fn.slickPause = function() {
        var _ = this;
        return _.each(function(index, element) {
            element.slick.autoPlayClear(), element.slick.paused = !0;
        });
    }, $.fn.slickPlay = function() {
        var _ = this;
        return _.each(function(index, element) {
            element.slick.paused = !1, element.slick.autoPlay();
        });
    }, $.fn.slickPrev = function() {
        var _ = this;
        return _.each(function(index, element) {
            element.slick.changeSlide({
                data: {
                    message: "previous"
                }
            });
        });
    }, $.fn.slickRemove = function(slideIndex, removeBefore) {
        var _ = this;
        return _.each(function(index, element) {
            element.slick.removeSlide(slideIndex, removeBefore);
        });
    }, $.fn.slickGetOption = function(option) {
        var _ = this;
        return _.get(0).slick.options[option];
    }, $.fn.slickSetOption = function(option, value, refresh) {
        var _ = this;
        return _.each(function(index, element) {
            element.slick.options[option] = value, refresh === !0 && (element.slick.unload(), 
            element.slick.reinit());
        });
    }, $.fn.slickUnfilter = function() {
        var _ = this;
        return _.each(function(index, element) {
            element.slick.unfilterSlides();
        });
    }, $.fn.unslick = function() {
        var _ = this;
        return _.each(function(index, element) {
            element.slick && element.slick.destroy();
        });
    }, $.fn.getSlick = function() {
        var s = null, _ = this;
        return _.each(function(index, element) {
            s = element.slick;
        }), s;
    };
}), function(root, factory) {
    "function" == typeof define && define.amd ? define("smoothScroll", factory(root)) : "object" == typeof exports ? module.exports = factory(root) : root.smoothScroll = factory(root);
}(window || this, function(root) {
    "use strict";
    var settings, smoothScroll = {}, supports = !!document.querySelector && !!root.addEventListener, defaults = {
        speed: 500,
        easing: "easeInOutCubic",
        offset: 0,
        updateURL: !0,
        callbackBefore: function() {},
        callbackAfter: function() {}
    }, forEach = function(collection, callback, scope) {
        if ("[object Object]" === Object.prototype.toString.call(collection)) for (var prop in collection) Object.prototype.hasOwnProperty.call(collection, prop) && callback.call(scope, collection[prop], prop, collection); else for (var i = 0, len = collection.length; len > i; i++) callback.call(scope, collection[i], i, collection);
    }, extend = function(defaults, options) {
        var extended = {};
        return forEach(defaults, function(value, prop) {
            extended[prop] = defaults[prop];
        }), forEach(options, function(value, prop) {
            extended[prop] = options[prop];
        }), extended;
    }, getClosest = function(elem, selector) {
        for (var firstChar = selector.charAt(0); elem && elem !== document; elem = elem.parentNode) if ("." === firstChar) {
            if (elem.classList.contains(selector.substr(1))) return elem;
        } else if ("#" === firstChar) {
            if (elem.id === selector.substr(1)) return elem;
        } else if ("[" === firstChar && elem.hasAttribute(selector.substr(1, selector.length - 2))) return elem;
        return !1;
    }, escapeCharacters = function(id) {
        for (var codeUnit, string = String(id), length = string.length, index = -1, result = "", firstCodeUnit = string.charCodeAt(0); ++index < length; ) {
            if (codeUnit = string.charCodeAt(index), 0 === codeUnit) throw new InvalidCharacterError("Invalid character: the input contains U+0000.");
            result += codeUnit >= 1 && 31 >= codeUnit || 127 == codeUnit || 0 === index && codeUnit >= 48 && 57 >= codeUnit || 1 === index && codeUnit >= 48 && 57 >= codeUnit && 45 === firstCodeUnit ? "\\" + codeUnit.toString(16) + " " : codeUnit >= 128 || 45 === codeUnit || 95 === codeUnit || codeUnit >= 48 && 57 >= codeUnit || codeUnit >= 65 && 90 >= codeUnit || codeUnit >= 97 && 122 >= codeUnit ? string.charAt(index) : "\\" + string.charAt(index);
        }
        return result;
    }, easingPattern = function(type, time) {
        var pattern;
        return "easeInQuad" === type && (pattern = time * time), "easeOutQuad" === type && (pattern = time * (2 - time)), 
        "easeInOutQuad" === type && (pattern = .5 > time ? 2 * time * time : -1 + (4 - 2 * time) * time), 
        "easeInCubic" === type && (pattern = time * time * time), "easeOutCubic" === type && (pattern = --time * time * time + 1), 
        "easeInOutCubic" === type && (pattern = .5 > time ? 4 * time * time * time : (time - 1) * (2 * time - 2) * (2 * time - 2) + 1), 
        "easeInQuart" === type && (pattern = time * time * time * time), "easeOutQuart" === type && (pattern = 1 - --time * time * time * time), 
        "easeInOutQuart" === type && (pattern = .5 > time ? 8 * time * time * time * time : 1 - 8 * --time * time * time * time), 
        "easeInQuint" === type && (pattern = time * time * time * time * time), "easeOutQuint" === type && (pattern = 1 + --time * time * time * time * time), 
        "easeInOutQuint" === type && (pattern = .5 > time ? 16 * time * time * time * time * time : 1 + 16 * --time * time * time * time * time), 
        pattern || time;
    }, getEndLocation = function(anchor, headerHeight, offset) {
        var location = 0;
        if (anchor.offsetParent) do location += anchor.offsetTop, anchor = anchor.offsetParent; while (anchor);
        return location = location - headerHeight - offset, location >= 0 ? location : 0;
    }, getDocumentHeight = function() {
        return Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight);
    }, getDataOptions = function(options) {
        return options && "object" == typeof JSON && "function" == typeof JSON.parse ? JSON.parse(options) : {};
    }, updateUrl = function(anchor, url) {
        history.pushState && (url || "true" === url) && history.pushState({
            pos: anchor.id
        }, "", window.location.pathname + anchor);
    };
    smoothScroll.animateScroll = function(toggle, anchor, options) {
        var settings = extend(settings || defaults, options || {}), overrides = getDataOptions(toggle ? toggle.getAttribute("data-options") : null);
        settings = extend(settings, overrides), anchor = "#" + escapeCharacters(anchor.substr(1));
        var animationInterval, percentage, position, fixedHeader = document.querySelector("[data-scroll-header]"), headerHeight = null === fixedHeader ? 0 : fixedHeader.offsetHeight + fixedHeader.offsetTop, startLocation = root.pageYOffset, endLocation = getEndLocation(document.querySelector(anchor), headerHeight, parseInt(settings.offset, 10)), distance = endLocation - startLocation, documentHeight = getDocumentHeight(), timeLapsed = 0;
        updateUrl(anchor, settings.updateURL);
        var stopAnimateScroll = function(position, endLocation, animationInterval) {
            var currentLocation = root.pageYOffset;
            (position == endLocation || currentLocation == endLocation || root.innerHeight + currentLocation >= documentHeight) && (clearInterval(animationInterval), 
            settings.callbackAfter(toggle, anchor));
        }, loopAnimateScroll = function() {
            timeLapsed += 16, percentage = timeLapsed / parseInt(settings.speed, 10), percentage = percentage > 1 ? 1 : percentage, 
            position = startLocation + distance * easingPattern(settings.easing, percentage), 
            root.scrollTo(0, Math.floor(position)), stopAnimateScroll(position, endLocation, animationInterval);
        }, startAnimateScroll = function() {
            settings.callbackBefore(toggle, anchor), animationInterval = setInterval(loopAnimateScroll, 16);
        };
        0 === root.pageYOffset && root.scrollTo(0, 0), startAnimateScroll();
    };
    var eventHandler = function(event) {
        var toggle = getClosest(event.target, "[data-scroll]");
        toggle && "a" === toggle.tagName.toLowerCase() && (event.preventDefault(), smoothScroll.animateScroll(toggle, toggle.hash, settings, event));
    };
    return smoothScroll.destroy = function() {
        settings && (document.removeEventListener("click", eventHandler, !1), settings = null);
    }, smoothScroll.init = function(options) {
        supports && (smoothScroll.destroy(), settings = extend(defaults, options || {}), 
        document.addEventListener("click", eventHandler, !1));
    }, smoothScroll;
}), function(factory) {
    "function" == typeof define && define.amd ? define([ "jquery" ], factory) : factory(jQuery);
}(function($) {
    $.extend($.fn, {
        validate: function(options) {
            if (!this.length) return void (options && options.debug && window.console && console.warn("Nothing selected, can't validate, returning nothing."));
            var validator = $.data(this[0], "validator");
            return validator ? validator : (this.attr("novalidate", "novalidate"), validator = new $.validator(options, this[0]), 
            $.data(this[0], "validator", validator), validator.settings.onsubmit && (this.validateDelegate(":submit", "click", function(event) {
                validator.settings.submitHandler && (validator.submitButton = event.target), $(event.target).hasClass("cancel") && (validator.cancelSubmit = !0), 
                void 0 !== $(event.target).attr("formnovalidate") && (validator.cancelSubmit = !0);
            }), this.submit(function(event) {
                function handle() {
                    var hidden, result;
                    return validator.settings.submitHandler ? (validator.submitButton && (hidden = $("<input type='hidden'/>").attr("name", validator.submitButton.name).val($(validator.submitButton).val()).appendTo(validator.currentForm)), 
                    result = validator.settings.submitHandler.call(validator, validator.currentForm, event), 
                    validator.submitButton && hidden.remove(), void 0 !== result ? result : !1) : !0;
                }
                return validator.settings.debug && event.preventDefault(), validator.cancelSubmit ? (validator.cancelSubmit = !1, 
                handle()) : validator.form() ? validator.pendingRequest ? (validator.formSubmitted = !0, 
                !1) : handle() : (validator.focusInvalid(), !1);
            })), validator);
        },
        valid: function() {
            var valid, validator;
            return $(this[0]).is("form") ? valid = this.validate().form() : (valid = !0, validator = $(this[0].form).validate(), 
            this.each(function() {
                valid = validator.element(this) && valid;
            })), valid;
        },
        removeAttrs: function(attributes) {
            var result = {}, $element = this;
            return $.each(attributes.split(/\s/), function(index, value) {
                result[value] = $element.attr(value), $element.removeAttr(value);
            }), result;
        },
        rules: function(command, argument) {
            var settings, staticRules, existingRules, data, param, filtered, element = this[0];
            if (command) switch (settings = $.data(element.form, "validator").settings, staticRules = settings.rules, 
            existingRules = $.validator.staticRules(element), command) {
              case "add":
                $.extend(existingRules, $.validator.normalizeRule(argument)), delete existingRules.messages, 
                staticRules[element.name] = existingRules, argument.messages && (settings.messages[element.name] = $.extend(settings.messages[element.name], argument.messages));
                break;

              case "remove":
                return argument ? (filtered = {}, $.each(argument.split(/\s/), function(index, method) {
                    filtered[method] = existingRules[method], delete existingRules[method], "required" === method && $(element).removeAttr("aria-required");
                }), filtered) : (delete staticRules[element.name], existingRules);
            }
            return data = $.validator.normalizeRules($.extend({}, $.validator.classRules(element), $.validator.attributeRules(element), $.validator.dataRules(element), $.validator.staticRules(element)), element), 
            data.required && (param = data.required, delete data.required, data = $.extend({
                required: param
            }, data), $(element).attr("aria-required", "true")), data.remote && (param = data.remote, 
            delete data.remote, data = $.extend(data, {
                remote: param
            })), data;
        }
    }), $.extend($.expr[":"], {
        blank: function(a) {
            return !$.trim("" + $(a).val());
        },
        filled: function(a) {
            return !!$.trim("" + $(a).val());
        },
        unchecked: function(a) {
            return !$(a).prop("checked");
        }
    }), $.validator = function(options, form) {
        this.settings = $.extend(!0, {}, $.validator.defaults, options), this.currentForm = form, 
        this.init();
    }, $.validator.format = function(source, params) {
        return 1 === arguments.length ? function() {
            var args = $.makeArray(arguments);
            return args.unshift(source), $.validator.format.apply(this, args);
        } : (arguments.length > 2 && params.constructor !== Array && (params = $.makeArray(arguments).slice(1)), 
        params.constructor !== Array && (params = [ params ]), $.each(params, function(i, n) {
            source = source.replace(new RegExp("\\{" + i + "\\}", "g"), function() {
                return n;
            });
        }), source);
    }, $.extend($.validator, {
        defaults: {
            messages: {},
            groups: {},
            rules: {},
            errorClass: "error",
            validClass: "valid",
            errorElement: "label",
            focusCleanup: !1,
            focusInvalid: !0,
            errorContainer: $([]),
            errorLabelContainer: $([]),
            onsubmit: !0,
            ignore: ":hidden",
            ignoreTitle: !1,
            onfocusin: function(element) {
                this.lastActive = element, this.settings.focusCleanup && (this.settings.unhighlight && this.settings.unhighlight.call(this, element, this.settings.errorClass, this.settings.validClass), 
                this.hideThese(this.errorsFor(element)));
            },
            onfocusout: function(element) {
                this.checkable(element) || !(element.name in this.submitted) && this.optional(element) || this.element(element);
            },
            onkeyup: function(element, event) {
                (9 !== event.which || "" !== this.elementValue(element)) && (element.name in this.submitted || element === this.lastElement) && this.element(element);
            },
            onclick: function(element) {
                element.name in this.submitted ? this.element(element) : element.parentNode.name in this.submitted && this.element(element.parentNode);
            },
            highlight: function(element, errorClass, validClass) {
                "radio" === element.type ? this.findByName(element.name).addClass(errorClass).removeClass(validClass) : $(element).addClass(errorClass).removeClass(validClass);
            },
            unhighlight: function(element, errorClass, validClass) {
                "radio" === element.type ? this.findByName(element.name).removeClass(errorClass).addClass(validClass) : $(element).removeClass(errorClass).addClass(validClass);
            }
        },
        setDefaults: function(settings) {
            $.extend($.validator.defaults, settings);
        },
        messages: {
            required: "This field is required.",
            remote: "Please fix this field.",
            email: "Please enter a valid email address.",
            url: "Please enter a valid URL.",
            date: "Please enter a valid date.",
            dateISO: "Please enter a valid date ( ISO ).",
            number: "Please enter a valid number.",
            digits: "Please enter only digits.",
            creditcard: "Please enter a valid credit card number.",
            equalTo: "Please enter the same value again.",
            maxlength: $.validator.format("Please enter no more than {0} characters."),
            minlength: $.validator.format("Please enter at least {0} characters."),
            rangelength: $.validator.format("Please enter a value between {0} and {1} characters long."),
            range: $.validator.format("Please enter a value between {0} and {1}."),
            max: $.validator.format("Please enter a value less than or equal to {0}."),
            min: $.validator.format("Please enter a value greater than or equal to {0}.")
        },
        autoCreateRanges: !1,
        prototype: {
            init: function() {
                function delegate(event) {
                    var validator = $.data(this[0].form, "validator"), eventType = "on" + event.type.replace(/^validate/, ""), settings = validator.settings;
                    settings[eventType] && !this.is(settings.ignore) && settings[eventType].call(validator, this[0], event);
                }
                this.labelContainer = $(this.settings.errorLabelContainer), this.errorContext = this.labelContainer.length && this.labelContainer || $(this.currentForm), 
                this.containers = $(this.settings.errorContainer).add(this.settings.errorLabelContainer), 
                this.submitted = {}, this.valueCache = {}, this.pendingRequest = 0, this.pending = {}, 
                this.invalid = {}, this.reset();
                var rules, groups = this.groups = {};
                $.each(this.settings.groups, function(key, value) {
                    "string" == typeof value && (value = value.split(/\s/)), $.each(value, function(index, name) {
                        groups[name] = key;
                    });
                }), rules = this.settings.rules, $.each(rules, function(key, value) {
                    rules[key] = $.validator.normalizeRule(value);
                }), $(this.currentForm).validateDelegate(":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'] ,[type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], [type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], [type='radio'], [type='checkbox']", "focusin focusout keyup", delegate).validateDelegate("select, option, [type='radio'], [type='checkbox']", "click", delegate), 
                this.settings.invalidHandler && $(this.currentForm).bind("invalid-form.validate", this.settings.invalidHandler), 
                $(this.currentForm).find("[required], [data-rule-required], .required").attr("aria-required", "true");
            },
            form: function() {
                return this.checkForm(), $.extend(this.submitted, this.errorMap), this.invalid = $.extend({}, this.errorMap), 
                this.valid() || $(this.currentForm).triggerHandler("invalid-form", [ this ]), this.showErrors(), 
                this.valid();
            },
            checkForm: function() {
                this.prepareForm();
                for (var i = 0, elements = this.currentElements = this.elements(); elements[i]; i++) this.check(elements[i]);
                return this.valid();
            },
            element: function(element) {
                var cleanElement = this.clean(element), checkElement = this.validationTargetFor(cleanElement), result = !0;
                return this.lastElement = checkElement, void 0 === checkElement ? delete this.invalid[cleanElement.name] : (this.prepareElement(checkElement), 
                this.currentElements = $(checkElement), result = this.check(checkElement) !== !1, 
                result ? delete this.invalid[checkElement.name] : this.invalid[checkElement.name] = !0), 
                $(element).attr("aria-invalid", !result), this.numberOfInvalids() || (this.toHide = this.toHide.add(this.containers)), 
                this.showErrors(), result;
            },
            showErrors: function(errors) {
                if (errors) {
                    $.extend(this.errorMap, errors), this.errorList = [];
                    for (var name in errors) this.errorList.push({
                        message: errors[name],
                        element: this.findByName(name)[0]
                    });
                    this.successList = $.grep(this.successList, function(element) {
                        return !(element.name in errors);
                    });
                }
                this.settings.showErrors ? this.settings.showErrors.call(this, this.errorMap, this.errorList) : this.defaultShowErrors();
            },
            resetForm: function() {
                $.fn.resetForm && $(this.currentForm).resetForm(), this.submitted = {}, this.lastElement = null, 
                this.prepareForm(), this.hideErrors(), this.elements().removeClass(this.settings.errorClass).removeData("previousValue").removeAttr("aria-invalid");
            },
            numberOfInvalids: function() {
                return this.objectLength(this.invalid);
            },
            objectLength: function(obj) {
                var i, count = 0;
                for (i in obj) count++;
                return count;
            },
            hideErrors: function() {
                this.hideThese(this.toHide);
            },
            hideThese: function(errors) {
                errors.not(this.containers).text(""), this.addWrapper(errors).hide();
            },
            valid: function() {
                return 0 === this.size();
            },
            size: function() {
                return this.errorList.length;
            },
            focusInvalid: function() {
                if (this.settings.focusInvalid) try {
                    $(this.findLastActive() || this.errorList.length && this.errorList[0].element || []).filter(":visible").focus().trigger("focusin");
                } catch (e) {}
            },
            findLastActive: function() {
                var lastActive = this.lastActive;
                return lastActive && 1 === $.grep(this.errorList, function(n) {
                    return n.element.name === lastActive.name;
                }).length && lastActive;
            },
            elements: function() {
                var validator = this, rulesCache = {};
                return $(this.currentForm).find("input, select, textarea").not(":submit, :reset, :image, [disabled], [readonly]").not(this.settings.ignore).filter(function() {
                    return !this.name && validator.settings.debug && window.console && console.error("%o has no name assigned", this), 
                    this.name in rulesCache || !validator.objectLength($(this).rules()) ? !1 : (rulesCache[this.name] = !0, 
                    !0);
                });
            },
            clean: function(selector) {
                return $(selector)[0];
            },
            errors: function() {
                var errorClass = this.settings.errorClass.split(" ").join(".");
                return $(this.settings.errorElement + "." + errorClass, this.errorContext);
            },
            reset: function() {
                this.successList = [], this.errorList = [], this.errorMap = {}, this.toShow = $([]), 
                this.toHide = $([]), this.currentElements = $([]);
            },
            prepareForm: function() {
                this.reset(), this.toHide = this.errors().add(this.containers);
            },
            prepareElement: function(element) {
                this.reset(), this.toHide = this.errorsFor(element);
            },
            elementValue: function(element) {
                var val, $element = $(element), type = element.type;
                return "radio" === type || "checkbox" === type ? $("input[name='" + element.name + "']:checked").val() : "number" === type && "undefined" != typeof element.validity ? element.validity.badInput ? !1 : $element.val() : (val = $element.val(), 
                "string" == typeof val ? val.replace(/\r/g, "") : val);
            },
            check: function(element) {
                element = this.validationTargetFor(this.clean(element));
                var result, method, rule, rules = $(element).rules(), rulesCount = $.map(rules, function(n, i) {
                    return i;
                }).length, dependencyMismatch = !1, val = this.elementValue(element);
                for (method in rules) {
                    rule = {
                        method: method,
                        parameters: rules[method]
                    };
                    try {
                        if (result = $.validator.methods[method].call(this, val, element, rule.parameters), 
                        "dependency-mismatch" === result && 1 === rulesCount) {
                            dependencyMismatch = !0;
                            continue;
                        }
                        if (dependencyMismatch = !1, "pending" === result) return void (this.toHide = this.toHide.not(this.errorsFor(element)));
                        if (!result) return this.formatAndAdd(element, rule), !1;
                    } catch (e) {
                        throw this.settings.debug && window.console && console.log("Exception occurred when checking element " + element.id + ", check the '" + rule.method + "' method.", e), 
                        e;
                    }
                }
                if (!dependencyMismatch) return this.objectLength(rules) && this.successList.push(element), 
                !0;
            },
            customDataMessage: function(element, method) {
                return $(element).data("msg" + method.charAt(0).toUpperCase() + method.substring(1).toLowerCase()) || $(element).data("msg");
            },
            customMessage: function(name, method) {
                var m = this.settings.messages[name];
                return m && (m.constructor === String ? m : m[method]);
            },
            findDefined: function() {
                for (var i = 0; i < arguments.length; i++) if (void 0 !== arguments[i]) return arguments[i];
                return void 0;
            },
            defaultMessage: function(element, method) {
                return this.findDefined(this.customMessage(element.name, method), this.customDataMessage(element, method), !this.settings.ignoreTitle && element.title || void 0, $.validator.messages[method], "<strong>Warning: No message defined for " + element.name + "</strong>");
            },
            formatAndAdd: function(element, rule) {
                var message = this.defaultMessage(element, rule.method), theregex = /\$?\{(\d+)\}/g;
                "function" == typeof message ? message = message.call(this, rule.parameters, element) : theregex.test(message) && (message = $.validator.format(message.replace(theregex, "{$1}"), rule.parameters)), 
                this.errorList.push({
                    message: message,
                    element: element,
                    method: rule.method
                }), this.errorMap[element.name] = message, this.submitted[element.name] = message;
            },
            addWrapper: function(toToggle) {
                return this.settings.wrapper && (toToggle = toToggle.add(toToggle.parent(this.settings.wrapper))), 
                toToggle;
            },
            defaultShowErrors: function() {
                var i, elements, error;
                for (i = 0; this.errorList[i]; i++) error = this.errorList[i], this.settings.highlight && this.settings.highlight.call(this, error.element, this.settings.errorClass, this.settings.validClass), 
                this.showLabel(error.element, error.message);
                if (this.errorList.length && (this.toShow = this.toShow.add(this.containers)), this.settings.success) for (i = 0; this.successList[i]; i++) this.showLabel(this.successList[i]);
                if (this.settings.unhighlight) for (i = 0, elements = this.validElements(); elements[i]; i++) this.settings.unhighlight.call(this, elements[i], this.settings.errorClass, this.settings.validClass);
                this.toHide = this.toHide.not(this.toShow), this.hideErrors(), this.addWrapper(this.toShow).show();
            },
            validElements: function() {
                return this.currentElements.not(this.invalidElements());
            },
            invalidElements: function() {
                return $(this.errorList).map(function() {
                    return this.element;
                });
            },
            showLabel: function(element, message) {
                var place, group, errorID, error = this.errorsFor(element), elementID = this.idOrName(element), describedBy = $(element).attr("aria-describedby");
                error.length ? (error.removeClass(this.settings.validClass).addClass(this.settings.errorClass), 
                error.html(message)) : (error = $("<" + this.settings.errorElement + ">").attr("id", elementID + "-error").addClass(this.settings.errorClass).html(message || ""), 
                place = error, this.settings.wrapper && (place = error.hide().show().wrap("<" + this.settings.wrapper + "/>").parent()), 
                this.labelContainer.length ? this.labelContainer.append(place) : this.settings.errorPlacement ? this.settings.errorPlacement(place, $(element)) : place.insertAfter(element), 
                error.is("label") ? error.attr("for", elementID) : 0 === error.parents("label[for='" + elementID + "']").length && (errorID = error.attr("id").replace(/(:|\.|\[|\])/g, "\\$1"), 
                describedBy ? describedBy.match(new RegExp("\\b" + errorID + "\\b")) || (describedBy += " " + errorID) : describedBy = errorID, 
                $(element).attr("aria-describedby", describedBy), group = this.groups[element.name], 
                group && $.each(this.groups, function(name, testgroup) {
                    testgroup === group && $("[name='" + name + "']", this.currentForm).attr("aria-describedby", error.attr("id"));
                }))), !message && this.settings.success && (error.text(""), "string" == typeof this.settings.success ? error.addClass(this.settings.success) : this.settings.success(error, element)), 
                this.toShow = this.toShow.add(error);
            },
            errorsFor: function(element) {
                var name = this.idOrName(element), describer = $(element).attr("aria-describedby"), selector = "label[for='" + name + "'], label[for='" + name + "'] *";
                return describer && (selector = selector + ", #" + describer.replace(/\s+/g, ", #")), 
                this.errors().filter(selector);
            },
            idOrName: function(element) {
                return this.groups[element.name] || (this.checkable(element) ? element.name : element.id || element.name);
            },
            validationTargetFor: function(element) {
                return this.checkable(element) && (element = this.findByName(element.name)), $(element).not(this.settings.ignore)[0];
            },
            checkable: function(element) {
                return /radio|checkbox/i.test(element.type);
            },
            findByName: function(name) {
                return $(this.currentForm).find("[name='" + name + "']");
            },
            getLength: function(value, element) {
                switch (element.nodeName.toLowerCase()) {
                  case "select":
                    return $("option:selected", element).length;

                  case "input":
                    if (this.checkable(element)) return this.findByName(element.name).filter(":checked").length;
                }
                return value.length;
            },
            depend: function(param, element) {
                return this.dependTypes[typeof param] ? this.dependTypes[typeof param](param, element) : !0;
            },
            dependTypes: {
                "boolean": function(param) {
                    return param;
                },
                string: function(param, element) {
                    return !!$(param, element.form).length;
                },
                "function": function(param, element) {
                    return param(element);
                }
            },
            optional: function(element) {
                var val = this.elementValue(element);
                return !$.validator.methods.required.call(this, val, element) && "dependency-mismatch";
            },
            startRequest: function(element) {
                this.pending[element.name] || (this.pendingRequest++, this.pending[element.name] = !0);
            },
            stopRequest: function(element, valid) {
                this.pendingRequest--, this.pendingRequest < 0 && (this.pendingRequest = 0), delete this.pending[element.name], 
                valid && 0 === this.pendingRequest && this.formSubmitted && this.form() ? ($(this.currentForm).submit(), 
                this.formSubmitted = !1) : !valid && 0 === this.pendingRequest && this.formSubmitted && ($(this.currentForm).triggerHandler("invalid-form", [ this ]), 
                this.formSubmitted = !1);
            },
            previousValue: function(element) {
                return $.data(element, "previousValue") || $.data(element, "previousValue", {
                    old: null,
                    valid: !0,
                    message: this.defaultMessage(element, "remote")
                });
            }
        },
        classRuleSettings: {
            required: {
                required: !0
            },
            email: {
                email: !0
            },
            url: {
                url: !0
            },
            date: {
                date: !0
            },
            dateISO: {
                dateISO: !0
            },
            number: {
                number: !0
            },
            digits: {
                digits: !0
            },
            creditcard: {
                creditcard: !0
            }
        },
        addClassRules: function(className, rules) {
            className.constructor === String ? this.classRuleSettings[className] = rules : $.extend(this.classRuleSettings, className);
        },
        classRules: function(element) {
            var rules = {}, classes = $(element).attr("class");
            return classes && $.each(classes.split(" "), function() {
                this in $.validator.classRuleSettings && $.extend(rules, $.validator.classRuleSettings[this]);
            }), rules;
        },
        attributeRules: function(element) {
            var method, value, rules = {}, $element = $(element), type = element.getAttribute("type");
            for (method in $.validator.methods) "required" === method ? (value = element.getAttribute(method), 
            "" === value && (value = !0), value = !!value) : value = $element.attr(method), 
            /min|max/.test(method) && (null === type || /number|range|text/.test(type)) && (value = Number(value)), 
            value || 0 === value ? rules[method] = value : type === method && "range" !== type && (rules[method] = !0);
            return rules.maxlength && /-1|2147483647|524288/.test(rules.maxlength) && delete rules.maxlength, 
            rules;
        },
        dataRules: function(element) {
            var method, value, rules = {}, $element = $(element);
            for (method in $.validator.methods) value = $element.data("rule" + method.charAt(0).toUpperCase() + method.substring(1).toLowerCase()), 
            void 0 !== value && (rules[method] = value);
            return rules;
        },
        staticRules: function(element) {
            var rules = {}, validator = $.data(element.form, "validator");
            return validator.settings.rules && (rules = $.validator.normalizeRule(validator.settings.rules[element.name]) || {}), 
            rules;
        },
        normalizeRules: function(rules, element) {
            return $.each(rules, function(prop, val) {
                if (val === !1) return void delete rules[prop];
                if (val.param || val.depends) {
                    var keepRule = !0;
                    switch (typeof val.depends) {
                      case "string":
                        keepRule = !!$(val.depends, element.form).length;
                        break;

                      case "function":
                        keepRule = val.depends.call(element, element);
                    }
                    keepRule ? rules[prop] = void 0 !== val.param ? val.param : !0 : delete rules[prop];
                }
            }), $.each(rules, function(rule, parameter) {
                rules[rule] = $.isFunction(parameter) ? parameter(element) : parameter;
            }), $.each([ "minlength", "maxlength" ], function() {
                rules[this] && (rules[this] = Number(rules[this]));
            }), $.each([ "rangelength", "range" ], function() {
                var parts;
                rules[this] && ($.isArray(rules[this]) ? rules[this] = [ Number(rules[this][0]), Number(rules[this][1]) ] : "string" == typeof rules[this] && (parts = rules[this].replace(/[\[\]]/g, "").split(/[\s,]+/), 
                rules[this] = [ Number(parts[0]), Number(parts[1]) ]));
            }), $.validator.autoCreateRanges && (null != rules.min && null != rules.max && (rules.range = [ rules.min, rules.max ], 
            delete rules.min, delete rules.max), null != rules.minlength && null != rules.maxlength && (rules.rangelength = [ rules.minlength, rules.maxlength ], 
            delete rules.minlength, delete rules.maxlength)), rules;
        },
        normalizeRule: function(data) {
            if ("string" == typeof data) {
                var transformed = {};
                $.each(data.split(/\s/), function() {
                    transformed[this] = !0;
                }), data = transformed;
            }
            return data;
        },
        addMethod: function(name, method, message) {
            $.validator.methods[name] = method, $.validator.messages[name] = void 0 !== message ? message : $.validator.messages[name], 
            method.length < 3 && $.validator.addClassRules(name, $.validator.normalizeRule(name));
        },
        methods: {
            required: function(value, element, param) {
                if (!this.depend(param, element)) return "dependency-mismatch";
                if ("select" === element.nodeName.toLowerCase()) {
                    var val = $(element).val();
                    return val && val.length > 0;
                }
                return this.checkable(element) ? this.getLength(value, element) > 0 : $.trim(value).length > 0;
            },
            email: function(value, element) {
                return this.optional(element) || /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(value);
            },
            url: function(value, element) {
                return this.optional(element) || /^(https?|s?ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(value);
            },
            date: function(value, element) {
                return this.optional(element) || !/Invalid|NaN/.test(new Date(value).toString());
            },
            dateISO: function(value, element) {
                return this.optional(element) || /^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/.test(value);
            },
            number: function(value, element) {
                return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(value);
            },
            digits: function(value, element) {
                return this.optional(element) || /^\d+$/.test(value);
            },
            creditcard: function(value, element) {
                if (this.optional(element)) return "dependency-mismatch";
                if (/[^0-9 \-]+/.test(value)) return !1;
                var n, cDigit, nCheck = 0, nDigit = 0, bEven = !1;
                if (value = value.replace(/\D/g, ""), value.length < 13 || value.length > 19) return !1;
                for (n = value.length - 1; n >= 0; n--) cDigit = value.charAt(n), nDigit = parseInt(cDigit, 10), 
                bEven && (nDigit *= 2) > 9 && (nDigit -= 9), nCheck += nDigit, bEven = !bEven;
                return nCheck % 10 === 0;
            },
            minlength: function(value, element, param) {
                var length = $.isArray(value) ? value.length : this.getLength(value, element);
                return this.optional(element) || length >= param;
            },
            maxlength: function(value, element, param) {
                var length = $.isArray(value) ? value.length : this.getLength(value, element);
                return this.optional(element) || param >= length;
            },
            rangelength: function(value, element, param) {
                var length = $.isArray(value) ? value.length : this.getLength(value, element);
                return this.optional(element) || length >= param[0] && length <= param[1];
            },
            min: function(value, element, param) {
                return this.optional(element) || value >= param;
            },
            max: function(value, element, param) {
                return this.optional(element) || param >= value;
            },
            range: function(value, element, param) {
                return this.optional(element) || value >= param[0] && value <= param[1];
            },
            equalTo: function(value, element, param) {
                var target = $(param);
                return this.settings.onfocusout && target.unbind(".validate-equalTo").bind("blur.validate-equalTo", function() {
                    $(element).valid();
                }), value === target.val();
            },
            remote: function(value, element, param) {
                if (this.optional(element)) return "dependency-mismatch";
                var validator, data, previous = this.previousValue(element);
                return this.settings.messages[element.name] || (this.settings.messages[element.name] = {}), 
                previous.originalMessage = this.settings.messages[element.name].remote, this.settings.messages[element.name].remote = previous.message, 
                param = "string" == typeof param && {
                    url: param
                } || param, previous.old === value ? previous.valid : (previous.old = value, validator = this, 
                this.startRequest(element), data = {}, data[element.name] = value, $.ajax($.extend(!0, {
                    url: param,
                    mode: "abort",
                    port: "validate" + element.name,
                    dataType: "json",
                    data: data,
                    context: validator.currentForm,
                    success: function(response) {
                        var errors, message, submitted, valid = response === !0 || "true" === response;
                        validator.settings.messages[element.name].remote = previous.originalMessage, valid ? (submitted = validator.formSubmitted, 
                        validator.prepareElement(element), validator.formSubmitted = submitted, validator.successList.push(element), 
                        delete validator.invalid[element.name], validator.showErrors()) : (errors = {}, 
                        message = response || validator.defaultMessage(element, "remote"), errors[element.name] = previous.message = $.isFunction(message) ? message(value) : message, 
                        validator.invalid[element.name] = !0, validator.showErrors(errors)), previous.valid = valid, 
                        validator.stopRequest(element, valid);
                    }
                }, param)), "pending");
            }
        }
    }), $.format = function() {
        throw "$.format has been deprecated. Please use $.validator.format instead.";
    };
    var ajax, pendingRequests = {};
    $.ajaxPrefilter ? $.ajaxPrefilter(function(settings, _, xhr) {
        var port = settings.port;
        "abort" === settings.mode && (pendingRequests[port] && pendingRequests[port].abort(), 
        pendingRequests[port] = xhr);
    }) : (ajax = $.ajax, $.ajax = function(settings) {
        var mode = ("mode" in settings ? settings : $.ajaxSettings).mode, port = ("port" in settings ? settings : $.ajaxSettings).port;
        return "abort" === mode ? (pendingRequests[port] && pendingRequests[port].abort(), 
        pendingRequests[port] = ajax.apply(this, arguments), pendingRequests[port]) : ajax.apply(this, arguments);
    }), $.extend($.fn, {
        validateDelegate: function(delegate, type, handler) {
            return this.bind(type, function(event) {
                var target = $(event.target);
                return target.is(delegate) ? handler.apply(target, arguments) : void 0;
            });
        }
    });
}), !function(e) {
    function t(e) {
        var t = e.length, r = $.type(e);
        return "function" === r || $.isWindow(e) ? !1 : 1 === e.nodeType && t ? !0 : "array" === r || 0 === t || "number" == typeof t && t > 0 && t - 1 in e;
    }
    if (!e.jQuery) {
        var $ = function(e, t) {
            return new $.fn.init(e, t);
        };
        $.isWindow = function(e) {
            return null != e && e == e.window;
        }, $.type = function(e) {
            return null == e ? e + "" : "object" == typeof e || "function" == typeof e ? a[o.call(e)] || "object" : typeof e;
        }, $.isArray = Array.isArray || function(e) {
            return "array" === $.type(e);
        }, $.isPlainObject = function(e) {
            var t;
            if (!e || "object" !== $.type(e) || e.nodeType || $.isWindow(e)) return !1;
            try {
                if (e.constructor && !n.call(e, "constructor") && !n.call(e.constructor.prototype, "isPrototypeOf")) return !1;
            } catch (r) {
                return !1;
            }
            for (t in e) ;
            return void 0 === t || n.call(e, t);
        }, $.each = function(e, r, a) {
            var n, o = 0, i = e.length, s = t(e);
            if (a) {
                if (s) for (;i > o && (n = r.apply(e[o], a), n !== !1); o++) ; else for (o in e) if (n = r.apply(e[o], a), 
                n === !1) break;
            } else if (s) for (;i > o && (n = r.call(e[o], o, e[o]), n !== !1); o++) ; else for (o in e) if (n = r.call(e[o], o, e[o]), 
            n === !1) break;
            return e;
        }, $.data = function(e, t, a) {
            if (void 0 === a) {
                var n = e[$.expando], o = n && r[n];
                if (void 0 === t) return o;
                if (o && t in o) return o[t];
            } else if (void 0 !== t) {
                var n = e[$.expando] || (e[$.expando] = ++$.uuid);
                return r[n] = r[n] || {}, r[n][t] = a, a;
            }
        }, $.removeData = function(e, t) {
            var a = e[$.expando], n = a && r[a];
            n && $.each(t, function(e, t) {
                delete n[t];
            });
        }, $.extend = function() {
            var e, t, r, a, n, o, i = arguments[0] || {}, s = 1, l = arguments.length, u = !1;
            for ("boolean" == typeof i && (u = i, i = arguments[s] || {}, s++), "object" != typeof i && "function" !== $.type(i) && (i = {}), 
            s === l && (i = this, s--); l > s; s++) if (null != (n = arguments[s])) for (a in n) e = i[a], 
            r = n[a], i !== r && (u && r && ($.isPlainObject(r) || (t = $.isArray(r))) ? (t ? (t = !1, 
            o = e && $.isArray(e) ? e : []) : o = e && $.isPlainObject(e) ? e : {}, i[a] = $.extend(u, o, r)) : void 0 !== r && (i[a] = r));
            return i;
        }, $.queue = function(e, r, a) {
            function n(e, r) {
                var a = r || [];
                return null != e && (t(Object(e)) ? !function(e, t) {
                    for (var r = +t.length, a = 0, n = e.length; r > a; ) e[n++] = t[a++];
                    if (r !== r) for (;void 0 !== t[a]; ) e[n++] = t[a++];
                    return e.length = n, e;
                }(a, "string" == typeof e ? [ e ] : e) : [].push.call(a, e)), a;
            }
            if (e) {
                r = (r || "fx") + "queue";
                var o = $.data(e, r);
                return a ? (!o || $.isArray(a) ? o = $.data(e, r, n(a)) : o.push(a), o) : o || [];
            }
        }, $.dequeue = function(e, t) {
            $.each(e.nodeType ? [ e ] : e, function(e, r) {
                t = t || "fx";
                var a = $.queue(r, t), n = a.shift();
                "inprogress" === n && (n = a.shift()), n && ("fx" === t && a.unshift("inprogress"), 
                n.call(r, function() {
                    $.dequeue(r, t);
                }));
            });
        }, $.fn = $.prototype = {
            init: function(e) {
                if (e.nodeType) return this[0] = e, this;
                throw new Error("Not a DOM node.");
            },
            offset: function() {
                var t = this[0].getBoundingClientRect ? this[0].getBoundingClientRect() : {
                    top: 0,
                    left: 0
                };
                return {
                    top: t.top + (e.pageYOffset || document.scrollTop || 0) - (document.clientTop || 0),
                    left: t.left + (e.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || 0)
                };
            },
            position: function() {
                function e() {
                    for (var e = this.offsetParent || document; e && "html" === !e.nodeType.toLowerCase && "static" === e.style.position; ) e = e.offsetParent;
                    return e || document;
                }
                var t = this[0], e = e.apply(t), r = this.offset(), a = /^(?:body|html)$/i.test(e.nodeName) ? {
                    top: 0,
                    left: 0
                } : $(e).offset();
                return r.top -= parseFloat(t.style.marginTop) || 0, r.left -= parseFloat(t.style.marginLeft) || 0, 
                e.style && (a.top += parseFloat(e.style.borderTopWidth) || 0, a.left += parseFloat(e.style.borderLeftWidth) || 0), 
                {
                    top: r.top - a.top,
                    left: r.left - a.left
                };
            }
        };
        var r = {};
        $.expando = "velocity" + new Date().getTime(), $.uuid = 0;
        for (var a = {}, n = a.hasOwnProperty, o = a.toString, i = "Boolean Number String Function Array Date RegExp Object Error".split(" "), s = 0; s < i.length; s++) a["[object " + i[s] + "]"] = i[s].toLowerCase();
        $.fn.init.prototype = $.fn, e.Velocity = {
            Utilities: $
        };
    }
}(window), function(e) {
    "object" == typeof module && "object" == typeof module.exports ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : e();
}(function() {
    return function(e, t, r, a) {
        function n(e) {
            for (var t = -1, r = e ? e.length : 0, a = []; ++t < r; ) {
                var n = e[t];
                n && a.push(n);
            }
            return a;
        }
        function o(e) {
            return g.isWrapped(e) ? e = [].slice.call(e) : g.isNode(e) && (e = [ e ]), e;
        }
        function i(e) {
            var t = $.data(e, "velocity");
            return null === t ? a : t;
        }
        function s(e) {
            return function(t) {
                return Math.round(t * e) * (1 / e);
            };
        }
        function l(e, r, a, n) {
            function o(e, t) {
                return 1 - 3 * t + 3 * e;
            }
            function i(e, t) {
                return 3 * t - 6 * e;
            }
            function s(e) {
                return 3 * e;
            }
            function l(e, t, r) {
                return ((o(t, r) * e + i(t, r)) * e + s(t)) * e;
            }
            function u(e, t, r) {
                return 3 * o(t, r) * e * e + 2 * i(t, r) * e + s(t);
            }
            function c(t, r) {
                for (var n = 0; m > n; ++n) {
                    var o = u(r, e, a);
                    if (0 === o) return r;
                    var i = l(r, e, a) - t;
                    r -= i / o;
                }
                return r;
            }
            function p() {
                for (var t = 0; b > t; ++t) w[t] = l(t * x, e, a);
            }
            function f(t, r, n) {
                var o, i, s = 0;
                do i = r + (n - r) / 2, o = l(i, e, a) - t, o > 0 ? n = i : r = i; while (Math.abs(o) > h && ++s < v);
                return i;
            }
            function d(t) {
                for (var r = 0, n = 1, o = b - 1; n != o && w[n] <= t; ++n) r += x;
                --n;
                var i = (t - w[n]) / (w[n + 1] - w[n]), s = r + i * x, l = u(s, e, a);
                return l >= y ? c(t, s) : 0 == l ? s : f(t, r, r + x);
            }
            function g() {
                V = !0, (e != r || a != n) && p();
            }
            var m = 4, y = .001, h = 1e-7, v = 10, b = 11, x = 1 / (b - 1), S = "Float32Array" in t;
            if (4 !== arguments.length) return !1;
            for (var P = 0; 4 > P; ++P) if ("number" != typeof arguments[P] || isNaN(arguments[P]) || !isFinite(arguments[P])) return !1;
            e = Math.min(e, 1), a = Math.min(a, 1), e = Math.max(e, 0), a = Math.max(a, 0);
            var w = S ? new Float32Array(b) : new Array(b), V = !1, C = function(t) {
                return V || g(), e === r && a === n ? t : 0 === t ? 0 : 1 === t ? 1 : l(d(t), r, n);
            };
            C.getControlPoints = function() {
                return [ {
                    x: e,
                    y: r
                }, {
                    x: a,
                    y: n
                } ];
            };
            var T = "generateBezier(" + [ e, r, a, n ] + ")";
            return C.toString = function() {
                return T;
            }, C;
        }
        function u(e, t) {
            var r = e;
            return g.isString(e) ? v.Easings[e] || (r = !1) : r = g.isArray(e) && 1 === e.length ? s.apply(null, e) : g.isArray(e) && 2 === e.length ? b.apply(null, e.concat([ t ])) : g.isArray(e) && 4 === e.length ? l.apply(null, e) : !1, 
            r === !1 && (r = v.Easings[v.defaults.easing] ? v.defaults.easing : h), r;
        }
        function c(e) {
            if (e) for (var t = new Date().getTime(), r = 0, n = v.State.calls.length; n > r; r++) if (v.State.calls[r]) {
                var o = v.State.calls[r], s = o[0], l = o[2], u = o[3], f = !!u;
                u || (u = v.State.calls[r][3] = t - 16);
                for (var d = Math.min((t - u) / l.duration, 1), m = 0, y = s.length; y > m; m++) {
                    var h = s[m], b = h.element;
                    if (i(b)) {
                        var S = !1;
                        if (l.display !== a && null !== l.display && "none" !== l.display) {
                            if ("flex" === l.display) {
                                var w = [ "-webkit-box", "-moz-box", "-ms-flexbox", "-webkit-flex" ];
                                $.each(w, function(e, t) {
                                    x.setPropertyValue(b, "display", t);
                                });
                            }
                            x.setPropertyValue(b, "display", l.display);
                        }
                        l.visibility !== a && "hidden" !== l.visibility && x.setPropertyValue(b, "visibility", l.visibility);
                        for (var V in h) if ("element" !== V) {
                            var T, C = h[V], k = g.isString(C.easing) ? v.Easings[C.easing] : C.easing;
                            if (1 === d) T = C.endValue; else if (T = C.startValue + (C.endValue - C.startValue) * k(d), 
                            !f && T === C.currentValue) continue;
                            if (C.currentValue = T, x.Hooks.registered[V]) {
                                var A = x.Hooks.getRoot(V), F = i(b).rootPropertyValueCache[A];
                                F && (C.rootPropertyValue = F);
                            }
                            var E = x.setPropertyValue(b, V, C.currentValue + (0 === parseFloat(T) ? "" : C.unitType), C.rootPropertyValue, C.scrollData);
                            x.Hooks.registered[V] && (i(b).rootPropertyValueCache[A] = x.Normalizations.registered[A] ? x.Normalizations.registered[A]("extract", null, E[1]) : E[1]), 
                            "transform" === E[0] && (S = !0);
                        }
                        l.mobileHA && i(b).transformCache.translate3d === a && (i(b).transformCache.translate3d = "(0px, 0px, 0px)", 
                        S = !0), S && x.flushTransformCache(b);
                    }
                }
                l.display !== a && "none" !== l.display && (v.State.calls[r][2].display = !1), l.visibility !== a && "hidden" !== l.visibility && (v.State.calls[r][2].visibility = !1), 
                l.progress && l.progress.call(o[1], o[1], d, Math.max(0, u + l.duration - t), u), 
                1 === d && p(r);
            }
            v.State.isTicking && P(c);
        }
        function p(e, t) {
            if (!v.State.calls[e]) return !1;
            for (var r = v.State.calls[e][0], n = v.State.calls[e][1], o = v.State.calls[e][2], s = v.State.calls[e][4], l = !1, u = 0, c = r.length; c > u; u++) {
                var p = r[u].element;
                if (t || o.loop || ("none" === o.display && x.setPropertyValue(p, "display", o.display), 
                "hidden" === o.visibility && x.setPropertyValue(p, "visibility", o.visibility)), 
                o.loop !== !0 && ($.queue(p)[1] === a || !/\.velocityQueueEntryFlag/i.test($.queue(p)[1])) && i(p)) {
                    i(p).isAnimating = !1, i(p).rootPropertyValueCache = {};
                    var f = !1;
                    $.each(x.Lists.transforms3D, function(e, t) {
                        var r = /^scale/.test(t) ? 1 : 0, n = i(p).transformCache[t];
                        i(p).transformCache[t] !== a && new RegExp("^\\(" + r + "[^.]").test(n) && (f = !0, 
                        delete i(p).transformCache[t]);
                    }), o.mobileHA && (f = !0, delete i(p).transformCache.translate3d), f && x.flushTransformCache(p), 
                    x.Values.removeClass(p, "velocity-animating");
                }
                if (!t && o.complete && !o.loop && u === c - 1) try {
                    o.complete.call(n, n);
                } catch (d) {
                    setTimeout(function() {
                        throw d;
                    }, 1);
                }
                s && o.loop !== !0 && s(n), o.loop !== !0 || t || ($.each(i(p).tweensContainer, function(e, t) {
                    /^rotate/.test(e) && 360 === parseFloat(t.endValue) && (t.endValue = 0, t.startValue = 360);
                }), v(p, "reverse", {
                    loop: !0,
                    delay: o.delay
                })), o.queue !== !1 && $.dequeue(p, o.queue);
            }
            v.State.calls[e] = !1;
            for (var g = 0, m = v.State.calls.length; m > g; g++) if (v.State.calls[g] !== !1) {
                l = !0;
                break;
            }
            l === !1 && (v.State.isTicking = !1, delete v.State.calls, v.State.calls = []);
        }
        var $, f = function() {
            if (r.documentMode) return r.documentMode;
            for (var e = 7; e > 4; e--) {
                var t = r.createElement("div");
                if (t.innerHTML = "<!--[if IE " + e + "]><span></span><![endif]-->", t.getElementsByTagName("span").length) return t = null, 
                e;
            }
            return a;
        }(), d = function() {
            var e = 0;
            return t.webkitRequestAnimationFrame || t.mozRequestAnimationFrame || function(t) {
                var a, r = new Date().getTime();
                return a = Math.max(0, 16 - (r - e)), e = r + a, setTimeout(function() {
                    t(r + a);
                }, a);
            };
        }(), g = {
            isString: function(e) {
                return "string" == typeof e;
            },
            isArray: Array.isArray || function(e) {
                return "[object Array]" === Object.prototype.toString.call(e);
            },
            isFunction: function(e) {
                return "[object Function]" === Object.prototype.toString.call(e);
            },
            isNode: function(e) {
                return e && e.nodeType;
            },
            isNodeList: function(e) {
                return "object" == typeof e && /^\[object (HTMLCollection|NodeList|Object)\]$/.test(Object.prototype.toString.call(e)) && e.length !== a && (0 === e.length || "object" == typeof e[0] && e[0].nodeType > 0);
            },
            isWrapped: function(e) {
                return e && (e.jquery || t.Zepto && t.Zepto.zepto.isZ(e));
            },
            isSVG: function(e) {
                return t.SVGElement && e instanceof t.SVGElement;
            },
            isEmptyObject: function(e) {
                for (var t in e) return !1;
                return !0;
            }
        }, m = !1;
        if (e.fn && e.fn.jquery ? ($ = e, m = !0) : $ = t.Velocity.Utilities, 8 >= f && !m) throw new Error("Velocity: IE8 and below require jQuery to be loaded before Velocity.");
        if (7 >= f) return void (jQuery.fn.velocity = jQuery.fn.animate);
        var y = 400, h = "swing", v = {
            State: {
                isMobile: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),
                isAndroid: /Android/i.test(navigator.userAgent),
                isGingerbread: /Android 2\.3\.[3-7]/i.test(navigator.userAgent),
                isChrome: t.chrome,
                isFirefox: /Firefox/i.test(navigator.userAgent),
                prefixElement: r.createElement("div"),
                prefixMatches: {},
                scrollAnchor: null,
                scrollPropertyLeft: null,
                scrollPropertyTop: null,
                isTicking: !1,
                calls: []
            },
            CSS: {},
            Utilities: $,
            Redirects: {},
            Easings: {},
            Promise: t.Promise,
            defaults: {
                queue: "",
                duration: y,
                easing: h,
                begin: a,
                complete: a,
                progress: a,
                display: a,
                visibility: a,
                loop: !1,
                delay: !1,
                mobileHA: !0,
                _cacheValues: !0
            },
            init: function(e) {
                $.data(e, "velocity", {
                    isSVG: g.isSVG(e),
                    isAnimating: !1,
                    computedStyle: null,
                    tweensContainer: null,
                    rootPropertyValueCache: {},
                    transformCache: {}
                });
            },
            hook: null,
            mock: !1,
            version: {
                major: 1,
                minor: 1,
                patch: 0
            },
            debug: !1
        };
        t.pageYOffset !== a ? (v.State.scrollAnchor = t, v.State.scrollPropertyLeft = "pageXOffset", 
        v.State.scrollPropertyTop = "pageYOffset") : (v.State.scrollAnchor = r.documentElement || r.body.parentNode || r.body, 
        v.State.scrollPropertyLeft = "scrollLeft", v.State.scrollPropertyTop = "scrollTop");
        var b = function() {
            function e(e) {
                return -e.tension * e.x - e.friction * e.v;
            }
            function t(t, r, a) {
                var n = {
                    x: t.x + a.dx * r,
                    v: t.v + a.dv * r,
                    tension: t.tension,
                    friction: t.friction
                };
                return {
                    dx: n.v,
                    dv: e(n)
                };
            }
            function r(r, a) {
                var n = {
                    dx: r.v,
                    dv: e(r)
                }, o = t(r, .5 * a, n), i = t(r, .5 * a, o), s = t(r, a, i), l = 1 / 6 * (n.dx + 2 * (o.dx + i.dx) + s.dx), u = 1 / 6 * (n.dv + 2 * (o.dv + i.dv) + s.dv);
                return r.x = r.x + l * a, r.v = r.v + u * a, r;
            }
            return function a(e, t, n) {
                var c, p, f, o = {
                    x: -1,
                    v: 0,
                    tension: null,
                    friction: null
                }, i = [ 0 ], s = 0, l = 1e-4, u = .016;
                for (e = parseFloat(e) || 500, t = parseFloat(t) || 20, n = n || null, o.tension = e, 
                o.friction = t, c = null !== n, c ? (s = a(e, t), p = s / n * u) : p = u; f = r(f || o, p), 
                i.push(1 + f.x), s += 16, Math.abs(f.x) > l && Math.abs(f.v) > l; ) ;
                return c ? function(e) {
                    return i[e * (i.length - 1) | 0];
                } : s;
            };
        }();
        v.Easings = {
            linear: function(e) {
                return e;
            },
            swing: function(e) {
                return .5 - Math.cos(e * Math.PI) / 2;
            },
            spring: function(e) {
                return 1 - Math.cos(4.5 * e * Math.PI) * Math.exp(6 * -e);
            }
        }, $.each([ [ "ease", [ .25, .1, .25, 1 ] ], [ "ease-in", [ .42, 0, 1, 1 ] ], [ "ease-out", [ 0, 0, .58, 1 ] ], [ "ease-in-out", [ .42, 0, .58, 1 ] ], [ "easeInSine", [ .47, 0, .745, .715 ] ], [ "easeOutSine", [ .39, .575, .565, 1 ] ], [ "easeInOutSine", [ .445, .05, .55, .95 ] ], [ "easeInQuad", [ .55, .085, .68, .53 ] ], [ "easeOutQuad", [ .25, .46, .45, .94 ] ], [ "easeInOutQuad", [ .455, .03, .515, .955 ] ], [ "easeInCubic", [ .55, .055, .675, .19 ] ], [ "easeOutCubic", [ .215, .61, .355, 1 ] ], [ "easeInOutCubic", [ .645, .045, .355, 1 ] ], [ "easeInQuart", [ .895, .03, .685, .22 ] ], [ "easeOutQuart", [ .165, .84, .44, 1 ] ], [ "easeInOutQuart", [ .77, 0, .175, 1 ] ], [ "easeInQuint", [ .755, .05, .855, .06 ] ], [ "easeOutQuint", [ .23, 1, .32, 1 ] ], [ "easeInOutQuint", [ .86, 0, .07, 1 ] ], [ "easeInExpo", [ .95, .05, .795, .035 ] ], [ "easeOutExpo", [ .19, 1, .22, 1 ] ], [ "easeInOutExpo", [ 1, 0, 0, 1 ] ], [ "easeInCirc", [ .6, .04, .98, .335 ] ], [ "easeOutCirc", [ .075, .82, .165, 1 ] ], [ "easeInOutCirc", [ .785, .135, .15, .86 ] ] ], function(e, t) {
            v.Easings[t[0]] = l.apply(null, t[1]);
        });
        var x = v.CSS = {
            RegEx: {
                isHex: /^#([A-f\d]{3}){1,2}$/i,
                valueUnwrap: /^[A-z]+\((.*)\)$/i,
                wrappedValueAlreadyExtracted: /[0-9.]+ [0-9.]+ [0-9.]+( [0-9.]+)?/,
                valueSplit: /([A-z]+\(.+\))|(([A-z0-9#-.]+?)(?=\s|$))/gi
            },
            Lists: {
                colors: [ "fill", "stroke", "stopColor", "color", "backgroundColor", "borderColor", "borderTopColor", "borderRightColor", "borderBottomColor", "borderLeftColor", "outlineColor" ],
                transformsBase: [ "translateX", "translateY", "scale", "scaleX", "scaleY", "skewX", "skewY", "rotateZ" ],
                transforms3D: [ "transformPerspective", "translateZ", "scaleZ", "rotateX", "rotateY" ]
            },
            Hooks: {
                templates: {
                    textShadow: [ "Color X Y Blur", "black 0px 0px 0px" ],
                    boxShadow: [ "Color X Y Blur Spread", "black 0px 0px 0px 0px" ],
                    clip: [ "Top Right Bottom Left", "0px 0px 0px 0px" ],
                    backgroundPosition: [ "X Y", "0% 0%" ],
                    transformOrigin: [ "X Y Z", "50% 50% 0px" ],
                    perspectiveOrigin: [ "X Y", "50% 50%" ]
                },
                registered: {},
                register: function() {
                    for (var e = 0; e < x.Lists.colors.length; e++) {
                        var t = "color" === x.Lists.colors[e] ? "0 0 0 1" : "255 255 255 1";
                        x.Hooks.templates[x.Lists.colors[e]] = [ "Red Green Blue Alpha", t ];
                    }
                    var r, a, n;
                    if (f) for (r in x.Hooks.templates) {
                        a = x.Hooks.templates[r], n = a[0].split(" ");
                        var o = a[1].match(x.RegEx.valueSplit);
                        "Color" === n[0] && (n.push(n.shift()), o.push(o.shift()), x.Hooks.templates[r] = [ n.join(" "), o.join(" ") ]);
                    }
                    for (r in x.Hooks.templates) {
                        a = x.Hooks.templates[r], n = a[0].split(" ");
                        for (var e in n) {
                            var i = r + n[e], s = e;
                            x.Hooks.registered[i] = [ r, s ];
                        }
                    }
                },
                getRoot: function(e) {
                    var t = x.Hooks.registered[e];
                    return t ? t[0] : e;
                },
                cleanRootPropertyValue: function(e, t) {
                    return x.RegEx.valueUnwrap.test(t) && (t = t.match(x.RegEx.valueUnwrap)[1]), x.Values.isCSSNullValue(t) && (t = x.Hooks.templates[e][1]), 
                    t;
                },
                extractValue: function(e, t) {
                    var r = x.Hooks.registered[e];
                    if (r) {
                        var a = r[0], n = r[1];
                        return t = x.Hooks.cleanRootPropertyValue(a, t), t.toString().match(x.RegEx.valueSplit)[n];
                    }
                    return t;
                },
                injectValue: function(e, t, r) {
                    var a = x.Hooks.registered[e];
                    if (a) {
                        var i, s, n = a[0], o = a[1];
                        return r = x.Hooks.cleanRootPropertyValue(n, r), i = r.toString().match(x.RegEx.valueSplit), 
                        i[o] = t, s = i.join(" ");
                    }
                    return r;
                }
            },
            Normalizations: {
                registered: {
                    clip: function(e, t, r) {
                        switch (e) {
                          case "name":
                            return "clip";

                          case "extract":
                            var a;
                            return x.RegEx.wrappedValueAlreadyExtracted.test(r) ? a = r : (a = r.toString().match(x.RegEx.valueUnwrap), 
                            a = a ? a[1].replace(/,(\s+)?/g, " ") : r), a;

                          case "inject":
                            return "rect(" + r + ")";
                        }
                    },
                    blur: function(e, t, r) {
                        switch (e) {
                          case "name":
                            return "-webkit-filter";

                          case "extract":
                            var a = parseFloat(r);
                            if (!a && 0 !== a) {
                                var n = r.toString().match(/blur\(([0-9]+[A-z]+)\)/i);
                                a = n ? n[1] : 0;
                            }
                            return a;

                          case "inject":
                            return parseFloat(r) ? "blur(" + r + ")" : "none";
                        }
                    },
                    opacity: function(e, t, r) {
                        if (8 >= f) switch (e) {
                          case "name":
                            return "filter";

                          case "extract":
                            var a = r.toString().match(/alpha\(opacity=(.*)\)/i);
                            return r = a ? a[1] / 100 : 1;

                          case "inject":
                            return t.style.zoom = 1, parseFloat(r) >= 1 ? "" : "alpha(opacity=" + parseInt(100 * parseFloat(r), 10) + ")";
                        } else switch (e) {
                          case "name":
                            return "opacity";

                          case "extract":
                            return r;

                          case "inject":
                            return r;
                        }
                    }
                },
                register: function() {
                    9 >= f || v.State.isGingerbread || (x.Lists.transformsBase = x.Lists.transformsBase.concat(x.Lists.transforms3D));
                    for (var e = 0; e < x.Lists.transformsBase.length; e++) !function() {
                        var t = x.Lists.transformsBase[e];
                        x.Normalizations.registered[t] = function(e, r, n) {
                            switch (e) {
                              case "name":
                                return "transform";

                              case "extract":
                                return i(r) === a || i(r).transformCache[t] === a ? /^scale/i.test(t) ? 1 : 0 : i(r).transformCache[t].replace(/[()]/g, "");

                              case "inject":
                                var o = !1;
                                switch (t.substr(0, t.length - 1)) {
                                  case "translate":
                                    o = !/(%|px|em|rem|vw|vh|\d)$/i.test(n);
                                    break;

                                  case "scal":
                                  case "scale":
                                    v.State.isAndroid && i(r).transformCache[t] === a && 1 > n && (n = 1), o = !/(\d)$/i.test(n);
                                    break;

                                  case "skew":
                                    o = !/(deg|\d)$/i.test(n);
                                    break;

                                  case "rotate":
                                    o = !/(deg|\d)$/i.test(n);
                                }
                                return o || (i(r).transformCache[t] = "(" + n + ")"), i(r).transformCache[t];
                            }
                        };
                    }();
                    for (var e = 0; e < x.Lists.colors.length; e++) !function() {
                        var t = x.Lists.colors[e];
                        x.Normalizations.registered[t] = function(e, r, n) {
                            switch (e) {
                              case "name":
                                return t;

                              case "extract":
                                var o;
                                if (x.RegEx.wrappedValueAlreadyExtracted.test(n)) o = n; else {
                                    var i, s = {
                                        black: "rgb(0, 0, 0)",
                                        blue: "rgb(0, 0, 255)",
                                        gray: "rgb(128, 128, 128)",
                                        green: "rgb(0, 128, 0)",
                                        red: "rgb(255, 0, 0)",
                                        white: "rgb(255, 255, 255)"
                                    };
                                    /^[A-z]+$/i.test(n) ? i = s[n] !== a ? s[n] : s.black : x.RegEx.isHex.test(n) ? i = "rgb(" + x.Values.hexToRgb(n).join(" ") + ")" : /^rgba?\(/i.test(n) || (i = s.black), 
                                    o = (i || n).toString().match(x.RegEx.valueUnwrap)[1].replace(/,(\s+)?/g, " ");
                                }
                                return 8 >= f || 3 !== o.split(" ").length || (o += " 1"), o;

                              case "inject":
                                return 8 >= f ? 4 === n.split(" ").length && (n = n.split(/\s+/).slice(0, 3).join(" ")) : 3 === n.split(" ").length && (n += " 1"), 
                                (8 >= f ? "rgb" : "rgba") + "(" + n.replace(/\s+/g, ",").replace(/\.(\d)+(?=,)/g, "") + ")";
                            }
                        };
                    }();
                }
            },
            Names: {
                camelCase: function(e) {
                    return e.replace(/-(\w)/g, function(e, t) {
                        return t.toUpperCase();
                    });
                },
                SVGAttribute: function(e) {
                    var t = "width|height|x|y|cx|cy|r|rx|ry|x1|x2|y1|y2";
                    return (f || v.State.isAndroid && !v.State.isChrome) && (t += "|transform"), new RegExp("^(" + t + ")$", "i").test(e);
                },
                prefixCheck: function(e) {
                    if (v.State.prefixMatches[e]) return [ v.State.prefixMatches[e], !0 ];
                    for (var t = [ "", "Webkit", "Moz", "ms", "O" ], r = 0, a = t.length; a > r; r++) {
                        var n;
                        if (n = 0 === r ? e : t[r] + e.replace(/^\w/, function(e) {
                            return e.toUpperCase();
                        }), g.isString(v.State.prefixElement.style[n])) return v.State.prefixMatches[e] = n, 
                        [ n, !0 ];
                    }
                    return [ e, !1 ];
                }
            },
            Values: {
                hexToRgb: function(e) {
                    var a, t = /^#?([a-f\d])([a-f\d])([a-f\d])$/i, r = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i;
                    return e = e.replace(t, function(e, t, r, a) {
                        return t + t + r + r + a + a;
                    }), a = r.exec(e), a ? [ parseInt(a[1], 16), parseInt(a[2], 16), parseInt(a[3], 16) ] : [ 0, 0, 0 ];
                },
                isCSSNullValue: function(e) {
                    return 0 == e || /^(none|auto|transparent|(rgba\(0, ?0, ?0, ?0\)))$/i.test(e);
                },
                getUnitType: function(e) {
                    return /^(rotate|skew)/i.test(e) ? "deg" : /(^(scale|scaleX|scaleY|scaleZ|alpha|flexGrow|flexHeight|zIndex|fontWeight)$)|((opacity|red|green|blue|alpha)$)/i.test(e) ? "" : "px";
                },
                getDisplayType: function(e) {
                    var t = e && e.tagName.toString().toLowerCase();
                    return /^(b|big|i|small|tt|abbr|acronym|cite|code|dfn|em|kbd|strong|samp|var|a|bdo|br|img|map|object|q|script|span|sub|sup|button|input|label|select|textarea)$/i.test(t) ? "inline" : /^(li)$/i.test(t) ? "list-item" : /^(tr)$/i.test(t) ? "table-row" : "block";
                },
                addClass: function(e, t) {
                    e.classList ? e.classList.add(t) : e.className += (e.className.length ? " " : "") + t;
                },
                removeClass: function(e, t) {
                    e.classList ? e.classList.remove(t) : e.className = e.className.toString().replace(new RegExp("(^|\\s)" + t.split(" ").join("|") + "(\\s|$)", "gi"), " ");
                }
            },
            getPropertyValue: function(e, r, n, o) {
                function s(e, r) {
                    function n() {
                        u && x.setPropertyValue(e, "display", "none");
                    }
                    var l = 0;
                    if (8 >= f) l = $.css(e, r); else {
                        var u = !1;
                        if (/^(width|height)$/.test(r) && 0 === x.getPropertyValue(e, "display") && (u = !0, 
                        x.setPropertyValue(e, "display", x.Values.getDisplayType(e))), !o) {
                            if ("height" === r && "border-box" !== x.getPropertyValue(e, "boxSizing").toString().toLowerCase()) {
                                var c = e.offsetHeight - (parseFloat(x.getPropertyValue(e, "borderTopWidth")) || 0) - (parseFloat(x.getPropertyValue(e, "borderBottomWidth")) || 0) - (parseFloat(x.getPropertyValue(e, "paddingTop")) || 0) - (parseFloat(x.getPropertyValue(e, "paddingBottom")) || 0);
                                return n(), c;
                            }
                            if ("width" === r && "border-box" !== x.getPropertyValue(e, "boxSizing").toString().toLowerCase()) {
                                var p = e.offsetWidth - (parseFloat(x.getPropertyValue(e, "borderLeftWidth")) || 0) - (parseFloat(x.getPropertyValue(e, "borderRightWidth")) || 0) - (parseFloat(x.getPropertyValue(e, "paddingLeft")) || 0) - (parseFloat(x.getPropertyValue(e, "paddingRight")) || 0);
                                return n(), p;
                            }
                        }
                        var d;
                        d = i(e) === a ? t.getComputedStyle(e, null) : i(e).computedStyle ? i(e).computedStyle : i(e).computedStyle = t.getComputedStyle(e, null), 
                        (f || v.State.isFirefox) && "borderColor" === r && (r = "borderTopColor"), l = 9 === f && "filter" === r ? d.getPropertyValue(r) : d[r], 
                        ("" === l || null === l) && (l = e.style[r]), n();
                    }
                    if ("auto" === l && /^(top|right|bottom|left)$/i.test(r)) {
                        var g = s(e, "position");
                        ("fixed" === g || "absolute" === g && /top|left/i.test(r)) && (l = $(e).position()[r] + "px");
                    }
                    return l;
                }
                var l;
                if (x.Hooks.registered[r]) {
                    var u = r, c = x.Hooks.getRoot(u);
                    n === a && (n = x.getPropertyValue(e, x.Names.prefixCheck(c)[0])), x.Normalizations.registered[c] && (n = x.Normalizations.registered[c]("extract", e, n)), 
                    l = x.Hooks.extractValue(u, n);
                } else if (x.Normalizations.registered[r]) {
                    var p, d;
                    p = x.Normalizations.registered[r]("name", e), "transform" !== p && (d = s(e, x.Names.prefixCheck(p)[0]), 
                    x.Values.isCSSNullValue(d) && x.Hooks.templates[r] && (d = x.Hooks.templates[r][1])), 
                    l = x.Normalizations.registered[r]("extract", e, d);
                }
                return /^[\d-]/.test(l) || (l = i(e) && i(e).isSVG && x.Names.SVGAttribute(r) ? /^(height|width)$/i.test(r) ? e.getBBox()[r] : e.getAttribute(r) : s(e, x.Names.prefixCheck(r)[0])), 
                x.Values.isCSSNullValue(l) && (l = 0), v.debug >= 2 && console.log("Get " + r + ": " + l), 
                l;
            },
            setPropertyValue: function(e, r, a, n, o) {
                var s = r;
                if ("scroll" === r) o.container ? o.container["scroll" + o.direction] = a : "Left" === o.direction ? t.scrollTo(a, o.alternateValue) : t.scrollTo(o.alternateValue, a); else if (x.Normalizations.registered[r] && "transform" === x.Normalizations.registered[r]("name", e)) x.Normalizations.registered[r]("inject", e, a), 
                s = "transform", a = i(e).transformCache[r]; else {
                    if (x.Hooks.registered[r]) {
                        var l = r, u = x.Hooks.getRoot(r);
                        n = n || x.getPropertyValue(e, u), a = x.Hooks.injectValue(l, a, n), r = u;
                    }
                    if (x.Normalizations.registered[r] && (a = x.Normalizations.registered[r]("inject", e, a), 
                    r = x.Normalizations.registered[r]("name", e)), s = x.Names.prefixCheck(r)[0], 8 >= f) try {
                        e.style[s] = a;
                    } catch (c) {
                        v.debug && console.log("Browser does not support [" + a + "] for [" + s + "]");
                    } else i(e) && i(e).isSVG && x.Names.SVGAttribute(r) ? e.setAttribute(r, a) : e.style[s] = a;
                    v.debug >= 2 && console.log("Set " + r + " (" + s + "): " + a);
                }
                return [ s, a ];
            },
            flushTransformCache: function(e) {
                function t(t) {
                    return parseFloat(x.getPropertyValue(e, t));
                }
                var r = "";
                if ((f || v.State.isAndroid && !v.State.isChrome) && i(e).isSVG) {
                    var a = {
                        translate: [ t("translateX"), t("translateY") ],
                        skewX: [ t("skewX") ],
                        skewY: [ t("skewY") ],
                        scale: 1 !== t("scale") ? [ t("scale"), t("scale") ] : [ t("scaleX"), t("scaleY") ],
                        rotate: [ t("rotateZ"), 0, 0 ]
                    };
                    $.each(i(e).transformCache, function(e) {
                        /^translate/i.test(e) ? e = "translate" : /^scale/i.test(e) ? e = "scale" : /^rotate/i.test(e) && (e = "rotate"), 
                        a[e] && (r += e + "(" + a[e].join(" ") + ") ", delete a[e]);
                    });
                } else {
                    var n, o;
                    $.each(i(e).transformCache, function(t) {
                        return n = i(e).transformCache[t], "transformPerspective" === t ? (o = n, !0) : (9 === f && "rotateZ" === t && (t = "rotate"), 
                        void (r += t + n + " "));
                    }), o && (r = "perspective" + o + " " + r);
                }
                x.setPropertyValue(e, "transform", r);
            }
        };
        x.Hooks.register(), x.Normalizations.register(), v.hook = function(e, t, r) {
            var n = a;
            return e = o(e), $.each(e, function(e, o) {
                if (i(o) === a && v.init(o), r === a) n === a && (n = v.CSS.getPropertyValue(o, t)); else {
                    var s = v.CSS.setPropertyValue(o, t, r);
                    "transform" === s[0] && v.CSS.flushTransformCache(o), n = s;
                }
            }), n;
        };
        var S = function() {
            function e() {
                return f ? k.promise || null : d;
            }
            function s() {
                function e() {
                    function f(e, t) {
                        var r = a, n = a, i = a;
                        return g.isArray(e) ? (r = e[0], !g.isArray(e[1]) && /^[\d-]/.test(e[1]) || g.isFunction(e[1]) || x.RegEx.isHex.test(e[1]) ? i = e[1] : (g.isString(e[1]) && !x.RegEx.isHex.test(e[1]) || g.isArray(e[1])) && (n = t ? e[1] : u(e[1], s.duration), 
                        e[2] !== a && (i = e[2]))) : r = e, t || (n = n || s.easing), g.isFunction(r) && (r = r.call(o, V, w)), 
                        g.isFunction(i) && (i = i.call(o, V, w)), [ r || 0, n, i ];
                    }
                    function d(e, t) {
                        var r, a;
                        return a = (t || "0").toString().toLowerCase().replace(/[%A-z]+$/, function(e) {
                            return r = e, "";
                        }), r || (r = x.Values.getUnitType(e)), [ a, r ];
                    }
                    function m() {
                        var e = {
                            myParent: o.parentNode || r.body,
                            position: x.getPropertyValue(o, "position"),
                            fontSize: x.getPropertyValue(o, "fontSize")
                        }, a = e.position === L.lastPosition && e.myParent === L.lastParent, n = e.fontSize === L.lastFontSize;
                        L.lastParent = e.myParent, L.lastPosition = e.position, L.lastFontSize = e.fontSize;
                        var s = 100, l = {};
                        if (n && a) l.emToPx = L.lastEmToPx, l.percentToPxWidth = L.lastPercentToPxWidth, 
                        l.percentToPxHeight = L.lastPercentToPxHeight; else {
                            var u = i(o).isSVG ? r.createElementNS("http://www.w3.org/2000/svg", "rect") : r.createElement("div");
                            v.init(u), e.myParent.appendChild(u), $.each([ "overflow", "overflowX", "overflowY" ], function(e, t) {
                                v.CSS.setPropertyValue(u, t, "hidden");
                            }), v.CSS.setPropertyValue(u, "position", e.position), v.CSS.setPropertyValue(u, "fontSize", e.fontSize), 
                            v.CSS.setPropertyValue(u, "boxSizing", "content-box"), $.each([ "minWidth", "maxWidth", "width", "minHeight", "maxHeight", "height" ], function(e, t) {
                                v.CSS.setPropertyValue(u, t, s + "%");
                            }), v.CSS.setPropertyValue(u, "paddingLeft", s + "em"), l.percentToPxWidth = L.lastPercentToPxWidth = (parseFloat(x.getPropertyValue(u, "width", null, !0)) || 1) / s, 
                            l.percentToPxHeight = L.lastPercentToPxHeight = (parseFloat(x.getPropertyValue(u, "height", null, !0)) || 1) / s, 
                            l.emToPx = L.lastEmToPx = (parseFloat(x.getPropertyValue(u, "paddingLeft")) || 1) / s, 
                            e.myParent.removeChild(u);
                        }
                        return null === L.remToPx && (L.remToPx = parseFloat(x.getPropertyValue(r.body, "fontSize")) || 16), 
                        null === L.vwToPx && (L.vwToPx = parseFloat(t.innerWidth) / 100, L.vhToPx = parseFloat(t.innerHeight) / 100), 
                        l.remToPx = L.remToPx, l.vwToPx = L.vwToPx, l.vhToPx = L.vhToPx, v.debug >= 1 && console.log("Unit ratios: " + JSON.stringify(l), o), 
                        l;
                    }
                    if (s.begin && 0 === V) try {
                        s.begin.call(h, h);
                    } catch (y) {
                        setTimeout(function() {
                            throw y;
                        }, 1);
                    }
                    if ("scroll" === A) {
                        var T, F, E, S = /^x$/i.test(s.axis) ? "Left" : "Top", C = parseFloat(s.offset) || 0;
                        s.container ? g.isWrapped(s.container) || g.isNode(s.container) ? (s.container = s.container[0] || s.container, 
                        T = s.container["scroll" + S], E = T + $(o).position()[S.toLowerCase()] + C) : s.container = null : (T = v.State.scrollAnchor[v.State["scrollProperty" + S]], 
                        F = v.State.scrollAnchor[v.State["scrollProperty" + ("Left" === S ? "Top" : "Left")]], 
                        E = $(o).offset()[S.toLowerCase()] + C), l = {
                            scroll: {
                                rootPropertyValue: !1,
                                startValue: T,
                                currentValue: T,
                                endValue: E,
                                unitType: "",
                                easing: s.easing,
                                scrollData: {
                                    container: s.container,
                                    direction: S,
                                    alternateValue: F
                                }
                            },
                            element: o
                        }, v.debug && console.log("tweensContainer (scroll): ", l.scroll, o);
                    } else if ("reverse" === A) {
                        if (!i(o).tweensContainer) return void $.dequeue(o, s.queue);
                        "none" === i(o).opts.display && (i(o).opts.display = "auto"), "hidden" === i(o).opts.visibility && (i(o).opts.visibility = "visible"), 
                        i(o).opts.loop = !1, i(o).opts.begin = null, i(o).opts.complete = null, P.easing || delete s.easing, 
                        P.duration || delete s.duration, s = $.extend({}, i(o).opts, s);
                        var j = $.extend(!0, {}, i(o).tweensContainer);
                        for (var H in j) if ("element" !== H) {
                            var N = j[H].startValue;
                            j[H].startValue = j[H].currentValue = j[H].endValue, j[H].endValue = N, g.isEmptyObject(P) || (j[H].easing = s.easing), 
                            v.debug && console.log("reverse tweensContainer (" + H + "): " + JSON.stringify(j[H]), o);
                        }
                        l = j;
                    } else if ("start" === A) {
                        var j;
                        i(o).tweensContainer && i(o).isAnimating === !0 && (j = i(o).tweensContainer), $.each(b, function(e, t) {
                            if (RegExp("^" + x.Lists.colors.join("$|^") + "$").test(e)) {
                                var r = f(t, !0), n = r[0], o = r[1], i = r[2];
                                if (x.RegEx.isHex.test(n)) {
                                    for (var s = [ "Red", "Green", "Blue" ], l = x.Values.hexToRgb(n), u = i ? x.Values.hexToRgb(i) : a, c = 0; c < s.length; c++) {
                                        var p = [ l[c] ];
                                        o && p.push(o), u !== a && p.push(u[c]), b[e + s[c]] = p;
                                    }
                                    delete b[e];
                                }
                            }
                        });
                        for (var O in b) {
                            var z = f(b[O]), q = z[0], M = z[1], I = z[2];
                            O = x.Names.camelCase(O);
                            var B = x.Hooks.getRoot(O), W = !1;
                            if (i(o).isSVG || x.Names.prefixCheck(B)[1] !== !1 || x.Normalizations.registered[B] !== a) {
                                (s.display !== a && null !== s.display && "none" !== s.display || s.visibility !== a && "hidden" !== s.visibility) && /opacity|filter/.test(O) && !I && 0 !== q && (I = 0), 
                                s._cacheValues && j && j[O] ? (I === a && (I = j[O].endValue + j[O].unitType), W = i(o).rootPropertyValueCache[B]) : x.Hooks.registered[O] ? I === a ? (W = x.getPropertyValue(o, B), 
                                I = x.getPropertyValue(o, O, W)) : W = x.Hooks.templates[B][1] : I === a && (I = x.getPropertyValue(o, O));
                                var G, D, X, Y = !1;
                                if (G = d(O, I), I = G[0], X = G[1], G = d(O, q), q = G[0].replace(/^([+-\/*])=/, function(e, t) {
                                    return Y = t, "";
                                }), D = G[1], I = parseFloat(I) || 0, q = parseFloat(q) || 0, "%" === D && (/^(fontSize|lineHeight)$/.test(O) ? (q /= 100, 
                                D = "em") : /^scale/.test(O) ? (q /= 100, D = "") : /(Red|Green|Blue)$/i.test(O) && (q = q / 100 * 255, 
                                D = "")), /[\/*]/.test(Y)) D = X; else if (X !== D && 0 !== I) if (0 === q) D = X; else {
                                    p = p || m();
                                    var Q = /margin|padding|left|right|width|text|word|letter/i.test(O) || /X$/.test(O) || "x" === O ? "x" : "y";
                                    switch (X) {
                                      case "%":
                                        I *= "x" === Q ? p.percentToPxWidth : p.percentToPxHeight;
                                        break;

                                      case "px":
                                        break;

                                      default:
                                        I *= p[X + "ToPx"];
                                    }
                                    switch (D) {
                                      case "%":
                                        I *= 1 / ("x" === Q ? p.percentToPxWidth : p.percentToPxHeight);
                                        break;

                                      case "px":
                                        break;

                                      default:
                                        I *= 1 / p[D + "ToPx"];
                                    }
                                }
                                switch (Y) {
                                  case "+":
                                    q = I + q;
                                    break;

                                  case "-":
                                    q = I - q;
                                    break;

                                  case "*":
                                    q = I * q;
                                    break;

                                  case "/":
                                    q = I / q;
                                }
                                l[O] = {
                                    rootPropertyValue: W,
                                    startValue: I,
                                    currentValue: I,
                                    endValue: q,
                                    unitType: D,
                                    easing: M
                                }, v.debug && console.log("tweensContainer (" + O + "): " + JSON.stringify(l[O]), o);
                            } else v.debug && console.log("Skipping [" + B + "] due to a lack of browser support.");
                        }
                        l.element = o;
                    }
                    l.element && (x.Values.addClass(o, "velocity-animating"), R.push(l), "" === s.queue && (i(o).tweensContainer = l, 
                    i(o).opts = s), i(o).isAnimating = !0, V === w - 1 ? (v.State.calls.length > 1e4 && (v.State.calls = n(v.State.calls)), 
                    v.State.calls.push([ R, h, s, null, k.resolver ]), v.State.isTicking === !1 && (v.State.isTicking = !0, 
                    c())) : V++);
                }
                var p, o = this, s = $.extend({}, v.defaults, P), l = {};
                switch (i(o) === a && v.init(o), parseFloat(s.delay) && s.queue !== !1 && $.queue(o, s.queue, function(e) {
                    v.velocityQueueEntryFlag = !0, i(o).delayTimer = {
                        setTimeout: setTimeout(e, parseFloat(s.delay)),
                        next: e
                    };
                }), s.duration.toString().toLowerCase()) {
                  case "fast":
                    s.duration = 200;
                    break;

                  case "normal":
                    s.duration = y;
                    break;

                  case "slow":
                    s.duration = 600;
                    break;

                  default:
                    s.duration = parseFloat(s.duration) || 1;
                }
                v.mock !== !1 && (v.mock === !0 ? s.duration = s.delay = 1 : (s.duration *= parseFloat(v.mock) || 1, 
                s.delay *= parseFloat(v.mock) || 1)), s.easing = u(s.easing, s.duration), s.begin && !g.isFunction(s.begin) && (s.begin = null), 
                s.progress && !g.isFunction(s.progress) && (s.progress = null), s.complete && !g.isFunction(s.complete) && (s.complete = null), 
                s.display !== a && null !== s.display && (s.display = s.display.toString().toLowerCase(), 
                "auto" === s.display && (s.display = v.CSS.Values.getDisplayType(o))), s.visibility !== a && null !== s.visibility && (s.visibility = s.visibility.toString().toLowerCase()), 
                s.mobileHA = s.mobileHA && v.State.isMobile && !v.State.isGingerbread, s.queue === !1 ? s.delay ? setTimeout(e, s.delay) : e() : $.queue(o, s.queue, function(t, r) {
                    return r === !0 ? (k.promise && k.resolver(h), !0) : (v.velocityQueueEntryFlag = !0, 
                    void e(t));
                }), "" !== s.queue && "fx" !== s.queue || "inprogress" === $.queue(o)[0] || $.dequeue(o);
            }
            var f, d, m, h, b, P, l = arguments[0] && ($.isPlainObject(arguments[0].properties) && !arguments[0].properties.names || g.isString(arguments[0].properties));
            if (g.isWrapped(this) ? (f = !1, m = 0, h = this, d = this) : (f = !0, m = 1, h = l ? arguments[0].elements : arguments[0]), 
            h = o(h)) {
                l ? (b = arguments[0].properties, P = arguments[0].options) : (b = arguments[m], 
                P = arguments[m + 1]);
                var w = h.length, V = 0;
                if ("stop" !== b && !$.isPlainObject(P)) {
                    var C = m + 1;
                    P = {};
                    for (var T = C; T < arguments.length; T++) g.isArray(arguments[T]) || !/^(fast|normal|slow)$/i.test(arguments[T]) && !/^\d/.test(arguments[T]) ? g.isString(arguments[T]) || g.isArray(arguments[T]) ? P.easing = arguments[T] : g.isFunction(arguments[T]) && (P.complete = arguments[T]) : P.duration = arguments[T];
                }
                var k = {
                    promise: null,
                    resolver: null,
                    rejecter: null
                };
                f && v.Promise && (k.promise = new v.Promise(function(e, t) {
                    k.resolver = e, k.rejecter = t;
                }));
                var A;
                switch (b) {
                  case "scroll":
                    A = "scroll";
                    break;

                  case "reverse":
                    A = "reverse";
                    break;

                  case "stop":
                    $.each(h, function(e, t) {
                        i(t) && i(t).delayTimer && (clearTimeout(i(t).delayTimer.setTimeout), i(t).delayTimer.next && i(t).delayTimer.next(), 
                        delete i(t).delayTimer);
                    });
                    var F = [];
                    return $.each(v.State.calls, function(e, t) {
                        t && $.each(t[1], function(r, n) {
                            var o = g.isString(P) ? P : "";
                            return P !== a && t[2].queue !== o ? !0 : void $.each(h, function(t, r) {
                                r === n && (P !== a && ($.each($.queue(r, o), function(e, t) {
                                    g.isFunction(t) && t(null, !0);
                                }), $.queue(r, o, [])), i(r) && "" === o && $.each(i(r).tweensContainer, function(e, t) {
                                    t.endValue = t.currentValue;
                                }), F.push(e));
                            });
                        });
                    }), $.each(F, function(e, t) {
                        p(t, !0);
                    }), k.promise && k.resolver(h), e();

                  default:
                    if (!$.isPlainObject(b) || g.isEmptyObject(b)) {
                        if (g.isString(b) && v.Redirects[b]) {
                            var E = $.extend({}, P), j = E.duration, H = E.delay || 0;
                            return E.backwards === !0 && (h = $.extend(!0, [], h).reverse()), $.each(h, function(e, t) {
                                parseFloat(E.stagger) ? E.delay = H + parseFloat(E.stagger) * e : g.isFunction(E.stagger) && (E.delay = H + E.stagger.call(t, e, w)), 
                                E.drag && (E.duration = parseFloat(j) || (/^(callout|transition)/.test(b) ? 1e3 : y), 
                                E.duration = Math.max(E.duration * (E.backwards ? 1 - e / w : (e + 1) / w), .75 * E.duration, 200)), 
                                v.Redirects[b].call(t, t, E || {}, e, w, h, k.promise ? k : a);
                            }), e();
                        }
                        var N = "Velocity: First argument (" + b + ") was not a property map, a known action, or a registered redirect. Aborting.";
                        return k.promise ? k.rejecter(new Error(N)) : console.log(N), e();
                    }
                    A = "start";
                }
                var L = {
                    lastParent: null,
                    lastPosition: null,
                    lastFontSize: null,
                    lastPercentToPxWidth: null,
                    lastPercentToPxHeight: null,
                    lastEmToPx: null,
                    remToPx: null,
                    vwToPx: null,
                    vhToPx: null
                }, R = [];
                $.each(h, function(e, t) {
                    g.isNode(t) && s.call(t);
                });
                var O, E = $.extend({}, v.defaults, P);
                if (E.loop = parseInt(E.loop), O = 2 * E.loop - 1, E.loop) for (var z = 0; O > z; z++) {
                    var q = {
                        delay: E.delay,
                        progress: E.progress
                    };
                    z === O - 1 && (q.display = E.display, q.visibility = E.visibility, q.complete = E.complete), 
                    S(h, "reverse", q);
                }
                return e();
            }
        };
        v = $.extend(S, v), v.animate = S;
        var P = t.requestAnimationFrame || d;
        return v.State.isMobile || r.hidden === a || r.addEventListener("visibilitychange", function() {
            r.hidden ? (P = function(e) {
                return setTimeout(function() {
                    e(!0);
                }, 16);
            }, c()) : P = t.requestAnimationFrame || d;
        }), e.Velocity = v, e !== t && (e.fn.velocity = S, e.fn.velocity.defaults = v.defaults), 
        $.each([ "Down", "Up" ], function(e, t) {
            v.Redirects["slide" + t] = function(e, r, n, o, i, s) {
                var l = $.extend({}, r), u = l.begin, c = l.complete, p = {
                    height: "",
                    marginTop: "",
                    marginBottom: "",
                    paddingTop: "",
                    paddingBottom: ""
                }, f = {};
                l.display === a && (l.display = "Down" === t ? "inline" === v.CSS.Values.getDisplayType(e) ? "inline-block" : "block" : "none"), 
                l.begin = function() {
                    u && u.call(i, i);
                    for (var r in p) {
                        f[r] = e.style[r];
                        var a = v.CSS.getPropertyValue(e, r);
                        p[r] = "Down" === t ? [ a, 0 ] : [ 0, a ];
                    }
                    f.overflow = e.style.overflow, e.style.overflow = "hidden";
                }, l.complete = function() {
                    for (var t in f) e.style[t] = f[t];
                    c && c.call(i, i), s && s.resolver(i);
                }, v(e, p, l);
            };
        }), $.each([ "In", "Out" ], function(e, t) {
            v.Redirects["fade" + t] = function(e, r, n, o, i, s) {
                var l = $.extend({}, r), u = {
                    opacity: "In" === t ? 1 : 0
                }, c = l.complete;
                l.complete = n !== o - 1 ? l.begin = null : function() {
                    c && c.call(i, i), s && s.resolver(i);
                }, l.display === a && (l.display = "In" === t ? "auto" : "none"), v(this, u, l);
            };
        }), v;
    }(window.jQuery || window.Zepto || window, window, document);
}), function() {
    var __indexOf = [].indexOf || function(item) {
        for (var i = 0, l = this.length; l > i; i++) if (i in this && this[i] === item) return i;
        return -1;
    }, __slice = [].slice;
    !function(root, factory) {
        return "function" == typeof define && define.amd ? define("waypoints", [ "jquery" ], function($) {
            return factory($, root);
        }) : factory(root.jQuery, root);
    }(window, function($, window) {
        var $w, Context, Waypoint, allWaypoints, contextCounter, contextKey, contexts, isTouch, jQMethods, methods, resizeEvent, scrollEvent, waypointCounter, waypointKey, wp, wps;
        return $w = $(window), isTouch = __indexOf.call(window, "ontouchstart") >= 0, allWaypoints = {
            horizontal: {},
            vertical: {}
        }, contextCounter = 1, contexts = {}, contextKey = "waypoints-context-id", resizeEvent = "resize.waypoints", 
        scrollEvent = "scroll.waypoints", waypointCounter = 1, waypointKey = "waypoints-waypoint-ids", 
        wp = "waypoint", wps = "waypoints", Context = function() {
            function Context($element) {
                var _this = this;
                this.$element = $element, this.element = $element[0], this.didResize = !1, this.didScroll = !1, 
                this.id = "context" + contextCounter++, this.oldScroll = {
                    x: $element.scrollLeft(),
                    y: $element.scrollTop()
                }, this.waypoints = {
                    horizontal: {},
                    vertical: {}
                }, this.element[contextKey] = this.id, contexts[this.id] = this, $element.bind(scrollEvent, function() {
                    var scrollHandler;
                    return _this.didScroll || isTouch ? void 0 : (_this.didScroll = !0, scrollHandler = function() {
                        return _this.doScroll(), _this.didScroll = !1;
                    }, window.setTimeout(scrollHandler, $[wps].settings.scrollThrottle));
                }), $element.bind(resizeEvent, function() {
                    var resizeHandler;
                    return _this.didResize ? void 0 : (_this.didResize = !0, resizeHandler = function() {
                        return $[wps]("refresh"), _this.didResize = !1;
                    }, window.setTimeout(resizeHandler, $[wps].settings.resizeThrottle));
                });
            }
            return Context.prototype.doScroll = function() {
                var axes, _this = this;
                return axes = {
                    horizontal: {
                        newScroll: this.$element.scrollLeft(),
                        oldScroll: this.oldScroll.x,
                        forward: "right",
                        backward: "left"
                    },
                    vertical: {
                        newScroll: this.$element.scrollTop(),
                        oldScroll: this.oldScroll.y,
                        forward: "down",
                        backward: "up"
                    }
                }, !isTouch || axes.vertical.oldScroll && axes.vertical.newScroll || $[wps]("refresh"), 
                $.each(axes, function(aKey, axis) {
                    var direction, isForward, triggered;
                    return triggered = [], isForward = axis.newScroll > axis.oldScroll, direction = isForward ? axis.forward : axis.backward, 
                    $.each(_this.waypoints[aKey], function(wKey, waypoint) {
                        var _ref, _ref1;
                        return axis.oldScroll < (_ref = waypoint.offset) && _ref <= axis.newScroll ? triggered.push(waypoint) : axis.newScroll < (_ref1 = waypoint.offset) && _ref1 <= axis.oldScroll ? triggered.push(waypoint) : void 0;
                    }), triggered.sort(function(a, b) {
                        return a.offset - b.offset;
                    }), isForward || triggered.reverse(), $.each(triggered, function(i, waypoint) {
                        return waypoint.options.continuous || i === triggered.length - 1 ? waypoint.trigger([ direction ]) : void 0;
                    });
                }), this.oldScroll = {
                    x: axes.horizontal.newScroll,
                    y: axes.vertical.newScroll
                };
            }, Context.prototype.refresh = function() {
                var axes, cOffset, isWin, _this = this;
                return isWin = $.isWindow(this.element), cOffset = this.$element.offset(), this.doScroll(), 
                axes = {
                    horizontal: {
                        contextOffset: isWin ? 0 : cOffset.left,
                        contextScroll: isWin ? 0 : this.oldScroll.x,
                        contextDimension: this.$element.width(),
                        oldScroll: this.oldScroll.x,
                        forward: "right",
                        backward: "left",
                        offsetProp: "left"
                    },
                    vertical: {
                        contextOffset: isWin ? 0 : cOffset.top,
                        contextScroll: isWin ? 0 : this.oldScroll.y,
                        contextDimension: isWin ? $[wps]("viewportHeight") : this.$element.height(),
                        oldScroll: this.oldScroll.y,
                        forward: "down",
                        backward: "up",
                        offsetProp: "top"
                    }
                }, $.each(axes, function(aKey, axis) {
                    return $.each(_this.waypoints[aKey], function(i, waypoint) {
                        var adjustment, elementOffset, oldOffset, _ref, _ref1;
                        return adjustment = waypoint.options.offset, oldOffset = waypoint.offset, elementOffset = $.isWindow(waypoint.element) ? 0 : waypoint.$element.offset()[axis.offsetProp], 
                        $.isFunction(adjustment) ? adjustment = adjustment.apply(waypoint.element) : "string" == typeof adjustment && (adjustment = parseFloat(adjustment), 
                        waypoint.options.offset.indexOf("%") > -1 && (adjustment = Math.ceil(axis.contextDimension * adjustment / 100))), 
                        waypoint.offset = elementOffset - axis.contextOffset + axis.contextScroll - adjustment, 
                        waypoint.options.onlyOnScroll && null != oldOffset || !waypoint.enabled ? void 0 : null !== oldOffset && oldOffset < (_ref = axis.oldScroll) && _ref <= waypoint.offset ? waypoint.trigger([ axis.backward ]) : null !== oldOffset && oldOffset > (_ref1 = axis.oldScroll) && _ref1 >= waypoint.offset ? waypoint.trigger([ axis.forward ]) : null === oldOffset && axis.oldScroll >= waypoint.offset ? waypoint.trigger([ axis.forward ]) : void 0;
                    });
                });
            }, Context.prototype.checkEmpty = function() {
                return $.isEmptyObject(this.waypoints.horizontal) && $.isEmptyObject(this.waypoints.vertical) ? (this.$element.unbind([ resizeEvent, scrollEvent ].join(" ")), 
                delete contexts[this.id]) : void 0;
            }, Context;
        }(), Waypoint = function() {
            function Waypoint($element, context, options) {
                var idList, _ref;
                "bottom-in-view" === options.offset && (options.offset = function() {
                    var contextHeight;
                    return contextHeight = $[wps]("viewportHeight"), $.isWindow(context.element) || (contextHeight = context.$element.height()), 
                    contextHeight - $(this).outerHeight();
                }), this.$element = $element, this.element = $element[0], this.axis = options.horizontal ? "horizontal" : "vertical", 
                this.callback = options.handler, this.context = context, this.enabled = options.enabled, 
                this.id = "waypoints" + waypointCounter++, this.offset = null, this.options = options, 
                context.waypoints[this.axis][this.id] = this, allWaypoints[this.axis][this.id] = this, 
                idList = null != (_ref = this.element[waypointKey]) ? _ref : [], idList.push(this.id), 
                this.element[waypointKey] = idList;
            }
            return Waypoint.prototype.trigger = function(args) {
                return this.enabled ? (null != this.callback && this.callback.apply(this.element, args), 
                this.options.triggerOnce ? this.destroy() : void 0) : void 0;
            }, Waypoint.prototype.disable = function() {
                return this.enabled = !1;
            }, Waypoint.prototype.enable = function() {
                return this.context.refresh(), this.enabled = !0;
            }, Waypoint.prototype.destroy = function() {
                return delete allWaypoints[this.axis][this.id], delete this.context.waypoints[this.axis][this.id], 
                this.context.checkEmpty();
            }, Waypoint.getWaypointsByElement = function(element) {
                var all, ids;
                return (ids = element[waypointKey]) ? (all = $.extend({}, allWaypoints.horizontal, allWaypoints.vertical), 
                $.map(ids, function(id) {
                    return all[id];
                })) : [];
            }, Waypoint;
        }(), methods = {
            init: function(f, options) {
                var _ref;
                return options = $.extend({}, $.fn[wp].defaults, options), null == (_ref = options.handler) && (options.handler = f), 
                this.each(function() {
                    var $this, context, contextElement, _ref1;
                    return $this = $(this), contextElement = null != (_ref1 = options.context) ? _ref1 : $.fn[wp].defaults.context, 
                    $.isWindow(contextElement) || (contextElement = $this.closest(contextElement)), 
                    contextElement = $(contextElement), context = contexts[contextElement[0][contextKey]], 
                    context || (context = new Context(contextElement)), new Waypoint($this, context, options);
                }), $[wps]("refresh"), this;
            },
            disable: function() {
                return methods._invoke.call(this, "disable");
            },
            enable: function() {
                return methods._invoke.call(this, "enable");
            },
            destroy: function() {
                return methods._invoke.call(this, "destroy");
            },
            prev: function(axis, selector) {
                return methods._traverse.call(this, axis, selector, function(stack, index, waypoints) {
                    return index > 0 ? stack.push(waypoints[index - 1]) : void 0;
                });
            },
            next: function(axis, selector) {
                return methods._traverse.call(this, axis, selector, function(stack, index, waypoints) {
                    return index < waypoints.length - 1 ? stack.push(waypoints[index + 1]) : void 0;
                });
            },
            _traverse: function(axis, selector, push) {
                var stack, waypoints;
                return null == axis && (axis = "vertical"), null == selector && (selector = window), 
                waypoints = jQMethods.aggregate(selector), stack = [], this.each(function() {
                    var index;
                    return index = $.inArray(this, waypoints[axis]), push(stack, index, waypoints[axis]);
                }), this.pushStack(stack);
            },
            _invoke: function(method) {
                return this.each(function() {
                    var waypoints;
                    return waypoints = Waypoint.getWaypointsByElement(this), $.each(waypoints, function(i, waypoint) {
                        return waypoint[method](), !0;
                    });
                }), this;
            }
        }, $.fn[wp] = function() {
            var args, method;
            return method = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [], 
            methods[method] ? methods[method].apply(this, args) : $.isFunction(method) ? methods.init.apply(this, arguments) : $.isPlainObject(method) ? methods.init.apply(this, [ null, method ]) : $.error(method ? "The " + method + " method does not exist in jQuery Waypoints." : "jQuery Waypoints needs a callback function or handler option.");
        }, $.fn[wp].defaults = {
            context: window,
            continuous: !0,
            enabled: !0,
            horizontal: !1,
            offset: 0,
            triggerOnce: !1
        }, jQMethods = {
            refresh: function() {
                return $.each(contexts, function(i, context) {
                    return context.refresh();
                });
            },
            viewportHeight: function() {
                var _ref;
                return null != (_ref = window.innerHeight) ? _ref : $w.height();
            },
            aggregate: function(contextSelector) {
                var collection, waypoints, _ref;
                return collection = allWaypoints, contextSelector && (collection = null != (_ref = contexts[$(contextSelector)[0][contextKey]]) ? _ref.waypoints : void 0), 
                collection ? (waypoints = {
                    horizontal: [],
                    vertical: []
                }, $.each(waypoints, function(axis, arr) {
                    return $.each(collection[axis], function(key, waypoint) {
                        return arr.push(waypoint);
                    }), arr.sort(function(a, b) {
                        return a.offset - b.offset;
                    }), waypoints[axis] = $.map(arr, function(waypoint) {
                        return waypoint.element;
                    }), waypoints[axis] = $.unique(waypoints[axis]);
                }), waypoints) : [];
            },
            above: function(contextSelector) {
                return null == contextSelector && (contextSelector = window), jQMethods._filter(contextSelector, "vertical", function(context, waypoint) {
                    return waypoint.offset <= context.oldScroll.y;
                });
            },
            below: function(contextSelector) {
                return null == contextSelector && (contextSelector = window), jQMethods._filter(contextSelector, "vertical", function(context, waypoint) {
                    return waypoint.offset > context.oldScroll.y;
                });
            },
            left: function(contextSelector) {
                return null == contextSelector && (contextSelector = window), jQMethods._filter(contextSelector, "horizontal", function(context, waypoint) {
                    return waypoint.offset <= context.oldScroll.x;
                });
            },
            right: function(contextSelector) {
                return null == contextSelector && (contextSelector = window), jQMethods._filter(contextSelector, "horizontal", function(context, waypoint) {
                    return waypoint.offset > context.oldScroll.x;
                });
            },
            enable: function() {
                return jQMethods._invoke("enable");
            },
            disable: function() {
                return jQMethods._invoke("disable");
            },
            destroy: function() {
                return jQMethods._invoke("destroy");
            },
            extendFn: function(methodName, f) {
                return methods[methodName] = f;
            },
            _invoke: function(method) {
                var waypoints;
                return waypoints = $.extend({}, allWaypoints.vertical, allWaypoints.horizontal), 
                $.each(waypoints, function(key, waypoint) {
                    return waypoint[method](), !0;
                });
            },
            _filter: function(selector, axis, test) {
                var context, waypoints;
                return (context = contexts[$(selector)[0][contextKey]]) ? (waypoints = [], $.each(context.waypoints[axis], function(i, waypoint) {
                    return test(context, waypoint) ? waypoints.push(waypoint) : void 0;
                }), waypoints.sort(function(a, b) {
                    return a.offset - b.offset;
                }), $.map(waypoints, function(waypoint) {
                    return waypoint.element;
                })) : [];
            }
        }, $[wps] = function() {
            var args, method;
            return method = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [], 
            jQMethods[method] ? jQMethods[method].apply(null, args) : jQMethods.aggregate.call(null, method);
        }, $[wps].settings = {
            resizeThrottle: 100,
            scrollThrottle: 30
        }, $w.on("load.waypoints", function() {
            return $[wps]("refresh");
        });
    });
}.call(this), function() {
    function Retina() {}
    function RetinaImagePath(path, at_2x_path) {
        this.path = path, "undefined" != typeof at_2x_path && null !== at_2x_path ? (this.at_2x_path = at_2x_path, 
        this.perform_check = !1) : (this.at_2x_path = path.replace(/\.\w+$/, function(match) {
            return "@2x" + match;
        }), this.perform_check = !0);
    }
    function RetinaImage(el) {
        this.el = el, this.path = new RetinaImagePath(this.el.getAttribute("src"), this.el.getAttribute("data-at2x"));
        var that = this;
        this.path.check_2x_variant(function(hasVariant) {
            hasVariant && that.swap();
        });
    }
    var root = "undefined" == typeof exports ? window : exports, config = {
        check_mime_type: !0
    };
    root.Retina = Retina, Retina.configure = function(options) {
        null == options && (options = {});
        for (var prop in options) config[prop] = options[prop];
    }, Retina.init = function(context) {
        null == context && (context = root);
        var existing_onload = context.onload || new Function();
        jQuery(document).ready(function() {
            var i, image, images = document.getElementsByTagName("img"), retinaImages = [];
            for (i = 0; i < images.length; i++) image = images[i], retinaImages.push(new RetinaImage(image));
            existing_onload();
        });
    }, Retina.isRetina = function() {
        var mediaQuery = "(-webkit-min-device-pixel-ratio: 1.5),                      (min--moz-device-pixel-ratio: 1.5),                      (-o-min-device-pixel-ratio: 3/2),                      (min-resolution: 1.5dppx)";
        return root.devicePixelRatio > 1 ? !0 : root.matchMedia && root.matchMedia(mediaQuery).matches ? !0 : !1;
    }, root.RetinaImagePath = RetinaImagePath, RetinaImagePath.confirmed_paths = [], 
    RetinaImagePath.prototype.is_external = function() {
        return !(!this.path.match(/^https?\:/i) || this.path.match("//" + document.domain));
    }, RetinaImagePath.prototype.check_2x_variant = function(callback) {
        var http, that = this;
        return this.is_external() ? callback(!1) : this.perform_check || "undefined" == typeof this.at_2x_path || null === this.at_2x_path ? this.at_2x_path in RetinaImagePath.confirmed_paths ? callback(!0) : (http = new XMLHttpRequest(), 
        http.open("HEAD", this.at_2x_path), http.onreadystatechange = function() {
            if (4 != http.readyState) return callback(!1);
            if (http.status >= 200 && http.status <= 399) {
                if (config.check_mime_type) {
                    var type = http.getResponseHeader("Content-Type");
                    if (null == type || !type.match(/^image/i)) return callback(!1);
                }
                return RetinaImagePath.confirmed_paths.push(that.at_2x_path), callback(!0);
            }
            return callback(!1);
        }, http.send(), void 0) : callback(!0);
    }, root.RetinaImage = RetinaImage, RetinaImage.prototype.swap = function(path) {
        function load() {
            that.el.complete ? (that.el.setAttribute("width", that.el.offsetWidth), that.el.setAttribute("height", that.el.offsetHeight), 
            that.el.setAttribute("src", path)) : setTimeout(load, 5);
        }
        "undefined" == typeof path && (path = this.path.at_2x_path);
        var that = this;
        load();
    }, Retina.isRetina() && Retina.init(root);
}(), function() {
    !function(root, factory) {
        return "function" == typeof define && define.amd ? define([ "jquery", "waypoints" ], factory) : factory(root.jQuery);
    }(window, function($) {
        var defaults, wrap;
        return defaults = {
            wrapper: '<div class="sticky-wrapper" />',
            stuckClass: "stuck",
            direction: "down right"
        }, wrap = function($elements, options) {
            var $parent;
            return $elements.wrap(options.wrapper), $parent = $elements.parent(), $parent.data("isWaypointStickyWrapper", !0);
        }, $.waypoints("extendFn", "sticky", function(opt) {
            var $wrap, options, originalHandler;
            return options = $.extend({}, $.fn.waypoint.defaults, defaults, opt), $wrap = wrap(this, options), 
            originalHandler = options.handler, options.handler = function(direction) {
                var $sticky, shouldBeStuck;
                return $sticky = $(this).children(":first"), shouldBeStuck = -1 !== options.direction.indexOf(direction), 
                $sticky.toggleClass(options.stuckClass, shouldBeStuck), $wrap.height(shouldBeStuck ? $sticky.outerHeight() : ""), 
                null != originalHandler ? originalHandler.call(this, direction) : void 0;
            }, $wrap.waypoint(options), this.data("stuckClass", options.stuckClass);
        }), $.waypoints("extendFn", "unsticky", function() {
            var $parent;
            return $parent = this.parent(), $parent.data("isWaypointStickyWrapper") ? ($parent.waypoint("destroy"), 
            this.unwrap(), this.removeClass(this.data("stuckClass"))) : this;
        });
    });
}.call(this);

var Main = function($) {
    return {
        mainNav: function() {
            $(".menu-toggle").on("click", function() {
                $(this).toggleClass("menu-open"), $(".menu").toggleClass("active");
            });
        },
        stickyHeader: function() {
            var headerH = $(".header_main").outerHeight();
            $(window).resize(function() {
                $(".header_main").outerHeight();
            }), $(".header_main").waypoint(function() {
                $(this).toggleClass("sticky");
            }, {
                offset: -headerH
            });
        },
        smoothScrolling: function() {
            var headerH = $(".header_main").outerHeight();
            $(window).resize(function() {
                $(".header_main").outerHeight();
            }), smoothScroll.init({
                speed: 500,
                easing: "easeInOutCubic",
                updateURL: !1,
                offset: headerH
            });
        },
        featureSlider: function() {
            $(".feature-slider").slick({
                autoplay: !0,
                autoplaySpeed: 5e3
            }), $(".slick-active .progress-bar .bar").hide().delay(500).animate({
                width: "toggle"
            }, 1500, "easeInOutCubic"), $(".banner-content.feature .progress-bar .bar").hide().delay(500).animate({
                width: "toggle"
            }, 1500, "easeInOutCubic");
        },
        affiliatesSlider: function() {
            $(".affiliates-slider-w2").slick({
                autoplay: !0,
                arrows: !1,
                slidesToShow: 2
            }), $(".affiliates-slider-w3").slick({
                autoplay: !0,
                arrows: !1,
                slidesToShow: 3,
                responsive: [ {
                    breakpoint: 600,
                    settings: {
                        slidesToShow: 2,
                        slidesToScroll: 2
                    }
                } ]
            });
        },
        reasonsSlider: function() {
            $(window).width() > 600 ? $(".reasons-slider").slick({
                autoplay: !0,
                slidesToShow: 3
            }) : $(".reasons-slider").unslick(), $(window).resize(function() {
                $(window).width() > 600 ? $(".reasons-slider").slick({
                    autoplay: !0,
                    slidesToShow: 3
                }) : $(".reasons-slider").unslick();
            });
        },
        blockSliders: function() {
            $(".block-image-slider0").slick({
                adaptiveHeight: !0
            }), $(".block-image-slider1").slick({
                arrows: !1,
                draggable: !1,
                adaptiveHeight: !0
            }), $(".block-image-slider2").slick({
                arrows: !1,
                draggable: !1,
                adaptiveHeight: !0
            }), $(".block-content-slider1").slick({
                dots: !0,
                draggable: !1,
                asNavFor: ".block-image-slider1"
            }), $(".block-content-slider2").slick({
                dots: !0,
                draggable: !1,
                asNavFor: ".block-image-slider2"
            });
        },
        formFunctions: function() {
            $('input[type="number"], input[type="tel"]').numeric({
                allow: "."
            }), $("form").validate();
        },
        radialProgress: function() {
            var clamp = function(n, min, max) {
                return Math.max(min, Math.min(max, n));
            }, drawProgress = function(percent) {
                if (!isNaN(percent)) {
                    percent = clamp(parseFloat(percent), 0, 1);
                    var angle = clamp(360 * percent, 0, 359.99999), paddedRadius = 51, radians = angle * Math.PI / 180, x = Math.sin(radians) * paddedRadius, y = Math.cos(radians) * -paddedRadius, mid = angle > 180 ? 1 : 0, pathData = "M 0 0 v -%@ A %@ %@ 1 ".replace(/%@/gi, paddedRadius) + mid + " 1 " + x + " " + y + " z", bar = document.getElementsByClassName("progress-radial-bar")[0];
                    bar.setAttribute("d", pathData);
                }
            }, max = .95, progress = 0;
            $(".progress-container").waypoint(function() {
                drawProgress(progress);
                var interval = window.setInterval(function() {
                    progress += .01, progress >= max && window.clearInterval(interval), drawProgress(progress);
                }, 10);
            }, {
                offset: "50%",
                triggerOnce: !0
            });
        },
        accordians: function() {
            var headerH = $(".header_main").outerHeight();
            $(window).resize(function() {
                $(".header_main").outerHeight();
            }), $(".accordian-trigger").on("click", function() {
                $("html,body").animate({
                    scrollTop: $(this).offset().top - headerH
                }, 500, "easeInOutCubic");
                var tP = $(this).closest(".accordian");
                $(".accordian.active").not(tP).removeClass("active"), tP.toggleClass("active");
            });
        },
        panes: function() {
            $(".pane-advance").on("click", function(e) {
                e.preventDefault(), $(this).closest(".pane").removeClass("active").addClass("inactive"), 
                $(this).closest(".pane").next(".pane").removeClass("inactive").addClass("active");
            }), $(".pane-devance").on("click", function(e) {
                e.preventDefault(), $(this).closest(".pane").removeClass("active").addClass("inactive"), 
                $(this).closest(".pane").prev(".pane").removeClass("inactive").addClass("active");
            });
        },
        video: function() {
            $(".video-toggle").on("click", function(e) {
                e.preventDefault(), $(".feature-video").toggleClass("active");
            }), $(".feature-video-background").on("click", function() {
                $(".feature-video.active").removeClass("active");
            });
        },
        initMain: function() {
            $(document).ready(function() {
                Main.mainNav(), Main.stickyHeader(), Main.smoothScrolling(), Main.featureSlider(), 
                Main.affiliatesSlider(), Main.reasonsSlider(), Main.blockSliders(), Main.formFunctions(), 
                Main.radialProgress(), Main.accordians(), Main.panes(), Main.video();
            });
        }
    };
}(jQuery);

Main.initMain();