var RTG = (function ($) {
  var braintreeClient,
      braintreeToken,
      youtubePlayer;

  function _init() {
    _resize();
    _cartInit();
    _mainNav();
    _stickyHeader();
    _smoothScrolling();
    _featureSlider();
    _affiliatesSlider();
    _reasonsSlider();
    _blockSliders();
    _formFunctions();
    _radialProgress();
    _accordions();
    _panes();
    _video();
    _tweetIt();
    _animatedCharts();
    _flashInit();
    _newsletterInit();

    // About Us page
    if ($('body.about-us').length>0) {
      _googleMap();
    }

    // News page
    if ($('body.news').length>0) {
      // faux show mo
      $('.news-lists .block').each(function() {
        var $newsBlock = $(this);
        // only show first "page" of news items
        $newsBlock.find('.news-items li:gt(4)').hide();
        // hide Next Page links
        $newsBlock.find('.next-page.btn').hide();
        // on Show More clicks, slide out more posts
        $newsBlock.find('.show-more.btn').click(function(e) {
          e.preventDefault();
          $('.news-items').each(function() {
            var at = $(this).find('li:visible:last').index();
            $(this).find('li:lt(' + (at+5) + ')').slideDown();
          });
          _checkNewsBlocks();
        });
      });
      _checkNewsBlocks();
    }

    // Some general Esc handlers
    $(document).keyup(function(e) {
      if (e.keyCode == 27) {
        _hideFlash();
        if ($('#cart').hasClass('review-stage')) _hideCart();
      }
    });

    // "admin_status" cookie is set by Warden in devise.rb on login
    admin_status = $.cookie('admin_status');
    if (admin_status) {
      $('.edit-bug').addClass('active');
    }

  };

  function _checkNewsBlocks() {
    // if no more hidden posts (in either News or Press), show Next Page buttons
    if ($('.news-items li:hidden').length==0) {
      $('.show-more.btn').hide();
      $('.next-page.btn').show();
    }
  }

  function _newsletterInit() {
    // ajaxify all newsletter signup forms
    $('form.newsletter').each(function() {
      var $form = $(this);
      $form.on('submit', function(e) {
        e.preventDefault();
        if ($form.find('input[name=EMAIL]').val()=='') {
          _flashAlert('Please enter an email.');
        } else {
          $.getJSON($form.attr('action'), $form.serialize())
            .done(function(data) {
              if (data.result != "success") {
                if (data.msg.match(/already subscribed/)) {
                  _flashAlert('You are already subscribed to our newsletter.');
                } else {
                  _flashAlert('There was an error subscribing: ' + data.msg);
                }
              } else {
                _flashAlert(data.msg);
              }
            })
            .fail(function() {
              _flashAlert('There was an error subscribing. Please try again.');
            });
        }
      });
    });
  }

  function _flashInit() {
    $('.flash').each(function() {
      var $this = $(this);
      $('body').addClass('has-flash');
      $('<a href="#" class="close"><span class="x -white"></span></a>').appendTo($this).click(function(e) {
        e.preventDefault();
        _hideFlash();
      });
    });
  }

  function _hideFlash() {
    $('.flash').fadeOut();
    $('body').removeClass('has-flash');
  }

  function _flashAlert(message) {
    if ($('.flash').length>0) {
      $('.flash').find('p').html(message).end().show();
      $('body').addClass('has-flash');
    } else {
      $('<div class="flash"><p class="alert">' + message + '</p></div>').insertAfter('.header_main');
      _flashInit();
    }
  }

  function _resize() {
    // this is called rapid-fire as the window is resized
  };

  function _cartInit() {
    // faux <form> wrappers on cart item amounts, only so they get proper CSS styling (kludge-o-rama)
    $('#cart').on('submit', 'form.item-amount', function(e) { e.preventDefault(); });

    // add to cart links
    $('.cart-form').submit(function(e) {
      var $amountInput = $(this).find('input[name=amount]'); 
      // set value to 25 if blank (same as placeholder)
      if (!$amountInput.val() || parseInt($amountInput.val())<=0) {
        $amountInput.val('25');
      }
    });
    // update cart contents after adding item
    $('.cart-form').on('ajax:success', function(e, data) {
      // hide any flash messages from previous errors
      _hideFlash();
      // scroll to top on mobile
      if (Modernizr.touch) {
        $(window).scrollTop(0);
      }
      // when request actually finishes, update cart with new data
      $('#cart').removeClass('working');
      $('.cart-items-wrap').html(data);
      _setCartCount();
      _showCart();
    });
    
    // update cart item amounts
    $('#cart').on('ajax:success', '.item-amount', function(e, data) {
      $('.cart-items-wrap').html(data);
    }).on('click', 'input.amount', function() {
      this.select();
    });

    // delete cart item links
    $('#cart').on('click', '.item-remove', function() {
      var thisItem = $(this).closest('li.cart-item');
      thisItem.addClass('-removed');
      setTimeout(function () {
        thisItem.velocity(
          { height: 0 },
          { duration: 150 }
        );
      }, 250);
      setTimeout(function () {
        thisItem.remove();
        _setCartCount();
        _setCartTotal();
      }, 400);
    });

    // use this if/when we want to do full page caching
    // cart_count = $.cookie('cart_count');
    // if (cart_count) {
    //   $.get('/cart/ajax_cart', function(data) {
    //     $('.cart-items-wrap').html(data);
    //     _setCartCount();
    //   });
    // }

    $('.cart-toggle').on('click', function(e) {
      e.preventDefault();
      e.stopPropagation();
      if (Modernizr.touch) {
        $(window).scrollTop(0);
      }
      _showCart();
    });

    // Hide cart when clicking on body and (X) buttons
    $('html').on('click', '.body-wrap.unfocus', _hideCart);
    $('.cart-close').on('click', function(e) {
      e.preventDefault();
      _hideCart();
    });

    // Form input formatting
    $('.cc-num').payment('formatCardNumber');
    $('.cc-exp').payment('formatCardExpiry');
    $('.cc-cvc').payment('formatCardCVC');
    $('.cc-zip').payment('restrictNumeric');
    $('#checkoutZipCode').payment('restrictNumeric');

    // Custom jquery.validate rules for credit card validating (using Stripe's js library)
    jQuery.validator.addMethod("cardNumber", $.payment.validateCardNumber, "Please enter a valid card number");
    jQuery.validator.addMethod("cardCVC", $.payment.validateCardCVC, "Please enter a valid security code");
    jQuery.validator.addMethod("cardExpiry", function() {
      var expiry = $('.cc-exp').payment('cardExpiryVal');
      return $.payment.validateCardExpiry(expiry.month,expiry.year)
    }, "Please enter a valid expiration");

    // Custom jquery.validate for checkout form
    $("#checkout").unbind('submit').validate({
        submitHandler: RTG.checkoutSubmit,
        rules: {
            "cc-cvc" : {
                cardCVC: true,
                required: true
            },
            "cc-num" : {
                cardNumber: true,
                required: true
            },
            "cc-exp" : "cardExpiry" // we don't validate month separately
        }
    });

    // Initially hide the "Other" input
    $("#checkoutSourceOtherSource").hide();
    // Add text input if "Other" selected as option to how you found out Q
    $('#checkoutSource').change(function() {
      if ($(this).find('option:selected').val() == "checkoutSourceOther") {
        $("#checkoutSourceOtherSource").show().focus();
      } else {
        $("#checkoutSourceOtherSource").hide();
      }
    });

    // Buttons to step through various checkout stages on desktop
    $('.stage-submit').each(function () {
      $(this).on('click', function (e) {
        e.preventDefault();
        // determine current stage
        var stage = $(this).closest('.cart-stage');
        var stageClass = stage.data('stage') + '-stage';
        // this stage is current, let's move on to the next
        if ($('.cart').hasClass(stageClass)) {
          stage.removeClass('active-stage');
          stage = $(_findNextCartStage(stage[0]));
          stageClass = stage.data('stage') + '-stage';
        }
        // set stage class for .cart
        $('.cart').attr('class','cart active').addClass(stageClass);
        _resetCartButtons();
        // set active-stage class
        stage.addClass('active-stage');
        // set all prev stage buttons to "Edit"
        $('.cart-stage').not(stage).find('.btn').text('Edit');
        // focus first input in next stage
        stage.find('.-first input').focus();
      });
    });

    // Scroll to Checkout stage on small-screen view for usability
    $('.cart-review .stage-submit').on('click', function () {
        var checkoutTop = $('.cart-review').height();
        if (Modernizr.touch) {
          if ($(window).width() < 600) {
            $(window).scrollTop(checkoutTop);
          }
        } else {
          $('.cart').animate({
            scrollTop: checkoutTop
          }, 500);
        }
    });

    // Toggle active stage by clicking/touching inactive stage
    $('.cart-accordion-toggle').on('click', function() {
        // determine current stage
        var stage = $(this).closest('.cart-stage');
        var stageClass = stage.data('stage') + '-stage';
        // Remove active stage class
        $('.cart-stage').not(stage).removeClass('active-stage');
        // set stage class for .cart
        $('.cart').attr('class','cart active').addClass(stageClass);
        _resetCartButtons();
        // set acitve-stage class
        stage.addClass('active-stage');
        // set all prev stage buttons to "Edit"
        stage.prevAll('.cart-stage').find('.btn').text('Edit');
        // focus first input in next stage
        stage.find('.-first input').focus();
    });

    // add name attributes for jquery.validate
    $.each(['cc-num','cc-cvc','cc-exp'], function(i,k) { $('.'+k).attr('name', k) });

  }; // end _cartInit()

  // Init Braintree
  function _initBraintree() {
    braintreeClient = new braintree.api.Client({clientToken: braintreeToken});
    braintree.setup(braintreeToken, "paypal", {
      container: "paypal-button",
      enableShippingAddress: true,
      paymentMethodNonceInputField: 'payment_method_nonce',
      onSuccess: function(nonce, email, shippingObject) {
        // hide CC fields
        $('.cc-num,.cc-cvc,.cc-exp,.cc-zip').prop('disabled', true);
        $('.payment-toggle').hide().prop('disabled', true);
        $('.paypal-submit').show().prop('disabled', false);

        $('#checkoutEmail').val(email);
        // fill out address fields if available
        if (shippingObject) {
          var fullName = shippingObject.recipient_name.split(' '),
              firstName = fullName[0],
              lastName = fullName[fullName.length - 1];
          $('#checkoutFirstName').val(firstName);
          $('#checkoutLastName').val(lastName);
          $('#checkoutAddress').val(shippingObject.street_address);
          $('#checkoutCity').val(shippingObject.locality);
          $('#checkoutState').val(shippingObject.region);
          $('#checkoutZipCode').val(shippingObject.postal_code);
          $('.cart').removeClass('payment-stage').addClass('checkout-stage');
        }
      },
      onCancelled: function() {
        // show CC fields
        $('.cc-num,.cc-cvc,.cc-exp,.cc-zip').prop('disabled', false);
        $('.payment-toggle').show().prop('disabled', false);
        $('.paypal-submit').hide().prop('disabled', true);
      }
    });
  }

  // finds the next .cart-stage since they're not DOM siblings now (not my most beautiful work)
  function _findNextCartStage(stage) {
    var found,nextStage;
    $('.cart-stage').each(function(){
      if (!nextStage && found) nextStage = this;
      if (this==stage) found = true;
    });
    return nextStage;
  }

  function _checkoutSubmit() {
    // if using paypal, just submit form
    if ($('#braintree-paypal-loggedin').is(':visible')) {
      $('.cart-submit').val('Please Wait...');
      $('#checkout').addClass('working').get(0).submit();
    } else {
      // tokenize CC card info and put payment_method_nonce in form
      braintreeClient.tokenizeCard({
        number: $('.cc-num').val().replace(/ /g,''), 
        expirationDate: $('.cc-exp').val().replace(/ /g,''),
        cvv: $('.cc-cvc').val(),
        billingAddress: {
          postalCode: $('.cc-zip').val()
        }
      }, function (err, nonce) {
        if (err) {
          alert('There was a transaction error: ' + err);
        } else {
          // remove name attributes for security
          $('.cc-num,.cc-cvc,.cc-exp').removeAttr('name');

          $('#payment_method_nonce').val(nonce);
          $('.cart-submit').val('Please Wait...');
          $('#checkout').addClass('working').get(0).submit();
        }
      });
    }
}

  // Sets all cart stage buttons to data-original-text
  function _resetCartButtons() {
    $('.cart .btn').each(function() {
      $(this).text( $(this).data('original-text') );
    });
  }

  // Here, cart!
  function _showCart() {
    // init braintree if necessary
    if (!braintreeClient) {
      $.get('/cart/ajax_token', function(data) {
        braintreeToken = data;
        _initBraintree();
      });
    }
    $('.menu.active').removeClass('active');
    $('.menu-toggle').removeClass('menu-open');
    $('.cart').addClass('active cart-stage review-stage');
    $('.cart-review').addClass('active-stage');
    $('.body-wrap').addClass('unfocus');
  };

  // Set (cart count)
  function _setCartCount() {
    var cartCount = $('#cart .cart-item').length;
    $('.cart-item-count').text(cartCount);
    $('.cart-item-count').toggleClass('active', cartCount > 0);
    if (cartCount==0) {
      var emptyCartTxt = $('<p>Your cart is currently empty</p>').hide().prependTo('.cart-items-wrap');
      setTimeout(function() {emptyCartTxt.fadeIn()}, 250);
      $('.cart').attr('class', 'cart active review-stage empty');
      _resetCartButtons();
    } else {
      $('.cart').removeClass('empty');
    }
  };

  // Update cart total
  function _setCartTotal() {
    var cartTotal = 0;
    if ($('#cart input.amount').length>0) {
      $('#cart input.amount').each(function() {
        cartTotal += 1*$(this).val();
      });
      $('.cart-total strong').text(cartTotal);
    } else {
      $('.cart-total').hide();
    }
  }

  // Bad cart, lay down
  function _hideCart() {
    $('.body-wrap').removeClass('unfocus');
    $('.cart').removeClass('active payment-stage checkout-stage');
    $('.cart-stage').removeClass('active-stage');
    _resetCartButtons();
  };

  function _mainNav() {
    $('.menu-toggle').on('click', function() {
      $(this).toggleClass('menu-open');
      $('.menu').toggleClass('active');
    });
  };

  function _stickyHeader() {
    var nav = $('.header_main');

    nav.waypoint(function(direction) {
      if (direction === 'down') {
        nav.addClass('sticky');
        nav.removeClass('unsticky');
      }
    }, {offset: -80});

    nav.waypoint(function(direction) {
      if (direction === 'up') {
        nav.removeClass('sticky');
      }
    }, {offset: -20});
  };

  function _smoothScrolling() {
    smoothScroll.init({
      speed: 500,
      easing: 'easeOutCubic',
      updateURL: false,
      offset: $('.header_main').outerHeight()
    });
  };

  function _featureSlider() {
    var featureSlider = $('.feature-slider').slick({
      slide: 'div.feature',
      dots: true,
      adaptiveHeight: false,
      onInit: function(slider) {
        animateBar();
      },
      onAfterChange: function(slider) {
        animateBar();
        $('.feature .text-input:focus').blur();
        $('.feature .focused').removeClass('focused');
        $('.feature .initial-actions.inactive').removeClass('inactive');
      },
      responsive: [
        {
          breakpoint: 860,
          settings: {
            adaptiveHeight: true
          }
        }
      ]
    });

    $('.feature-slider input').on('focus', function () {
      featureSlider.slickPause();
    }); 

    // Animate the slide's progress bar
    function animateBar() {
      $('.progress-bar .bar').hide();
      $('.slick-active .progress-bar .bar').animate({width:'toggle'}, 1000, 'easeInOutCubic');
    }
    // Animate reason's progress bars too
    $('.banner-content.feature .progress-bar .bar').hide().delay(250).animate({width:'toggle'}, 1000, 'easeInOutCubic');

    $('.feature-slider .feature').each(function () {
      var $slide = $(this),
          $slideBG = $slide.find('.feature-image'),
          $actions = $slide.find('.initial-actions'),
          $form = $slide.find('.donate'),
          $input = $form.find('input#amount'),
          $toggle = $actions.find('.donation-toggle');

      $toggle.on('click', function (e) {
        e.preventDefault();
        $form.toggleClass('focused');
        $actions.toggleClass('inactive');
        $input.focus();
      });

      $slideBG.on('click', function () {
        if ($form.is('.focused')) {
          $form.removeClass('focused');
          $actions.removeClass('inactive');
        }
      });

      $form.on('submit', function () { 
        setTimeout(function () {
          $form.removeClass('focused');
          $actions.removeClass('inactive');
        }, 500);
      });

    });
  };

  function _affiliatesSlider() {
    $('.affiliates-slider-w2').slick({
        autoplay: true,
        arrows: false,
        slidesToShow: 2
    });
    $('.affiliates-slider-w3').slick({
        autoplay: true,
        arrows: false,
        slidesToShow: 3,
        responsive: [
          {
            breakpoint: 600,
            settings: {
              slidesToShow: 2,
              slidesToScroll: 2
            }
          }
        ]
    });
  };

  function _reasonsSlider() {
    if ($(window).width() > 600 ) {
      $('.reasons-slider').slick({
        slide: '.reason-block',
        autoplay: true,
        slidesToShow: 3
      });
    } else {
      $('.reasons-slider').unslick();
    }

    var r;

    $(window).resize(function() {
        clearTimeout(r);
        r = setTimeout(doneResizing, 500);
    });

    function doneResizing() {
      if ($(window).width() > 600 ) {
        $('.reasons-slider').slick({
          slide: '.reason-block',
          autoplay: true,
          slidesToShow: 3
        });
      } else {
        $('.reasons-slider').unslick();
      }
    }
  };

  function _blockSliders() {
    $('.block-image-slider-static').slick({
      arrows: false,
      autoplay: true,
    });

    $('.block-image-slider0').slick({
      adaptiveHeight: true
    });

    $('.block-image-slider1').slick({
      arrows: false,
      draggable: false,
      adaptiveHeight: true,
    });

    $('.block-image-slider2').slick({
      arrows: false,
      draggable: false,
      adaptiveHeight: true,
    });

    $('.block-content-slider1').slick({
      dots: true,
      draggable: false,
      asNavFor: '.block-image-slider1'
    });

    $('.block-content-slider2').slick({
      dots: true,
      draggable: false,
      asNavFor: '.block-image-slider2'
    });

    // ?? not sure what this is
    function nextSlideTitle() {
      $('.block-content-flexslider').each(function() {
        nextTitle = $(this).find('.flex-active-slide').next().find('h3').text();
        $('.block-content-flexslider .flex-next').text(nextTitle);
      });
    }
  };

  function _formFunctions() {
    // only allow digits in money inputs
    $('input[type="number"], input[type="tel"]').numeric({allow: '.'});
    $('form').each(function() { $(this).validate(); });
  };

  function _radialProgress() {
    var clamp = function (n, min, max) {
      return Math.max(min, Math.min(max, n));
    };

    var drawProgress = function(percent){

      if(isNaN(percent)) {
        return;
      }

      percent = clamp(parseFloat(percent), 0, 1);

      // 360 loops back to 0, so keep it within 0 to < 360
      var angle = clamp(percent * 360, 0, 359.99999);
      var paddedRadius = 50 + 1;
      var radians = (angle * Math.PI / 180);
      var x = Math.sin(radians) * paddedRadius;
      var y = Math.cos(radians) * - paddedRadius;
      var mid = (angle > 180) ? 1 : 0;
      var pathData = 'M 0 0 v -%@ A %@ %@ 1 '.replace(/%@/gi, paddedRadius)
          + mid + ' 1 '
          + x + ' '
          + y + ' z';

      var bar = document.getElementsByClassName ('progress-radial-bar')[0]; 
      bar.setAttribute( 'd', pathData );
    };

    var max = 0.95;
    var progress = 0.0;

    // Set Progress with waypoints
    $('.progress-container').waypoint(function() {
      drawProgress(progress);

      var interval = window.setInterval(function () {
        progress = progress + 0.01;
        if(progress >= max) {
          window.clearInterval(interval);
        }
        drawProgress(progress);
      }, 10);        
    }, { offset: '50%', triggerOnce: true });
  };

  function _accordions() {
    $('.accordion-trigger').on('click', function () {
      $('html,body').animate({scrollTop: $(this).offset().top - $('.header_main').outerHeight()}, 500, 'easeInOutCubic');

      var tP = $(this).closest('.accordion');
      $('.accordion.active').not(tP).removeClass('active');
      tP.toggleClass('active');
    });
  };

  function _panes() {
    $('.pane-advance').on('click', function(e) {
      e.preventDefault();
      $(this).closest('.pane').removeClass('active').addClass('inactive');
      $(this).closest('.pane').next('.pane').removeClass('inactive').addClass('active');
    });
    $('.pane-devance').on('click', function(e) {
      e.preventDefault();
      $(this).closest('.pane').removeClass('active').addClass('inactive');
      $(this).closest('.pane').prev('.pane').removeClass('inactive').addClass('active');
    });
  };

  function _initVideo() {
    youtubePlayer = new YT.Player('video', {
      events: {
        'onReady': RTG.onPlayerReady,
        'onStateChange': RTG.onPlayerStateChange
      }
    });
  };

  function _onPlayerReady() {
    $('.video-toggle').on("click", function() {
      // wait for video to drop in
      $('.slider-wrap').addClass('video-expanded');
      $('.slider-wrap').velocity(
        { 
          height: '100%'
        }
      );
      if (!Modernizr.touch) {
        setTimeout(function() {
          youtubePlayer.playVideo();
        }, 250);
      }
    });
  };

  function _onPlayerStateChange(event) {        
    if(event.data === 0) {
      RTG.closeVideo();
    }
  }

  function _video() {
    $('.video-toggle').on('click', function (e) {
      e.preventDefault();
      $('.feature-video').velocity(
        { 
          opacity: 1
        },
        { 
          display: "block" 
        }
      );
    });

    $('body').on('click', '.video-expanded .scroll-down', function (e) {
      e.preventDefault();
      e.stopPropagation();
      youtubePlayer.pauseVideo();
      RTG.closeVideo();
    });

    // Fitvids to the rescue!
    $('.video-wrap').fitVids();
  };

  function _closeVideo() {
    $('.slider-wrap').removeClass('video-expanded');
    $('.slider-wrap').velocity("reverse");
    $('.feature-video').velocity(
      { 
        opacity: 0
      },
      { 
        display: "none" 
      }
    );
  }

  function _googleMap() {
    var map;
    var MY_MAPTYPE_ID = 'custom_style';
    var firebelly = new google.maps.LatLng(41.900866,-87.694542);

    function initialize() {

      var styles = [
        {
          featureType: "landscape.man_made",
          stylers: [
            { visibility: "off" }
          ]
        },{
          featureType: "landscape.natural",
          stylers: [
            { color: "#E54C97" }
          ]
        },{
          featureType: "road",
          elementType: "geometry.fill",
          stylers: [
            { color: "#E54C97" }
          ]
        },{
          featureType: "road",
          elementType: "labels.text",
          stylers: [
            { color: "#ffffff" },
          ]
        },{
          featureType: "road",
          elementType: "geometry.stroke",
          stylers: [
            { color: "#eb91bc" }
          ]
        },{
          featureType: "road",
          elementType: "labels",
          stylers: [
            { visibility: "simplified" }
          ]
        },{
          featureType: "poi.business",
          stylers: [
            { visibility: "off" }
          ]
        },{
          featureType: "poi",
          stylers: [
            { visibility: "off" }
          ]
        },{
          featureType: "transit.station.bus",
          stylers: [
            { visibility: "off" }
          ]
        },{
          featureType: "poi.park",
          elementType: "geometry.fill",
          stylers: [
            { color: "#eb91bc" },
            { visibility: "on" }
          ]
        },{
          featureType: "poi.park",
          elementType: "labels",
          stylers: [
            { visibility: "off" }
          ]
        },{
          featureType: "administrative",
          elementType: "all",
          stylers: [
            { visibility: "simplified" }
          ]
        },{
          featureType: "administrative",
          elementType: "labels",
          stylers: [
            { color: "#ffffff" }
          ]
        },{
          featureType: "water",
          elementType: "all",
          stylers: [
            { visibility: "simplified" },
            { color: "#E54C97"}
          ]
        },{
          featureType: "transit.station.rail",
          elementType: "all",
          stylers: [
            { visibility: "off" }
          ]
        }
      ]

      // Test for touch and disable if true
      if (Modernizr.touch) {   
          var dragstate = false
      } else {   
          var dragstate = true
      } 

      var mapOptions = {
        zoom: 17,
        center: firebelly,
        disableDefaultUI: true,
        draggable: dragstate,
        mapTypeControlOptions: {
          mapTypeIds: [google.maps.MapTypeId.ROADMAP, MY_MAPTYPE_ID]
        },
        mapTypeId: MY_MAPTYPE_ID
      }
      var map = new google.maps.Map(document.getElementById('map'), mapOptions);

      google.maps.event.addDomListener(window, 'resize', function() {
          map.setCenter(firebelly);
      });

      var image = {
        url: "<%= asset_path 'marker.svg' %>"
      };
      var link = 'https://www.google.com/maps/place/Reason+to+Give/@41.900868,-87.694523,15z/data=!4m2!3m1!1s0x0:0xee5c8496d8160eec?sa=X&ei=SS9mVMn4JMSfyATb44DYBQ&ved=0CHEQ_BIwDQ'
      var marker = new google.maps.Marker({
          position: firebelly,
          map: map,
          animation: google.maps.Animation.DROP,
          title: 'Firebelly Design',
          icon: image,
          url: link
      });

      var styledMapOptions = {
          name: 'Custom Style'
        };

      var customMapType = new google.maps.StyledMapType(styles, styledMapOptions);

      map.mapTypes.set(MY_MAPTYPE_ID, customMapType);

      google.maps.event.addListener(marker, 'click', function() {
          window.location.href = this.url;
      });
    }

    google.maps.event.addDomListener(window, 'load', initialize);
  };

  function _tweetIt() {
    window.twttr=(function(d,s,id){var t,js,fjs=d.getElementsByTagName(s)[0];if(d.getElementById(id)){return}js=d.createElement(s);js.id=id;js.src="https://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);return window.twttr||(t={_e:[],ready:function(f){t._e.push(f)}})}(document,"script","twitter-wjs"));

    function popitup(url, title, w, h) {
      var left = (screen.width/2)-(500/2);
      var top = (screen.height/2)-(200/2);
      newwindow=window.open(url, title, 'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=500, height=240, top='+top+', left='+left);
      if (window.focus) {newwindow.focus()}
      return false;
    }

    $('.tweet-it').on('click', function (e) {
      e.preventDefault();
      var turl = $(this).attr('href');
      popitup(turl);
    });
  };

  function _animatedCharts() {
    $('.charts-slider').slick({
      autoplay: false,
      onInit: function(slider) {
        animateBar();
      },
      onAfterChange: function(slider) {
        animateBar();
        $('.circle-graph').hide().show().circleProgress('redraw');
      }
    });

    function animateBar() {
      $('.bar-chart .bar-fill').hide();
      $('.slick-active .bar-chart .bar-fill').animate({width:'toggle'}, 1000, 'easeInOutCubic');
    }

    $('.circle-graph').each(function () {
      var percentage = $(this).find('.percentage').text().replace('%', '');
      var percentage = parseFloat(percentage);
      var pValue = percentage / 100;
      $(this).circleProgress({
          value: pValue,
          fill: { color: '#E54C97' },
          emptyFill: 'rgb(231, 173, 202)',
          startAngle: -Math.PI / 4 * 2,
      }).on('circle-animation-progress', function(event, progress, stepValue) {
        $(this).find('span').text(String((stepValue * 100).toFixed(1)) + '%');
      });
    });

  };

  // track ajax pages in Analytics
  function _trackPage() {
      if (typeof ga != 'undefined') ga('send', 'pageview', document.location.href);
  };

  // track events in Analytics
  function _trackEvent(category, action) {
      if (typeof ga != 'undefined') ga('send', 'event', category, action);
  };

  // public functions
  return {
    init: _init,
    resize: _resize,
    showCart: _showCart,
    hideCart: _hideCart,
    initVideo: _initVideo,
    checkoutSubmit: _checkoutSubmit,
    onPlayerReady: _onPlayerReady,
    onPlayerStateChange: _onPlayerStateChange,
    closeVideo: _closeVideo
  };

})(jQuery);


// fire up the mothership
$(document).ready(RTG.init);
// zig-zag the mothership
$(window).resize(RTG.resize);

// this function gets called when YouTube API is ready to use
function onYouTubePlayerAPIReady() {
  RTG.initVideo();
}

// Inject YouTube API script
var tag = document.createElement('script');
tag.src = "//www.youtube.com/player_api";
var firstScriptTag = document.getElementsByTagName('script')[0];
firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
